package andxor

import andxor.Sequence.ops._
import andxor.tuple._
import andxor.Transform.ops._
import scalaz.{\/, -\/, \/-, ~>, Apply, Functor, InvariantFunctor, Monoid}
import scalaz.Id.Id

object types {
  object dummy {

    sealed trait Dummy1; object Dummy1 { implicit val inst: Dummy1 = new Dummy1 {} }
    sealed trait Dummy2; object Dummy2 { implicit val inst: Dummy2 = new Dummy2 {} }
    sealed trait Dummy3; object Dummy3 { implicit val inst: Dummy3 = new Dummy3 {} }
    sealed trait Dummy4; object Dummy4 { implicit val inst: Dummy4 = new Dummy4 {} }
    sealed trait Dummy5; object Dummy5 { implicit val inst: Dummy5 = new Dummy5 {} }
    sealed trait Dummy6; object Dummy6 { implicit val inst: Dummy6 = new Dummy6 {} }
    sealed trait Dummy7; object Dummy7 { implicit val inst: Dummy7 = new Dummy7 {} }
    sealed trait Dummy8; object Dummy8 { implicit val inst: Dummy8 = new Dummy8 {} }
    sealed trait Dummy9; object Dummy9 { implicit val inst: Dummy9 = new Dummy9 {} }
    sealed trait Dummy10; object Dummy10 { implicit val inst: Dummy10 = new Dummy10 {} }
    sealed trait Dummy11; object Dummy11 { implicit val inst: Dummy11 = new Dummy11 {} }
    sealed trait Dummy12; object Dummy12 { implicit val inst: Dummy12 = new Dummy12 {} }
    sealed trait Dummy13; object Dummy13 { implicit val inst: Dummy13 = new Dummy13 {} }
    sealed trait Dummy14; object Dummy14 { implicit val inst: Dummy14 = new Dummy14 {} }
    sealed trait Dummy15; object Dummy15 { implicit val inst: Dummy15 = new Dummy15 {} }
    sealed trait Dummy16; object Dummy16 { implicit val inst: Dummy16 = new Dummy16 {} }
    sealed trait Dummy17; object Dummy17 { implicit val inst: Dummy17 = new Dummy17 {} }
    sealed trait Dummy18; object Dummy18 { implicit val inst: Dummy18 = new Dummy18 {} }
    sealed trait Dummy19; object Dummy19 { implicit val inst: Dummy19 = new Dummy19 {} }
    sealed trait Dummy20; object Dummy20 { implicit val inst: Dummy20 = new Dummy20 {} }
    sealed trait Dummy21; object Dummy21 { implicit val inst: Dummy21 = new Dummy21 {} }
    sealed trait Dummy22; object Dummy22 { implicit val inst: Dummy22 = new Dummy22 {} }
  }

  // import dummy._

  private val MF = InvariantFunctor[Monoid]

  @newtype case class Prod1[F[_], A1](run: F[A1]) {
    def t1: F[A1] = run

  }

  trait Prod1LP {
    // format: off
    implicit def Prod1Transform[A1]: Transform[Prod1[?[_], A1]] =
      new Transform[Prod1[?[_], A1]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod1[F, A1] => Prod1[G, A1] =
          p => Prod1[G, A1](nt(p.run))
      }

    implicit def Prod1Sequence[A1]: Sequence[Prod1[?[_], A1], Apply] =
      new Sequence[Prod1[?[_], A1], Apply] {
        def sequence[F[_]](p: Prod1[F, A1])(implicit F: Apply[F]): F[Prod1[Id, A1]] =
          F.map(p.run)((i0: Id[A1]) => Prod1[Id, A1](i0))
      }
    // format: on

    implicit def Prod1Monoid[F[_], A1](implicit M: Monoid[F[A1]]): Monoid[Prod1[F, A1]] =
      MF.xmap(M, Prod1[F, A1](_: F[A1]), (_: Prod1[F, A1]).run)

    implicit def lifta0F[F[_], A1]: Inj[Prod1[F, A1], F[A1]] = {
      Inj.instance(x => Prod1[F, A1](x))
    }

    implicit def lifta0FInverse[F[_], A1]: Inj[F[A1], Prod1[F, A1]] = Inj.instance(_.run)
  }

  object Prod1 extends Prod1LP {
    implicit def lifta0Id[A1]: Inj[Prod1[Id, A1], Id[A1]] = lifta0F[Id, A1]

    implicit def lifta0IdInverse[A1]: Inj[Id[A1], Prod1[Id, A1]] = lifta0FInverse[Id, A1]
  }

  @newtype case class Cop1[F[_], A1](run: F[A1])

  trait Cop1LP {
    implicit def Cop1Transform[A1]: Transform[Cop1[?[_], A1]] =
      new Transform[Cop1[?[_], A1]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop1[F, A1] => Cop1[G, A1] =
          c => Cop1[G, A1](nt(c.run))
      }

    implicit def Cop1Sequence[A1]: Sequence[Cop1[?[_], A1], Functor] =
      new Sequence[Cop1[?[_], A1], Functor] {
        def sequence[F[_]](c: Cop1[F, A1])(implicit F: Functor[F]): F[Cop1[Id, A1]] =
          c.run match {
            case x => F.map(x)(y => Cop1[Id, A1](y))
          }
      }

    implicit def prisma0F[F[_], A1]: Prism[Cop1[F, A1], F[A1]] = new Prism[Cop1[F, A1], F[A1]] {
      def getOption(c: Cop1[F, A1]): Option[F[A1]] = Some(c.run)
      def reverseGet(x: F[A1]): Cop1[F, A1] = Cop1[F, A1](x)
    }

    implicit def inja0F[F[_], A1]: Inj[Cop1[F, A1], F[A1]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1]: Inj[Option[F[A1]], Cop1[F, A1]] = Inj.instance(prisma0F.getOption(_))
  }

  object Cop1 extends Cop1LP {
    implicit def prisma0Id[A1]: Prism[Cop1[Id, A1], Id[A1]] = prisma0F[Id, A1]

    implicit def inja0Id[A1]: Inj[Cop1[Id, A1], Id[A1]] = inja0F[Id, A1]

    implicit def inja0IdInverse[F[_], A1]: Inj[Option[Id[A1]], Cop1[Id, A1]] = inja0FInverse[Id, A1]
  }

  @newtype case class Prod2[F[_], A1 <: AndXor, A2 <: AndXor](run: (A1#Prod[F], A2#Prod[F])) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2

  }

  trait Prod2LP {
    // format: off
    implicit def Prod2Transform[A1 <: AndXor, A2 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod]): Transform[Prod2[?[_], A1, A2]] =
      new Transform[Prod2[?[_], A1, A2]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod2[F, A1, A2] => Prod2[G, A1, A2] =
          p => Prod2[G, A1, A2]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2)))
      }

    implicit def Prod2Sequence[A1 <: AndXor, A2 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply]): Sequence[Prod2[?[_], A1, A2], Apply] =
      new Sequence[Prod2[?[_], A1, A2], Apply] {
        def sequence[F[_]](p: Prod2[F, A1, A2])(implicit F: Apply[F]): F[Prod2[Id, A1, A2]] =
          F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => Prod2[Id, A1, A2]((i0, i1))))
      }
    // format: on

    implicit def Prod2Monoid[F[_], A1 <: AndXor, A2 <: AndXor](implicit M: Monoid[(A1#Prod[F], A2#Prod[F])]): Monoid[Prod2[F, A1, A2]] =
      MF.xmap(M, Prod2[F, A1, A2](_: (A1#Prod[F], A2#Prod[F])), (_: Prod2[F, A1, A2]).run)

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor](implicit M: Monoid[Prod2[F, A1, A2]]): Inj[Prod2[F, A1, A2], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod2[F, A1, A2]((x, t.t2)))
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor]: Inj[A1#Prod[F], Prod2[F, A1, A2]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor](implicit M: Monoid[Prod2[F, A1, A2]]): Inj[Prod2[F, A1, A2], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod2[F, A1, A2]((t.t1, x)))
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor]: Inj[A2#Prod[F], Prod2[F, A1, A2]] = Inj.instance(_.t2)
  }

  object Prod2 extends Prod2LP {
    implicit def lifta0Id[A1 <: AndXor, A2 <: AndXor](implicit M: Monoid[Prod2[Id, A1, A2]]): Inj[Prod2[Id, A1, A2], A1#Prod[Id]] = lifta0F[Id, A1, A2]

    implicit def lifta0IdInverse[A1 <: AndXor, A2 <: AndXor]: Inj[A1#Prod[Id], Prod2[Id, A1, A2]] = lifta0FInverse[Id, A1, A2]

    implicit def lifta1Id[A1 <: AndXor, A2 <: AndXor](implicit M: Monoid[Prod2[Id, A1, A2]]): Inj[Prod2[Id, A1, A2], A2#Prod[Id]] = lifta1F[Id, A1, A2]

    implicit def lifta1IdInverse[A1 <: AndXor, A2 <: AndXor]: Inj[A2#Prod[Id], Prod2[Id, A1, A2]] = lifta1FInverse[Id, A1, A2]
  }

  @newtype case class Cop2[F[_], A1 <: AndXor, A2 <: AndXor](run: (A1#Cop[F] \/ A2#Cop[F]))

  trait Cop2LP {
    implicit def Cop2Transform[A1 <: AndXor, A2 <: AndXor](implicit trans0: Transform[A1#Cop], trans1: Transform[A2#Cop]): Transform[Cop2[?[_], A1, A2]] =
      new Transform[Cop2[?[_], A1, A2]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop2[F, A1, A2] => Cop2[G, A1, A2] =
          c => Cop2[G, A1, A2](c.run.bimap(_.transform(nt), _.transform(nt)))
      }

    implicit def Cop2Sequence[A1 <: AndXor, A2 <: AndXor](implicit seq0: Sequence[A1#Cop, Functor], seq1: Sequence[A2#Cop, Functor]): Sequence[Cop2[?[_], A1, A2], Functor] =
      new Sequence[Cop2[?[_], A1, A2], Functor] {
        def sequence[F[_]](c: Cop2[F, A1, A2])(implicit F: Functor[F]): F[Cop2[Id, A1, A2]] =
          c.run match {
            case -\/(x) => F.map(x.sequence)(y => Cop2[Id, A1, A2](-\/(y)))
            case \/-(x) => F.map(x.sequence)(y => Cop2[Id, A1, A2](\/-(y)))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor]: Prism[Cop2[F, A1, A2], A1#Cop[F]] = new Prism[Cop2[F, A1, A2], A1#Cop[F]] {
      def getOption(c: Cop2[F, A1, A2]): Option[A1#Cop[F]] = c.run match {
        case -\/(x) => Some(x)
        case _      => None
      }
      def reverseGet(x: A1#Cop[F]): Cop2[F, A1, A2] = Cop2[F, A1, A2](-\/(x))
    }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor]: Inj[Cop2[F, A1, A2], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor]: Inj[Option[A1#Cop[F]], Cop2[F, A1, A2]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor]: Prism[Cop2[F, A1, A2], A2#Cop[F]] = new Prism[Cop2[F, A1, A2], A2#Cop[F]] {
      def getOption(c: Cop2[F, A1, A2]): Option[A2#Cop[F]] = c.run match {
        case \/-(x) => Some(x)
        case _      => None
      }
      def reverseGet(x: A2#Cop[F]): Cop2[F, A1, A2] = Cop2[F, A1, A2](\/-(x))
    }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor]: Inj[Cop2[F, A1, A2], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor]: Inj[Option[A2#Cop[F]], Cop2[F, A1, A2]] = Inj.instance(prisma1F.getOption(_))
  }

  object Cop2 extends Cop2LP {
    implicit def prisma0Id[A1 <: AndXor, A2 <: AndXor]: Prism[Cop2[Id, A1, A2], A1#Cop[Id]] = prisma0F[Id, A1, A2]

    implicit def inja0Id[A1 <: AndXor, A2 <: AndXor]: Inj[Cop2[Id, A1, A2], A1#Cop[Id]] = inja0F[Id, A1, A2]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor]: Inj[Option[A1#Cop[Id]], Cop2[Id, A1, A2]] = inja0FInverse[Id, A1, A2]

    implicit def prisma1Id[A1 <: AndXor, A2 <: AndXor]: Prism[Cop2[Id, A1, A2], A2#Cop[Id]] = prisma1F[Id, A1, A2]

    implicit def inja1Id[A1 <: AndXor, A2 <: AndXor]: Inj[Cop2[Id, A1, A2], A2#Cop[Id]] = inja1F[Id, A1, A2]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor]: Inj[Option[A2#Cop[Id]], Cop2[Id, A1, A2]] = inja1FInverse[Id, A1, A2]
  }

  @newtype case class Prod3[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor](run: (A1#Prod[F], A2#Prod[F], A3#Prod[F])) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3

  }

  trait Prod3LP {
    // format: off
    implicit def Prod3Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod]): Transform[Prod3[?[_], A1, A2, A3]] =
      new Transform[Prod3[?[_], A1, A2, A3]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod3[F, A1, A2, A3] => Prod3[G, A1, A2, A3] =
          p => Prod3[G, A1, A2, A3]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3)))
      }

    implicit def Prod3Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply]): Sequence[Prod3[?[_], A1, A2, A3], Apply] =
      new Sequence[Prod3[?[_], A1, A2, A3], Apply] {
        def sequence[F[_]](p: Prod3[F, A1, A2, A3])(implicit F: Apply[F]): F[Prod3[Id, A1, A2, A3]] =
          F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => Prod3[Id, A1, A2, A3]((i0, i1, i2)))))
      }
    // format: on

    implicit def Prod3Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor](implicit M: Monoid[(A1#Prod[F], A2#Prod[F], A3#Prod[F])]): Monoid[Prod3[F, A1, A2, A3]] =
      MF.xmap(M, Prod3[F, A1, A2, A3](_: (A1#Prod[F], A2#Prod[F], A3#Prod[F])), (_: Prod3[F, A1, A2, A3]).run)

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor](implicit M: Monoid[Prod3[F, A1, A2, A3]]): Inj[Prod3[F, A1, A2, A3], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod3[F, A1, A2, A3]((x, t.t2, t.t3)))
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[A1#Prod[F], Prod3[F, A1, A2, A3]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor](implicit M: Monoid[Prod3[F, A1, A2, A3]]): Inj[Prod3[F, A1, A2, A3], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod3[F, A1, A2, A3]((t.t1, x, t.t3)))
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[A2#Prod[F], Prod3[F, A1, A2, A3]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor](implicit M: Monoid[Prod3[F, A1, A2, A3]]): Inj[Prod3[F, A1, A2, A3], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod3[F, A1, A2, A3]((t.t1, t.t2, x)))
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[A3#Prod[F], Prod3[F, A1, A2, A3]] = Inj.instance(_.t3)
  }

  object Prod3 extends Prod3LP {
    implicit def lifta0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor](implicit M: Monoid[Prod3[Id, A1, A2, A3]]): Inj[Prod3[Id, A1, A2, A3], A1#Prod[Id]] = lifta0F[Id, A1, A2, A3]

    implicit def lifta0IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[A1#Prod[Id], Prod3[Id, A1, A2, A3]] = lifta0FInverse[Id, A1, A2, A3]

    implicit def lifta1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor](implicit M: Monoid[Prod3[Id, A1, A2, A3]]): Inj[Prod3[Id, A1, A2, A3], A2#Prod[Id]] = lifta1F[Id, A1, A2, A3]

    implicit def lifta1IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[A2#Prod[Id], Prod3[Id, A1, A2, A3]] = lifta1FInverse[Id, A1, A2, A3]

    implicit def lifta2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor](implicit M: Monoid[Prod3[Id, A1, A2, A3]]): Inj[Prod3[Id, A1, A2, A3], A3#Prod[Id]] = lifta2F[Id, A1, A2, A3]

    implicit def lifta2IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[A3#Prod[Id], Prod3[Id, A1, A2, A3]] = lifta2FInverse[Id, A1, A2, A3]
  }

  @newtype case class Cop3[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor](run: (A1#Cop[F] \/ (A2#Cop[F] \/ A3#Cop[F])))

  trait Cop3LP {
    implicit def Cop3Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor](implicit trans0: Transform[A1#Cop], trans1: Transform[A2#Cop], trans2: Transform[A3#Cop]): Transform[Cop3[?[_], A1, A2, A3]] =
      new Transform[Cop3[?[_], A1, A2, A3]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop3[F, A1, A2, A3] => Cop3[G, A1, A2, A3] =
          c => Cop3[G, A1, A2, A3](c.run.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))
      }

    implicit def Cop3Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor]
    ): Sequence[Cop3[?[_], A1, A2, A3], Functor] =
      new Sequence[Cop3[?[_], A1, A2, A3], Functor] {
        def sequence[F[_]](c: Cop3[F, A1, A2, A3])(implicit F: Functor[F]): F[Cop3[Id, A1, A2, A3]] =
          c.run match {
            case -\/(x)      => F.map(x.sequence)(y => Cop3[Id, A1, A2, A3](-\/(y)))
            case \/-(-\/(x)) => F.map(x.sequence)(y => Cop3[Id, A1, A2, A3](\/-(-\/(y))))
            case \/-(\/-(x)) => F.map(x.sequence)(y => Cop3[Id, A1, A2, A3](\/-(\/-(y))))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Prism[Cop3[F, A1, A2, A3], A1#Cop[F]] = new Prism[Cop3[F, A1, A2, A3], A1#Cop[F]] {
      def getOption(c: Cop3[F, A1, A2, A3]): Option[A1#Cop[F]] = c.run match {
        case -\/(x) => Some(x)
        case _      => None
      }
      def reverseGet(x: A1#Cop[F]): Cop3[F, A1, A2, A3] = Cop3[F, A1, A2, A3](-\/(x))
    }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[Cop3[F, A1, A2, A3], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[Option[A1#Cop[F]], Cop3[F, A1, A2, A3]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Prism[Cop3[F, A1, A2, A3], A2#Cop[F]] = new Prism[Cop3[F, A1, A2, A3], A2#Cop[F]] {
      def getOption(c: Cop3[F, A1, A2, A3]): Option[A2#Cop[F]] = c.run match {
        case \/-(-\/(x)) => Some(x)
        case _           => None
      }
      def reverseGet(x: A2#Cop[F]): Cop3[F, A1, A2, A3] = Cop3[F, A1, A2, A3](\/-(-\/(x)))
    }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[Cop3[F, A1, A2, A3], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[Option[A2#Cop[F]], Cop3[F, A1, A2, A3]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Prism[Cop3[F, A1, A2, A3], A3#Cop[F]] = new Prism[Cop3[F, A1, A2, A3], A3#Cop[F]] {
      def getOption(c: Cop3[F, A1, A2, A3]): Option[A3#Cop[F]] = c.run match {
        case \/-(\/-(x)) => Some(x)
        case _           => None
      }
      def reverseGet(x: A3#Cop[F]): Cop3[F, A1, A2, A3] = Cop3[F, A1, A2, A3](\/-(\/-(x)))
    }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[Cop3[F, A1, A2, A3], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[Option[A3#Cop[F]], Cop3[F, A1, A2, A3]] = Inj.instance(prisma2F.getOption(_))
  }

  object Cop3 extends Cop3LP {
    implicit def prisma0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Prism[Cop3[Id, A1, A2, A3], A1#Cop[Id]] = prisma0F[Id, A1, A2, A3]

    implicit def inja0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[Cop3[Id, A1, A2, A3], A1#Cop[Id]] = inja0F[Id, A1, A2, A3]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[Option[A1#Cop[Id]], Cop3[Id, A1, A2, A3]] = inja0FInverse[Id, A1, A2, A3]

    implicit def prisma1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Prism[Cop3[Id, A1, A2, A3], A2#Cop[Id]] = prisma1F[Id, A1, A2, A3]

    implicit def inja1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[Cop3[Id, A1, A2, A3], A2#Cop[Id]] = inja1F[Id, A1, A2, A3]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[Option[A2#Cop[Id]], Cop3[Id, A1, A2, A3]] = inja1FInverse[Id, A1, A2, A3]

    implicit def prisma2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Prism[Cop3[Id, A1, A2, A3], A3#Cop[Id]] = prisma2F[Id, A1, A2, A3]

    implicit def inja2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[Cop3[Id, A1, A2, A3], A3#Cop[Id]] = inja2F[Id, A1, A2, A3]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor]: Inj[Option[A3#Cop[Id]], Cop3[Id, A1, A2, A3]] = inja2FInverse[Id, A1, A2, A3]
  }

  @newtype case class Prod4[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](run: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F])) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4

  }

  trait Prod4LP {
    // format: off
    implicit def Prod4Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod]): Transform[Prod4[?[_], A1, A2, A3, A4]] =
      new Transform[Prod4[?[_], A1, A2, A3, A4]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod4[F, A1, A2, A3, A4] => Prod4[G, A1, A2, A3, A4] =
          p => Prod4[G, A1, A2, A3, A4]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4)))
      }

    implicit def Prod4Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply]): Sequence[Prod4[?[_], A1, A2, A3, A4], Apply] =
      new Sequence[Prod4[?[_], A1, A2, A3, A4], Apply] {
        def sequence[F[_]](p: Prod4[F, A1, A2, A3, A4])(implicit F: Apply[F]): F[Prod4[Id, A1, A2, A3, A4]] =
          F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => Prod4[Id, A1, A2, A3, A4]((i0, i1, i2, i3))))))
      }
    // format: on

    implicit def Prod4Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](implicit M: Monoid[(A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F])]): Monoid[Prod4[F, A1, A2, A3, A4]] =
      MF.xmap(M, Prod4[F, A1, A2, A3, A4](_: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F])), (_: Prod4[F, A1, A2, A3, A4]).run)

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](implicit M: Monoid[Prod4[F, A1, A2, A3, A4]]): Inj[Prod4[F, A1, A2, A3, A4], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod4[F, A1, A2, A3, A4]((x, t.t2, t.t3, t.t4)))
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[A1#Prod[F], Prod4[F, A1, A2, A3, A4]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](implicit M: Monoid[Prod4[F, A1, A2, A3, A4]]): Inj[Prod4[F, A1, A2, A3, A4], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod4[F, A1, A2, A3, A4]((t.t1, x, t.t3, t.t4)))
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[A2#Prod[F], Prod4[F, A1, A2, A3, A4]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](implicit M: Monoid[Prod4[F, A1, A2, A3, A4]]): Inj[Prod4[F, A1, A2, A3, A4], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod4[F, A1, A2, A3, A4]((t.t1, t.t2, x, t.t4)))
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[A3#Prod[F], Prod4[F, A1, A2, A3, A4]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](implicit M: Monoid[Prod4[F, A1, A2, A3, A4]]): Inj[Prod4[F, A1, A2, A3, A4], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod4[F, A1, A2, A3, A4]((t.t1, t.t2, t.t3, x)))
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[A4#Prod[F], Prod4[F, A1, A2, A3, A4]] = Inj.instance(_.t4)
  }

  object Prod4 extends Prod4LP {
    implicit def lifta0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](implicit M: Monoid[Prod4[Id, A1, A2, A3, A4]]): Inj[Prod4[Id, A1, A2, A3, A4], A1#Prod[Id]] =
      lifta0F[Id, A1, A2, A3, A4]

    implicit def lifta0IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[A1#Prod[Id], Prod4[Id, A1, A2, A3, A4]] = lifta0FInverse[Id, A1, A2, A3, A4]

    implicit def lifta1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](implicit M: Monoid[Prod4[Id, A1, A2, A3, A4]]): Inj[Prod4[Id, A1, A2, A3, A4], A2#Prod[Id]] =
      lifta1F[Id, A1, A2, A3, A4]

    implicit def lifta1IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[A2#Prod[Id], Prod4[Id, A1, A2, A3, A4]] = lifta1FInverse[Id, A1, A2, A3, A4]

    implicit def lifta2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](implicit M: Monoid[Prod4[Id, A1, A2, A3, A4]]): Inj[Prod4[Id, A1, A2, A3, A4], A3#Prod[Id]] =
      lifta2F[Id, A1, A2, A3, A4]

    implicit def lifta2IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[A3#Prod[Id], Prod4[Id, A1, A2, A3, A4]] = lifta2FInverse[Id, A1, A2, A3, A4]

    implicit def lifta3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](implicit M: Monoid[Prod4[Id, A1, A2, A3, A4]]): Inj[Prod4[Id, A1, A2, A3, A4], A4#Prod[Id]] =
      lifta3F[Id, A1, A2, A3, A4]

    implicit def lifta3IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[A4#Prod[Id], Prod4[Id, A1, A2, A3, A4]] = lifta3FInverse[Id, A1, A2, A3, A4]
  }

  @newtype case class Cop4[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ A4#Cop[F]))))

  trait Cop4LP {
    implicit def Cop4Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop]
    ): Transform[Cop4[?[_], A1, A2, A3, A4]] =
      new Transform[Cop4[?[_], A1, A2, A3, A4]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop4[F, A1, A2, A3, A4] => Cop4[G, A1, A2, A3, A4] =
          c => Cop4[G, A1, A2, A3, A4](c.run.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt)))))
      }

    implicit def Cop4Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor]
    ): Sequence[Cop4[?[_], A1, A2, A3, A4], Functor] =
      new Sequence[Cop4[?[_], A1, A2, A3, A4], Functor] {
        def sequence[F[_]](c: Cop4[F, A1, A2, A3, A4])(implicit F: Functor[F]): F[Cop4[Id, A1, A2, A3, A4]] =
          c.run match {
            case -\/(x)           => F.map(x.sequence)(y => Cop4[Id, A1, A2, A3, A4](-\/(y)))
            case \/-(-\/(x))      => F.map(x.sequence)(y => Cop4[Id, A1, A2, A3, A4](\/-(-\/(y))))
            case \/-(\/-(-\/(x))) => F.map(x.sequence)(y => Cop4[Id, A1, A2, A3, A4](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(x))) => F.map(x.sequence)(y => Cop4[Id, A1, A2, A3, A4](\/-(\/-(\/-(y)))))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Prism[Cop4[F, A1, A2, A3, A4], A1#Cop[F]] = new Prism[Cop4[F, A1, A2, A3, A4], A1#Cop[F]] {
      def getOption(c: Cop4[F, A1, A2, A3, A4]): Option[A1#Cop[F]] = c.run match {
        case -\/(x) => Some(x)
        case _      => None
      }
      def reverseGet(x: A1#Cop[F]): Cop4[F, A1, A2, A3, A4] = Cop4[F, A1, A2, A3, A4](-\/(x))
    }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Cop4[F, A1, A2, A3, A4], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Option[A1#Cop[F]], Cop4[F, A1, A2, A3, A4]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Prism[Cop4[F, A1, A2, A3, A4], A2#Cop[F]] = new Prism[Cop4[F, A1, A2, A3, A4], A2#Cop[F]] {
      def getOption(c: Cop4[F, A1, A2, A3, A4]): Option[A2#Cop[F]] = c.run match {
        case \/-(-\/(x)) => Some(x)
        case _           => None
      }
      def reverseGet(x: A2#Cop[F]): Cop4[F, A1, A2, A3, A4] = Cop4[F, A1, A2, A3, A4](\/-(-\/(x)))
    }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Cop4[F, A1, A2, A3, A4], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Option[A2#Cop[F]], Cop4[F, A1, A2, A3, A4]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Prism[Cop4[F, A1, A2, A3, A4], A3#Cop[F]] = new Prism[Cop4[F, A1, A2, A3, A4], A3#Cop[F]] {
      def getOption(c: Cop4[F, A1, A2, A3, A4]): Option[A3#Cop[F]] = c.run match {
        case \/-(\/-(-\/(x))) => Some(x)
        case _                => None
      }
      def reverseGet(x: A3#Cop[F]): Cop4[F, A1, A2, A3, A4] = Cop4[F, A1, A2, A3, A4](\/-(\/-(-\/(x))))
    }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Cop4[F, A1, A2, A3, A4], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Option[A3#Cop[F]], Cop4[F, A1, A2, A3, A4]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Prism[Cop4[F, A1, A2, A3, A4], A4#Cop[F]] = new Prism[Cop4[F, A1, A2, A3, A4], A4#Cop[F]] {
      def getOption(c: Cop4[F, A1, A2, A3, A4]): Option[A4#Cop[F]] = c.run match {
        case \/-(\/-(\/-(x))) => Some(x)
        case _                => None
      }
      def reverseGet(x: A4#Cop[F]): Cop4[F, A1, A2, A3, A4] = Cop4[F, A1, A2, A3, A4](\/-(\/-(\/-(x))))
    }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Cop4[F, A1, A2, A3, A4], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Option[A4#Cop[F]], Cop4[F, A1, A2, A3, A4]] = Inj.instance(prisma3F.getOption(_))
  }

  object Cop4 extends Cop4LP {
    implicit def prisma0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Prism[Cop4[Id, A1, A2, A3, A4], A1#Cop[Id]] = prisma0F[Id, A1, A2, A3, A4]

    implicit def inja0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Cop4[Id, A1, A2, A3, A4], A1#Cop[Id]] = inja0F[Id, A1, A2, A3, A4]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Option[A1#Cop[Id]], Cop4[Id, A1, A2, A3, A4]] = inja0FInverse[Id, A1, A2, A3, A4]

    implicit def prisma1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Prism[Cop4[Id, A1, A2, A3, A4], A2#Cop[Id]] = prisma1F[Id, A1, A2, A3, A4]

    implicit def inja1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Cop4[Id, A1, A2, A3, A4], A2#Cop[Id]] = inja1F[Id, A1, A2, A3, A4]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Option[A2#Cop[Id]], Cop4[Id, A1, A2, A3, A4]] = inja1FInverse[Id, A1, A2, A3, A4]

    implicit def prisma2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Prism[Cop4[Id, A1, A2, A3, A4], A3#Cop[Id]] = prisma2F[Id, A1, A2, A3, A4]

    implicit def inja2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Cop4[Id, A1, A2, A3, A4], A3#Cop[Id]] = inja2F[Id, A1, A2, A3, A4]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Option[A3#Cop[Id]], Cop4[Id, A1, A2, A3, A4]] = inja2FInverse[Id, A1, A2, A3, A4]

    implicit def prisma3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Prism[Cop4[Id, A1, A2, A3, A4], A4#Cop[Id]] = prisma3F[Id, A1, A2, A3, A4]

    implicit def inja3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Cop4[Id, A1, A2, A3, A4], A4#Cop[Id]] = inja3F[Id, A1, A2, A3, A4]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor]: Inj[Option[A4#Cop[Id]], Cop4[Id, A1, A2, A3, A4]] = inja3FInverse[Id, A1, A2, A3, A4]
  }

  @newtype case class Prod5[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](run: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F])) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5

  }

  trait Prod5LP {
    // format: off
    implicit def Prod5Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod]): Transform[Prod5[?[_], A1, A2, A3, A4, A5]] =
      new Transform[Prod5[?[_], A1, A2, A3, A4, A5]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod5[F, A1, A2, A3, A4, A5] => Prod5[G, A1, A2, A3, A4, A5] =
          p => Prod5[G, A1, A2, A3, A4, A5]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5)))
      }

    implicit def Prod5Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply]): Sequence[Prod5[?[_], A1, A2, A3, A4, A5], Apply] =
      new Sequence[Prod5[?[_], A1, A2, A3, A4, A5], Apply] {
        def sequence[F[_]](p: Prod5[F, A1, A2, A3, A4, A5])(implicit F: Apply[F]): F[Prod5[Id, A1, A2, A3, A4, A5]] =
          F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => Prod5[Id, A1, A2, A3, A4, A5]((i0, i1, i2, i3, i4)))))))
      }
    // format: on

    implicit def Prod5Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](
        implicit M: Monoid[(A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F])]
    ): Monoid[Prod5[F, A1, A2, A3, A4, A5]] =
      MF.xmap(M, Prod5[F, A1, A2, A3, A4, A5](_: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F])), (_: Prod5[F, A1, A2, A3, A4, A5]).run)

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](
        implicit M: Monoid[Prod5[F, A1, A2, A3, A4, A5]]
    ): Inj[Prod5[F, A1, A2, A3, A4, A5], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod5[F, A1, A2, A3, A4, A5]((x, t.t2, t.t3, t.t4, t.t5)))
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[A1#Prod[F], Prod5[F, A1, A2, A3, A4, A5]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](
        implicit M: Monoid[Prod5[F, A1, A2, A3, A4, A5]]
    ): Inj[Prod5[F, A1, A2, A3, A4, A5], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod5[F, A1, A2, A3, A4, A5]((t.t1, x, t.t3, t.t4, t.t5)))
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[A2#Prod[F], Prod5[F, A1, A2, A3, A4, A5]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](
        implicit M: Monoid[Prod5[F, A1, A2, A3, A4, A5]]
    ): Inj[Prod5[F, A1, A2, A3, A4, A5], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod5[F, A1, A2, A3, A4, A5]((t.t1, t.t2, x, t.t4, t.t5)))
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[A3#Prod[F], Prod5[F, A1, A2, A3, A4, A5]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](
        implicit M: Monoid[Prod5[F, A1, A2, A3, A4, A5]]
    ): Inj[Prod5[F, A1, A2, A3, A4, A5], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod5[F, A1, A2, A3, A4, A5]((t.t1, t.t2, t.t3, x, t.t5)))
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[A4#Prod[F], Prod5[F, A1, A2, A3, A4, A5]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](
        implicit M: Monoid[Prod5[F, A1, A2, A3, A4, A5]]
    ): Inj[Prod5[F, A1, A2, A3, A4, A5], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod5[F, A1, A2, A3, A4, A5]((t.t1, t.t2, t.t3, t.t4, x)))
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[A5#Prod[F], Prod5[F, A1, A2, A3, A4, A5]] = Inj.instance(_.t5)
  }

  object Prod5 extends Prod5LP {
    implicit def lifta0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](implicit M: Monoid[Prod5[Id, A1, A2, A3, A4, A5]]): Inj[Prod5[Id, A1, A2, A3, A4, A5], A1#Prod[Id]] =
      lifta0F[Id, A1, A2, A3, A4, A5]

    implicit def lifta0IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[A1#Prod[Id], Prod5[Id, A1, A2, A3, A4, A5]] = lifta0FInverse[Id, A1, A2, A3, A4, A5]

    implicit def lifta1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](implicit M: Monoid[Prod5[Id, A1, A2, A3, A4, A5]]): Inj[Prod5[Id, A1, A2, A3, A4, A5], A2#Prod[Id]] =
      lifta1F[Id, A1, A2, A3, A4, A5]

    implicit def lifta1IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[A2#Prod[Id], Prod5[Id, A1, A2, A3, A4, A5]] = lifta1FInverse[Id, A1, A2, A3, A4, A5]

    implicit def lifta2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](implicit M: Monoid[Prod5[Id, A1, A2, A3, A4, A5]]): Inj[Prod5[Id, A1, A2, A3, A4, A5], A3#Prod[Id]] =
      lifta2F[Id, A1, A2, A3, A4, A5]

    implicit def lifta2IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[A3#Prod[Id], Prod5[Id, A1, A2, A3, A4, A5]] = lifta2FInverse[Id, A1, A2, A3, A4, A5]

    implicit def lifta3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](implicit M: Monoid[Prod5[Id, A1, A2, A3, A4, A5]]): Inj[Prod5[Id, A1, A2, A3, A4, A5], A4#Prod[Id]] =
      lifta3F[Id, A1, A2, A3, A4, A5]

    implicit def lifta3IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[A4#Prod[Id], Prod5[Id, A1, A2, A3, A4, A5]] = lifta3FInverse[Id, A1, A2, A3, A4, A5]

    implicit def lifta4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](implicit M: Monoid[Prod5[Id, A1, A2, A3, A4, A5]]): Inj[Prod5[Id, A1, A2, A3, A4, A5], A5#Prod[Id]] =
      lifta4F[Id, A1, A2, A3, A4, A5]

    implicit def lifta4IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[A5#Prod[Id], Prod5[Id, A1, A2, A3, A4, A5]] = lifta4FInverse[Id, A1, A2, A3, A4, A5]
  }

  @newtype case class Cop5[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ A5#Cop[F])))))

  trait Cop5LP {
    implicit def Cop5Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop]
    ): Transform[Cop5[?[_], A1, A2, A3, A4, A5]] =
      new Transform[Cop5[?[_], A1, A2, A3, A4, A5]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop5[F, A1, A2, A3, A4, A5] => Cop5[G, A1, A2, A3, A4, A5] =
          c => Cop5[G, A1, A2, A3, A4, A5](c.run.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
      }

    implicit def Cop5Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor]
    ): Sequence[Cop5[?[_], A1, A2, A3, A4, A5], Functor] =
      new Sequence[Cop5[?[_], A1, A2, A3, A4, A5], Functor] {
        def sequence[F[_]](c: Cop5[F, A1, A2, A3, A4, A5])(implicit F: Functor[F]): F[Cop5[Id, A1, A2, A3, A4, A5]] =
          c.run match {
            case -\/(x)                => F.map(x.sequence)(y => Cop5[Id, A1, A2, A3, A4, A5](-\/(y)))
            case \/-(-\/(x))           => F.map(x.sequence)(y => Cop5[Id, A1, A2, A3, A4, A5](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))      => F.map(x.sequence)(y => Cop5[Id, A1, A2, A3, A4, A5](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x)))) => F.map(x.sequence)(y => Cop5[Id, A1, A2, A3, A4, A5](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(x)))) => F.map(x.sequence)(y => Cop5[Id, A1, A2, A3, A4, A5](\/-(\/-(\/-(\/-(y))))))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Prism[Cop5[F, A1, A2, A3, A4, A5], A1#Cop[F]] =
      new Prism[Cop5[F, A1, A2, A3, A4, A5], A1#Cop[F]] {
        def getOption(c: Cop5[F, A1, A2, A3, A4, A5]): Option[A1#Cop[F]] = c.run match {
          case -\/(x) => Some(x)
          case _      => None
        }
        def reverseGet(x: A1#Cop[F]): Cop5[F, A1, A2, A3, A4, A5] = Cop5[F, A1, A2, A3, A4, A5](-\/(x))
      }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Cop5[F, A1, A2, A3, A4, A5], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Option[A1#Cop[F]], Cop5[F, A1, A2, A3, A4, A5]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Prism[Cop5[F, A1, A2, A3, A4, A5], A2#Cop[F]] =
      new Prism[Cop5[F, A1, A2, A3, A4, A5], A2#Cop[F]] {
        def getOption(c: Cop5[F, A1, A2, A3, A4, A5]): Option[A2#Cop[F]] = c.run match {
          case \/-(-\/(x)) => Some(x)
          case _           => None
        }
        def reverseGet(x: A2#Cop[F]): Cop5[F, A1, A2, A3, A4, A5] = Cop5[F, A1, A2, A3, A4, A5](\/-(-\/(x)))
      }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Cop5[F, A1, A2, A3, A4, A5], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Option[A2#Cop[F]], Cop5[F, A1, A2, A3, A4, A5]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Prism[Cop5[F, A1, A2, A3, A4, A5], A3#Cop[F]] =
      new Prism[Cop5[F, A1, A2, A3, A4, A5], A3#Cop[F]] {
        def getOption(c: Cop5[F, A1, A2, A3, A4, A5]): Option[A3#Cop[F]] = c.run match {
          case \/-(\/-(-\/(x))) => Some(x)
          case _                => None
        }
        def reverseGet(x: A3#Cop[F]): Cop5[F, A1, A2, A3, A4, A5] = Cop5[F, A1, A2, A3, A4, A5](\/-(\/-(-\/(x))))
      }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Cop5[F, A1, A2, A3, A4, A5], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Option[A3#Cop[F]], Cop5[F, A1, A2, A3, A4, A5]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Prism[Cop5[F, A1, A2, A3, A4, A5], A4#Cop[F]] =
      new Prism[Cop5[F, A1, A2, A3, A4, A5], A4#Cop[F]] {
        def getOption(c: Cop5[F, A1, A2, A3, A4, A5]): Option[A4#Cop[F]] = c.run match {
          case \/-(\/-(\/-(-\/(x)))) => Some(x)
          case _                     => None
        }
        def reverseGet(x: A4#Cop[F]): Cop5[F, A1, A2, A3, A4, A5] = Cop5[F, A1, A2, A3, A4, A5](\/-(\/-(\/-(-\/(x)))))
      }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Cop5[F, A1, A2, A3, A4, A5], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Option[A4#Cop[F]], Cop5[F, A1, A2, A3, A4, A5]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Prism[Cop5[F, A1, A2, A3, A4, A5], A5#Cop[F]] =
      new Prism[Cop5[F, A1, A2, A3, A4, A5], A5#Cop[F]] {
        def getOption(c: Cop5[F, A1, A2, A3, A4, A5]): Option[A5#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(x)))) => Some(x)
          case _                     => None
        }
        def reverseGet(x: A5#Cop[F]): Cop5[F, A1, A2, A3, A4, A5] = Cop5[F, A1, A2, A3, A4, A5](\/-(\/-(\/-(\/-(x)))))
      }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Cop5[F, A1, A2, A3, A4, A5], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Option[A5#Cop[F]], Cop5[F, A1, A2, A3, A4, A5]] = Inj.instance(prisma4F.getOption(_))
  }

  object Cop5 extends Cop5LP {
    implicit def prisma0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Prism[Cop5[Id, A1, A2, A3, A4, A5], A1#Cop[Id]] = prisma0F[Id, A1, A2, A3, A4, A5]

    implicit def inja0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Cop5[Id, A1, A2, A3, A4, A5], A1#Cop[Id]] = inja0F[Id, A1, A2, A3, A4, A5]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Option[A1#Cop[Id]], Cop5[Id, A1, A2, A3, A4, A5]] =
      inja0FInverse[Id, A1, A2, A3, A4, A5]

    implicit def prisma1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Prism[Cop5[Id, A1, A2, A3, A4, A5], A2#Cop[Id]] = prisma1F[Id, A1, A2, A3, A4, A5]

    implicit def inja1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Cop5[Id, A1, A2, A3, A4, A5], A2#Cop[Id]] = inja1F[Id, A1, A2, A3, A4, A5]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Option[A2#Cop[Id]], Cop5[Id, A1, A2, A3, A4, A5]] =
      inja1FInverse[Id, A1, A2, A3, A4, A5]

    implicit def prisma2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Prism[Cop5[Id, A1, A2, A3, A4, A5], A3#Cop[Id]] = prisma2F[Id, A1, A2, A3, A4, A5]

    implicit def inja2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Cop5[Id, A1, A2, A3, A4, A5], A3#Cop[Id]] = inja2F[Id, A1, A2, A3, A4, A5]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Option[A3#Cop[Id]], Cop5[Id, A1, A2, A3, A4, A5]] =
      inja2FInverse[Id, A1, A2, A3, A4, A5]

    implicit def prisma3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Prism[Cop5[Id, A1, A2, A3, A4, A5], A4#Cop[Id]] = prisma3F[Id, A1, A2, A3, A4, A5]

    implicit def inja3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Cop5[Id, A1, A2, A3, A4, A5], A4#Cop[Id]] = inja3F[Id, A1, A2, A3, A4, A5]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Option[A4#Cop[Id]], Cop5[Id, A1, A2, A3, A4, A5]] =
      inja3FInverse[Id, A1, A2, A3, A4, A5]

    implicit def prisma4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Prism[Cop5[Id, A1, A2, A3, A4, A5], A5#Cop[Id]] = prisma4F[Id, A1, A2, A3, A4, A5]

    implicit def inja4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Cop5[Id, A1, A2, A3, A4, A5], A5#Cop[Id]] = inja4F[Id, A1, A2, A3, A4, A5]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor]: Inj[Option[A5#Cop[Id]], Cop5[Id, A1, A2, A3, A4, A5]] =
      inja4FInverse[Id, A1, A2, A3, A4, A5]
  }

  @newtype case class Prod6[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](run: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F])) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6

  }

  trait Prod6LP {
    // format: off
    implicit def Prod6Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod]): Transform[Prod6[?[_], A1, A2, A3, A4, A5, A6]] =
      new Transform[Prod6[?[_], A1, A2, A3, A4, A5, A6]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod6[F, A1, A2, A3, A4, A5, A6] => Prod6[G, A1, A2, A3, A4, A5, A6] =
          p => Prod6[G, A1, A2, A3, A4, A5, A6]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6)))
      }

    implicit def Prod6Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply]): Sequence[Prod6[?[_], A1, A2, A3, A4, A5, A6], Apply] =
      new Sequence[Prod6[?[_], A1, A2, A3, A4, A5, A6], Apply] {
        def sequence[F[_]](p: Prod6[F, A1, A2, A3, A4, A5, A6])(implicit F: Apply[F]): F[Prod6[Id, A1, A2, A3, A4, A5, A6]] =
          F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => Prod6[Id, A1, A2, A3, A4, A5, A6]((i0, i1, i2, i3, i4, i5))))))))
      }
    // format: on

    implicit def Prod6Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit M: Monoid[(A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F])]
    ): Monoid[Prod6[F, A1, A2, A3, A4, A5, A6]] =
      MF.xmap(M, Prod6[F, A1, A2, A3, A4, A5, A6](_: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F])), (_: Prod6[F, A1, A2, A3, A4, A5, A6]).run)

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit M: Monoid[Prod6[F, A1, A2, A3, A4, A5, A6]]
    ): Inj[Prod6[F, A1, A2, A3, A4, A5, A6], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod6[F, A1, A2, A3, A4, A5, A6]((x, t.t2, t.t3, t.t4, t.t5, t.t6)))
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[A1#Prod[F], Prod6[F, A1, A2, A3, A4, A5, A6]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit M: Monoid[Prod6[F, A1, A2, A3, A4, A5, A6]]
    ): Inj[Prod6[F, A1, A2, A3, A4, A5, A6], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod6[F, A1, A2, A3, A4, A5, A6]((t.t1, x, t.t3, t.t4, t.t5, t.t6)))
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[A2#Prod[F], Prod6[F, A1, A2, A3, A4, A5, A6]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit M: Monoid[Prod6[F, A1, A2, A3, A4, A5, A6]]
    ): Inj[Prod6[F, A1, A2, A3, A4, A5, A6], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod6[F, A1, A2, A3, A4, A5, A6]((t.t1, t.t2, x, t.t4, t.t5, t.t6)))
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[A3#Prod[F], Prod6[F, A1, A2, A3, A4, A5, A6]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit M: Monoid[Prod6[F, A1, A2, A3, A4, A5, A6]]
    ): Inj[Prod6[F, A1, A2, A3, A4, A5, A6], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod6[F, A1, A2, A3, A4, A5, A6]((t.t1, t.t2, t.t3, x, t.t5, t.t6)))
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[A4#Prod[F], Prod6[F, A1, A2, A3, A4, A5, A6]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit M: Monoid[Prod6[F, A1, A2, A3, A4, A5, A6]]
    ): Inj[Prod6[F, A1, A2, A3, A4, A5, A6], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod6[F, A1, A2, A3, A4, A5, A6]((t.t1, t.t2, t.t3, t.t4, x, t.t6)))
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[A5#Prod[F], Prod6[F, A1, A2, A3, A4, A5, A6]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit M: Monoid[Prod6[F, A1, A2, A3, A4, A5, A6]]
    ): Inj[Prod6[F, A1, A2, A3, A4, A5, A6], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod6[F, A1, A2, A3, A4, A5, A6]((t.t1, t.t2, t.t3, t.t4, t.t5, x)))
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[A6#Prod[F], Prod6[F, A1, A2, A3, A4, A5, A6]] = Inj.instance(_.t6)
  }

  object Prod6 extends Prod6LP {
    implicit def lifta0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit M: Monoid[Prod6[Id, A1, A2, A3, A4, A5, A6]]
    ): Inj[Prod6[Id, A1, A2, A3, A4, A5, A6], A1#Prod[Id]] = lifta0F[Id, A1, A2, A3, A4, A5, A6]

    implicit def lifta0IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[A1#Prod[Id], Prod6[Id, A1, A2, A3, A4, A5, A6]] =
      lifta0FInverse[Id, A1, A2, A3, A4, A5, A6]

    implicit def lifta1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit M: Monoid[Prod6[Id, A1, A2, A3, A4, A5, A6]]
    ): Inj[Prod6[Id, A1, A2, A3, A4, A5, A6], A2#Prod[Id]] = lifta1F[Id, A1, A2, A3, A4, A5, A6]

    implicit def lifta1IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[A2#Prod[Id], Prod6[Id, A1, A2, A3, A4, A5, A6]] =
      lifta1FInverse[Id, A1, A2, A3, A4, A5, A6]

    implicit def lifta2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit M: Monoid[Prod6[Id, A1, A2, A3, A4, A5, A6]]
    ): Inj[Prod6[Id, A1, A2, A3, A4, A5, A6], A3#Prod[Id]] = lifta2F[Id, A1, A2, A3, A4, A5, A6]

    implicit def lifta2IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[A3#Prod[Id], Prod6[Id, A1, A2, A3, A4, A5, A6]] =
      lifta2FInverse[Id, A1, A2, A3, A4, A5, A6]

    implicit def lifta3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit M: Monoid[Prod6[Id, A1, A2, A3, A4, A5, A6]]
    ): Inj[Prod6[Id, A1, A2, A3, A4, A5, A6], A4#Prod[Id]] = lifta3F[Id, A1, A2, A3, A4, A5, A6]

    implicit def lifta3IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[A4#Prod[Id], Prod6[Id, A1, A2, A3, A4, A5, A6]] =
      lifta3FInverse[Id, A1, A2, A3, A4, A5, A6]

    implicit def lifta4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit M: Monoid[Prod6[Id, A1, A2, A3, A4, A5, A6]]
    ): Inj[Prod6[Id, A1, A2, A3, A4, A5, A6], A5#Prod[Id]] = lifta4F[Id, A1, A2, A3, A4, A5, A6]

    implicit def lifta4IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[A5#Prod[Id], Prod6[Id, A1, A2, A3, A4, A5, A6]] =
      lifta4FInverse[Id, A1, A2, A3, A4, A5, A6]

    implicit def lifta5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit M: Monoid[Prod6[Id, A1, A2, A3, A4, A5, A6]]
    ): Inj[Prod6[Id, A1, A2, A3, A4, A5, A6], A6#Prod[Id]] = lifta5F[Id, A1, A2, A3, A4, A5, A6]

    implicit def lifta5IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[A6#Prod[Id], Prod6[Id, A1, A2, A3, A4, A5, A6]] =
      lifta5FInverse[Id, A1, A2, A3, A4, A5, A6]
  }

  @newtype case class Cop6[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ A6#Cop[F])))))
  )

  trait Cop6LP {
    implicit def Cop6Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop]
    ): Transform[Cop6[?[_], A1, A2, A3, A4, A5, A6]] =
      new Transform[Cop6[?[_], A1, A2, A3, A4, A5, A6]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop6[F, A1, A2, A3, A4, A5, A6] => Cop6[G, A1, A2, A3, A4, A5, A6] =
          c => Cop6[G, A1, A2, A3, A4, A5, A6](c.run.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt)))))))
      }

    implicit def Cop6Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor]
    ): Sequence[Cop6[?[_], A1, A2, A3, A4, A5, A6], Functor] =
      new Sequence[Cop6[?[_], A1, A2, A3, A4, A5, A6], Functor] {
        def sequence[F[_]](c: Cop6[F, A1, A2, A3, A4, A5, A6])(implicit F: Functor[F]): F[Cop6[Id, A1, A2, A3, A4, A5, A6]] =
          c.run match {
            case -\/(x)                     => F.map(x.sequence)(y => Cop6[Id, A1, A2, A3, A4, A5, A6](-\/(y)))
            case \/-(-\/(x))                => F.map(x.sequence)(y => Cop6[Id, A1, A2, A3, A4, A5, A6](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))           => F.map(x.sequence)(y => Cop6[Id, A1, A2, A3, A4, A5, A6](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))      => F.map(x.sequence)(y => Cop6[Id, A1, A2, A3, A4, A5, A6](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x))))) => F.map(x.sequence)(y => Cop6[Id, A1, A2, A3, A4, A5, A6](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(x))))) => F.map(x.sequence)(y => Cop6[Id, A1, A2, A3, A4, A5, A6](\/-(\/-(\/-(\/-(\/-(y)))))))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Prism[Cop6[F, A1, A2, A3, A4, A5, A6], A1#Cop[F]] =
      new Prism[Cop6[F, A1, A2, A3, A4, A5, A6], A1#Cop[F]] {
        def getOption(c: Cop6[F, A1, A2, A3, A4, A5, A6]): Option[A1#Cop[F]] = c.run match {
          case -\/(x) => Some(x)
          case _      => None
        }
        def reverseGet(x: A1#Cop[F]): Cop6[F, A1, A2, A3, A4, A5, A6] = Cop6[F, A1, A2, A3, A4, A5, A6](-\/(x))
      }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Cop6[F, A1, A2, A3, A4, A5, A6], A1#Cop[F]] =
      Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Option[A1#Cop[F]], Cop6[F, A1, A2, A3, A4, A5, A6]] =
      Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Prism[Cop6[F, A1, A2, A3, A4, A5, A6], A2#Cop[F]] =
      new Prism[Cop6[F, A1, A2, A3, A4, A5, A6], A2#Cop[F]] {
        def getOption(c: Cop6[F, A1, A2, A3, A4, A5, A6]): Option[A2#Cop[F]] = c.run match {
          case \/-(-\/(x)) => Some(x)
          case _           => None
        }
        def reverseGet(x: A2#Cop[F]): Cop6[F, A1, A2, A3, A4, A5, A6] = Cop6[F, A1, A2, A3, A4, A5, A6](\/-(-\/(x)))
      }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Cop6[F, A1, A2, A3, A4, A5, A6], A2#Cop[F]] =
      Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Option[A2#Cop[F]], Cop6[F, A1, A2, A3, A4, A5, A6]] =
      Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Prism[Cop6[F, A1, A2, A3, A4, A5, A6], A3#Cop[F]] =
      new Prism[Cop6[F, A1, A2, A3, A4, A5, A6], A3#Cop[F]] {
        def getOption(c: Cop6[F, A1, A2, A3, A4, A5, A6]): Option[A3#Cop[F]] = c.run match {
          case \/-(\/-(-\/(x))) => Some(x)
          case _                => None
        }
        def reverseGet(x: A3#Cop[F]): Cop6[F, A1, A2, A3, A4, A5, A6] = Cop6[F, A1, A2, A3, A4, A5, A6](\/-(\/-(-\/(x))))
      }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Cop6[F, A1, A2, A3, A4, A5, A6], A3#Cop[F]] =
      Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Option[A3#Cop[F]], Cop6[F, A1, A2, A3, A4, A5, A6]] =
      Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Prism[Cop6[F, A1, A2, A3, A4, A5, A6], A4#Cop[F]] =
      new Prism[Cop6[F, A1, A2, A3, A4, A5, A6], A4#Cop[F]] {
        def getOption(c: Cop6[F, A1, A2, A3, A4, A5, A6]): Option[A4#Cop[F]] = c.run match {
          case \/-(\/-(\/-(-\/(x)))) => Some(x)
          case _                     => None
        }
        def reverseGet(x: A4#Cop[F]): Cop6[F, A1, A2, A3, A4, A5, A6] = Cop6[F, A1, A2, A3, A4, A5, A6](\/-(\/-(\/-(-\/(x)))))
      }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Cop6[F, A1, A2, A3, A4, A5, A6], A4#Cop[F]] =
      Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Option[A4#Cop[F]], Cop6[F, A1, A2, A3, A4, A5, A6]] =
      Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Prism[Cop6[F, A1, A2, A3, A4, A5, A6], A5#Cop[F]] =
      new Prism[Cop6[F, A1, A2, A3, A4, A5, A6], A5#Cop[F]] {
        def getOption(c: Cop6[F, A1, A2, A3, A4, A5, A6]): Option[A5#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
          case _                          => None
        }
        def reverseGet(x: A5#Cop[F]): Cop6[F, A1, A2, A3, A4, A5, A6] = Cop6[F, A1, A2, A3, A4, A5, A6](\/-(\/-(\/-(\/-(-\/(x))))))
      }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Cop6[F, A1, A2, A3, A4, A5, A6], A5#Cop[F]] =
      Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Option[A5#Cop[F]], Cop6[F, A1, A2, A3, A4, A5, A6]] =
      Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Prism[Cop6[F, A1, A2, A3, A4, A5, A6], A6#Cop[F]] =
      new Prism[Cop6[F, A1, A2, A3, A4, A5, A6], A6#Cop[F]] {
        def getOption(c: Cop6[F, A1, A2, A3, A4, A5, A6]): Option[A6#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(x))))) => Some(x)
          case _                          => None
        }
        def reverseGet(x: A6#Cop[F]): Cop6[F, A1, A2, A3, A4, A5, A6] = Cop6[F, A1, A2, A3, A4, A5, A6](\/-(\/-(\/-(\/-(\/-(x))))))
      }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Cop6[F, A1, A2, A3, A4, A5, A6], A6#Cop[F]] =
      Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Option[A6#Cop[F]], Cop6[F, A1, A2, A3, A4, A5, A6]] =
      Inj.instance(prisma5F.getOption(_))
  }

  object Cop6 extends Cop6LP {
    implicit def prisma0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Prism[Cop6[Id, A1, A2, A3, A4, A5, A6], A1#Cop[Id]] =
      prisma0F[Id, A1, A2, A3, A4, A5, A6]

    implicit def inja0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Cop6[Id, A1, A2, A3, A4, A5, A6], A1#Cop[Id]] = inja0F[Id, A1, A2, A3, A4, A5, A6]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Option[A1#Cop[Id]], Cop6[Id, A1, A2, A3, A4, A5, A6]] =
      inja0FInverse[Id, A1, A2, A3, A4, A5, A6]

    implicit def prisma1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Prism[Cop6[Id, A1, A2, A3, A4, A5, A6], A2#Cop[Id]] =
      prisma1F[Id, A1, A2, A3, A4, A5, A6]

    implicit def inja1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Cop6[Id, A1, A2, A3, A4, A5, A6], A2#Cop[Id]] = inja1F[Id, A1, A2, A3, A4, A5, A6]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Option[A2#Cop[Id]], Cop6[Id, A1, A2, A3, A4, A5, A6]] =
      inja1FInverse[Id, A1, A2, A3, A4, A5, A6]

    implicit def prisma2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Prism[Cop6[Id, A1, A2, A3, A4, A5, A6], A3#Cop[Id]] =
      prisma2F[Id, A1, A2, A3, A4, A5, A6]

    implicit def inja2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Cop6[Id, A1, A2, A3, A4, A5, A6], A3#Cop[Id]] = inja2F[Id, A1, A2, A3, A4, A5, A6]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Option[A3#Cop[Id]], Cop6[Id, A1, A2, A3, A4, A5, A6]] =
      inja2FInverse[Id, A1, A2, A3, A4, A5, A6]

    implicit def prisma3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Prism[Cop6[Id, A1, A2, A3, A4, A5, A6], A4#Cop[Id]] =
      prisma3F[Id, A1, A2, A3, A4, A5, A6]

    implicit def inja3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Cop6[Id, A1, A2, A3, A4, A5, A6], A4#Cop[Id]] = inja3F[Id, A1, A2, A3, A4, A5, A6]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Option[A4#Cop[Id]], Cop6[Id, A1, A2, A3, A4, A5, A6]] =
      inja3FInverse[Id, A1, A2, A3, A4, A5, A6]

    implicit def prisma4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Prism[Cop6[Id, A1, A2, A3, A4, A5, A6], A5#Cop[Id]] =
      prisma4F[Id, A1, A2, A3, A4, A5, A6]

    implicit def inja4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Cop6[Id, A1, A2, A3, A4, A5, A6], A5#Cop[Id]] = inja4F[Id, A1, A2, A3, A4, A5, A6]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Option[A5#Cop[Id]], Cop6[Id, A1, A2, A3, A4, A5, A6]] =
      inja4FInverse[Id, A1, A2, A3, A4, A5, A6]

    implicit def prisma5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Prism[Cop6[Id, A1, A2, A3, A4, A5, A6], A6#Cop[Id]] =
      prisma5F[Id, A1, A2, A3, A4, A5, A6]

    implicit def inja5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Cop6[Id, A1, A2, A3, A4, A5, A6], A6#Cop[Id]] = inja5F[Id, A1, A2, A3, A4, A5, A6]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor]: Inj[Option[A6#Cop[Id]], Cop6[Id, A1, A2, A3, A4, A5, A6]] =
      inja5FInverse[Id, A1, A2, A3, A4, A5, A6]
  }

  @newtype case class Prod7[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
      run: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F])
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7

  }

  trait Prod7LP {
    // format: off
    implicit def Prod7Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod]): Transform[Prod7[?[_], A1, A2, A3, A4, A5, A6, A7]] =
      new Transform[Prod7[?[_], A1, A2, A3, A4, A5, A6, A7]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod7[F, A1, A2, A3, A4, A5, A6, A7] => Prod7[G, A1, A2, A3, A4, A5, A6, A7] =
          p => Prod7[G, A1, A2, A3, A4, A5, A6, A7]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7)))
      }

    implicit def Prod7Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply]): Sequence[Prod7[?[_], A1, A2, A3, A4, A5, A6, A7], Apply] =
      new Sequence[Prod7[?[_], A1, A2, A3, A4, A5, A6, A7], Apply] {
        def sequence[F[_]](p: Prod7[F, A1, A2, A3, A4, A5, A6, A7])(implicit F: Apply[F]): F[Prod7[Id, A1, A2, A3, A4, A5, A6, A7]] =
          F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => Prod7[Id, A1, A2, A3, A4, A5, A6, A7]((i0, i1, i2, i3, i4, i5, i6)))))))))
      }
    // format: on

    implicit def Prod7Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[(A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F])]
    ): Monoid[Prod7[F, A1, A2, A3, A4, A5, A6, A7]] =
      MF.xmap(
        M,
        Prod7[F, A1, A2, A3, A4, A5, A6, A7](_: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F])),
        (_: Prod7[F, A1, A2, A3, A4, A5, A6, A7]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[Prod7[F, A1, A2, A3, A4, A5, A6, A7]]
    ): Inj[Prod7[F, A1, A2, A3, A4, A5, A6, A7], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod7[F, A1, A2, A3, A4, A5, A6, A7]((x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7)))
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[A1#Prod[F], Prod7[F, A1, A2, A3, A4, A5, A6, A7]] =
      Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[Prod7[F, A1, A2, A3, A4, A5, A6, A7]]
    ): Inj[Prod7[F, A1, A2, A3, A4, A5, A6, A7], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod7[F, A1, A2, A3, A4, A5, A6, A7]((t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7)))
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[A2#Prod[F], Prod7[F, A1, A2, A3, A4, A5, A6, A7]] =
      Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[Prod7[F, A1, A2, A3, A4, A5, A6, A7]]
    ): Inj[Prod7[F, A1, A2, A3, A4, A5, A6, A7], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod7[F, A1, A2, A3, A4, A5, A6, A7]((t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7)))
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[A3#Prod[F], Prod7[F, A1, A2, A3, A4, A5, A6, A7]] =
      Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[Prod7[F, A1, A2, A3, A4, A5, A6, A7]]
    ): Inj[Prod7[F, A1, A2, A3, A4, A5, A6, A7], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod7[F, A1, A2, A3, A4, A5, A6, A7]((t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7)))
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[A4#Prod[F], Prod7[F, A1, A2, A3, A4, A5, A6, A7]] =
      Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[Prod7[F, A1, A2, A3, A4, A5, A6, A7]]
    ): Inj[Prod7[F, A1, A2, A3, A4, A5, A6, A7], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod7[F, A1, A2, A3, A4, A5, A6, A7]((t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7)))
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[A5#Prod[F], Prod7[F, A1, A2, A3, A4, A5, A6, A7]] =
      Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[Prod7[F, A1, A2, A3, A4, A5, A6, A7]]
    ): Inj[Prod7[F, A1, A2, A3, A4, A5, A6, A7], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod7[F, A1, A2, A3, A4, A5, A6, A7]((t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7)))
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[A6#Prod[F], Prod7[F, A1, A2, A3, A4, A5, A6, A7]] =
      Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[Prod7[F, A1, A2, A3, A4, A5, A6, A7]]
    ): Inj[Prod7[F, A1, A2, A3, A4, A5, A6, A7], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod7[F, A1, A2, A3, A4, A5, A6, A7]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x)))
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[A7#Prod[F], Prod7[F, A1, A2, A3, A4, A5, A6, A7]] =
      Inj.instance(_.t7)
  }

  object Prod7 extends Prod7LP {
    implicit def lifta0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[Prod7[Id, A1, A2, A3, A4, A5, A6, A7]]
    ): Inj[Prod7[Id, A1, A2, A3, A4, A5, A6, A7], A1#Prod[Id]] = lifta0F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def lifta0IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[A1#Prod[Id], Prod7[Id, A1, A2, A3, A4, A5, A6, A7]] =
      lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def lifta1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[Prod7[Id, A1, A2, A3, A4, A5, A6, A7]]
    ): Inj[Prod7[Id, A1, A2, A3, A4, A5, A6, A7], A2#Prod[Id]] = lifta1F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def lifta1IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[A2#Prod[Id], Prod7[Id, A1, A2, A3, A4, A5, A6, A7]] =
      lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def lifta2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[Prod7[Id, A1, A2, A3, A4, A5, A6, A7]]
    ): Inj[Prod7[Id, A1, A2, A3, A4, A5, A6, A7], A3#Prod[Id]] = lifta2F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def lifta2IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[A3#Prod[Id], Prod7[Id, A1, A2, A3, A4, A5, A6, A7]] =
      lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def lifta3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[Prod7[Id, A1, A2, A3, A4, A5, A6, A7]]
    ): Inj[Prod7[Id, A1, A2, A3, A4, A5, A6, A7], A4#Prod[Id]] = lifta3F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def lifta3IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[A4#Prod[Id], Prod7[Id, A1, A2, A3, A4, A5, A6, A7]] =
      lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def lifta4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[Prod7[Id, A1, A2, A3, A4, A5, A6, A7]]
    ): Inj[Prod7[Id, A1, A2, A3, A4, A5, A6, A7], A5#Prod[Id]] = lifta4F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def lifta4IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[A5#Prod[Id], Prod7[Id, A1, A2, A3, A4, A5, A6, A7]] =
      lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def lifta5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[Prod7[Id, A1, A2, A3, A4, A5, A6, A7]]
    ): Inj[Prod7[Id, A1, A2, A3, A4, A5, A6, A7], A6#Prod[Id]] = lifta5F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def lifta5IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[A6#Prod[Id], Prod7[Id, A1, A2, A3, A4, A5, A6, A7]] =
      lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def lifta6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit M: Monoid[Prod7[Id, A1, A2, A3, A4, A5, A6, A7]]
    ): Inj[Prod7[Id, A1, A2, A3, A4, A5, A6, A7], A7#Prod[Id]] = lifta6F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def lifta6IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[A7#Prod[Id], Prod7[Id, A1, A2, A3, A4, A5, A6, A7]] =
      lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7]
  }

  @newtype case class Cop7[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ A7#Cop[F]))))))
  )

  trait Cop7LP {
    implicit def Cop7Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop]
    ): Transform[Cop7[?[_], A1, A2, A3, A4, A5, A6, A7]] =
      new Transform[Cop7[?[_], A1, A2, A3, A4, A5, A6, A7]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop7[F, A1, A2, A3, A4, A5, A6, A7] => Cop7[G, A1, A2, A3, A4, A5, A6, A7] =
          c =>
            Cop7[G, A1, A2, A3, A4, A5, A6, A7](
              c.run.bimap(
                _.transform(nt),
                _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
              )
            )
      }

    implicit def Cop7Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor]
    ): Sequence[Cop7[?[_], A1, A2, A3, A4, A5, A6, A7], Functor] =
      new Sequence[Cop7[?[_], A1, A2, A3, A4, A5, A6, A7], Functor] {
        def sequence[F[_]](c: Cop7[F, A1, A2, A3, A4, A5, A6, A7])(implicit F: Functor[F]): F[Cop7[Id, A1, A2, A3, A4, A5, A6, A7]] =
          c.run match {
            case -\/(x)                          => F.map(x.sequence)(y => Cop7[Id, A1, A2, A3, A4, A5, A6, A7](-\/(y)))
            case \/-(-\/(x))                     => F.map(x.sequence)(y => Cop7[Id, A1, A2, A3, A4, A5, A6, A7](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))                => F.map(x.sequence)(y => Cop7[Id, A1, A2, A3, A4, A5, A6, A7](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))           => F.map(x.sequence)(y => Cop7[Id, A1, A2, A3, A4, A5, A6, A7](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x)))))      => F.map(x.sequence)(y => Cop7[Id, A1, A2, A3, A4, A5, A6, A7](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => F.map(x.sequence)(y => Cop7[Id, A1, A2, A3, A4, A5, A6, A7](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(x)))))) => F.map(x.sequence)(y => Cop7[Id, A1, A2, A3, A4, A5, A6, A7](\/-(\/-(\/-(\/-(\/-(\/-(y))))))))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Prism[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A1#Cop[F]] =
      new Prism[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A1#Cop[F]] {
        def getOption(c: Cop7[F, A1, A2, A3, A4, A5, A6, A7]): Option[A1#Cop[F]] = c.run match {
          case -\/(x) => Some(x)
          case _      => None
        }
        def reverseGet(x: A1#Cop[F]): Cop7[F, A1, A2, A3, A4, A5, A6, A7] = Cop7[F, A1, A2, A3, A4, A5, A6, A7](-\/(x))
      }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A1#Cop[F]] =
      Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Option[A1#Cop[F]], Cop7[F, A1, A2, A3, A4, A5, A6, A7]] =
      Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Prism[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A2#Cop[F]] =
      new Prism[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A2#Cop[F]] {
        def getOption(c: Cop7[F, A1, A2, A3, A4, A5, A6, A7]): Option[A2#Cop[F]] = c.run match {
          case \/-(-\/(x)) => Some(x)
          case _           => None
        }
        def reverseGet(x: A2#Cop[F]): Cop7[F, A1, A2, A3, A4, A5, A6, A7] = Cop7[F, A1, A2, A3, A4, A5, A6, A7](\/-(-\/(x)))
      }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A2#Cop[F]] =
      Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Option[A2#Cop[F]], Cop7[F, A1, A2, A3, A4, A5, A6, A7]] =
      Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Prism[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A3#Cop[F]] =
      new Prism[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A3#Cop[F]] {
        def getOption(c: Cop7[F, A1, A2, A3, A4, A5, A6, A7]): Option[A3#Cop[F]] = c.run match {
          case \/-(\/-(-\/(x))) => Some(x)
          case _                => None
        }
        def reverseGet(x: A3#Cop[F]): Cop7[F, A1, A2, A3, A4, A5, A6, A7] = Cop7[F, A1, A2, A3, A4, A5, A6, A7](\/-(\/-(-\/(x))))
      }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A3#Cop[F]] =
      Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Option[A3#Cop[F]], Cop7[F, A1, A2, A3, A4, A5, A6, A7]] =
      Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Prism[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A4#Cop[F]] =
      new Prism[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A4#Cop[F]] {
        def getOption(c: Cop7[F, A1, A2, A3, A4, A5, A6, A7]): Option[A4#Cop[F]] = c.run match {
          case \/-(\/-(\/-(-\/(x)))) => Some(x)
          case _                     => None
        }
        def reverseGet(x: A4#Cop[F]): Cop7[F, A1, A2, A3, A4, A5, A6, A7] = Cop7[F, A1, A2, A3, A4, A5, A6, A7](\/-(\/-(\/-(-\/(x)))))
      }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A4#Cop[F]] =
      Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Option[A4#Cop[F]], Cop7[F, A1, A2, A3, A4, A5, A6, A7]] =
      Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Prism[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A5#Cop[F]] =
      new Prism[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A5#Cop[F]] {
        def getOption(c: Cop7[F, A1, A2, A3, A4, A5, A6, A7]): Option[A5#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
          case _                          => None
        }
        def reverseGet(x: A5#Cop[F]): Cop7[F, A1, A2, A3, A4, A5, A6, A7] = Cop7[F, A1, A2, A3, A4, A5, A6, A7](\/-(\/-(\/-(\/-(-\/(x))))))
      }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A5#Cop[F]] =
      Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Option[A5#Cop[F]], Cop7[F, A1, A2, A3, A4, A5, A6, A7]] =
      Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Prism[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A6#Cop[F]] =
      new Prism[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A6#Cop[F]] {
        def getOption(c: Cop7[F, A1, A2, A3, A4, A5, A6, A7]): Option[A6#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
          case _                               => None
        }
        def reverseGet(x: A6#Cop[F]): Cop7[F, A1, A2, A3, A4, A5, A6, A7] = Cop7[F, A1, A2, A3, A4, A5, A6, A7](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
      }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A6#Cop[F]] =
      Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Option[A6#Cop[F]], Cop7[F, A1, A2, A3, A4, A5, A6, A7]] =
      Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Prism[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A7#Cop[F]] =
      new Prism[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A7#Cop[F]] {
        def getOption(c: Cop7[F, A1, A2, A3, A4, A5, A6, A7]): Option[A7#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(x)))))) => Some(x)
          case _                               => None
        }
        def reverseGet(x: A7#Cop[F]): Cop7[F, A1, A2, A3, A4, A5, A6, A7] = Cop7[F, A1, A2, A3, A4, A5, A6, A7](\/-(\/-(\/-(\/-(\/-(\/-(x)))))))
      }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Cop7[F, A1, A2, A3, A4, A5, A6, A7], A7#Cop[F]] =
      Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Option[A7#Cop[F]], Cop7[F, A1, A2, A3, A4, A5, A6, A7]] =
      Inj.instance(prisma6F.getOption(_))
  }

  object Cop7 extends Cop7LP {
    implicit def prisma0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Prism[Cop7[Id, A1, A2, A3, A4, A5, A6, A7], A1#Cop[Id]] =
      prisma0F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def inja0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Cop7[Id, A1, A2, A3, A4, A5, A6, A7], A1#Cop[Id]] =
      inja0F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Option[A1#Cop[Id]], Cop7[Id, A1, A2, A3, A4, A5, A6, A7]] =
      inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def prisma1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Prism[Cop7[Id, A1, A2, A3, A4, A5, A6, A7], A2#Cop[Id]] =
      prisma1F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def inja1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Cop7[Id, A1, A2, A3, A4, A5, A6, A7], A2#Cop[Id]] =
      inja1F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Option[A2#Cop[Id]], Cop7[Id, A1, A2, A3, A4, A5, A6, A7]] =
      inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def prisma2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Prism[Cop7[Id, A1, A2, A3, A4, A5, A6, A7], A3#Cop[Id]] =
      prisma2F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def inja2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Cop7[Id, A1, A2, A3, A4, A5, A6, A7], A3#Cop[Id]] =
      inja2F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Option[A3#Cop[Id]], Cop7[Id, A1, A2, A3, A4, A5, A6, A7]] =
      inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def prisma3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Prism[Cop7[Id, A1, A2, A3, A4, A5, A6, A7], A4#Cop[Id]] =
      prisma3F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def inja3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Cop7[Id, A1, A2, A3, A4, A5, A6, A7], A4#Cop[Id]] =
      inja3F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Option[A4#Cop[Id]], Cop7[Id, A1, A2, A3, A4, A5, A6, A7]] =
      inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def prisma4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Prism[Cop7[Id, A1, A2, A3, A4, A5, A6, A7], A5#Cop[Id]] =
      prisma4F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def inja4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Cop7[Id, A1, A2, A3, A4, A5, A6, A7], A5#Cop[Id]] =
      inja4F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Option[A5#Cop[Id]], Cop7[Id, A1, A2, A3, A4, A5, A6, A7]] =
      inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def prisma5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Prism[Cop7[Id, A1, A2, A3, A4, A5, A6, A7], A6#Cop[Id]] =
      prisma5F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def inja5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Cop7[Id, A1, A2, A3, A4, A5, A6, A7], A6#Cop[Id]] =
      inja5F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Option[A6#Cop[Id]], Cop7[Id, A1, A2, A3, A4, A5, A6, A7]] =
      inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def prisma6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Prism[Cop7[Id, A1, A2, A3, A4, A5, A6, A7], A7#Cop[Id]] =
      prisma6F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def inja6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Cop7[Id, A1, A2, A3, A4, A5, A6, A7], A7#Cop[Id]] =
      inja6F[Id, A1, A2, A3, A4, A5, A6, A7]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor]: Inj[Option[A7#Cop[Id]], Cop7[Id, A1, A2, A3, A4, A5, A6, A7]] =
      inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7]
  }

  @newtype case class Prod8[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
      run: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F])
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8

  }

  trait Prod8LP {
    // format: off
    implicit def Prod8Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod]): Transform[Prod8[?[_], A1, A2, A3, A4, A5, A6, A7, A8]] =
      new Transform[Prod8[?[_], A1, A2, A3, A4, A5, A6, A7, A8]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8] => Prod8[G, A1, A2, A3, A4, A5, A6, A7, A8] =
          p => Prod8[G, A1, A2, A3, A4, A5, A6, A7, A8]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8)))
      }

    implicit def Prod8Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply]): Sequence[Prod8[?[_], A1, A2, A3, A4, A5, A6, A7, A8], Apply] =
      new Sequence[Prod8[?[_], A1, A2, A3, A4, A5, A6, A7, A8], Apply] {
        def sequence[F[_]](p: Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8])(implicit F: Apply[F]): F[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] =
          F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]((i0, i1, i2, i3, i4, i5, i6, i7))))))))))
      }
    // format: on

    implicit def Prod8Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[(A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F])]
    ): Monoid[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]] =
      MF.xmap(
        M,
        Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8](_: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F])),
        (_: Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]((x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8)))
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A1#Prod[F], Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]((t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8)))
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A2#Prod[F], Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]((t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8)))
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A3#Prod[F], Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]((t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8)))
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A4#Prod[F], Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]((t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8)))
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A5#Prod[F], Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]((t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8)))
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A6#Prod[F], Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8)))
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A7#Prod[F], Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x)))
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A8#Prod[F], Prod8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(_.t8)
  }

  object Prod8 extends Prod8LP {
    implicit def lifta0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A1#Prod[Id]] = lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta0IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A1#Prod[Id], Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A2#Prod[Id]] = lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta1IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A2#Prod[Id], Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A3#Prod[Id]] = lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta2IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A3#Prod[Id], Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A4#Prod[Id]] = lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta3IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A4#Prod[Id], Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A5#Prod[Id]] = lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta4IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A5#Prod[Id], Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A6#Prod[Id]] = lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta5IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A6#Prod[Id], Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A7#Prod[Id]] = lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta6IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A7#Prod[Id], Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit M: Monoid[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]]
    ): Inj[Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A8#Prod[Id]] = lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def lifta7IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[A8#Prod[Id], Prod8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]
  }

  @newtype case class Cop8[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ A8#Cop[F])))))))
  )

  trait Cop8LP {
    implicit def Cop8Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop]
    ): Transform[Cop8[?[_], A1, A2, A3, A4, A5, A6, A7, A8]] =
      new Transform[Cop8[?[_], A1, A2, A3, A4, A5, A6, A7, A8]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8] => Cop8[G, A1, A2, A3, A4, A5, A6, A7, A8] =
          c =>
            Cop8[G, A1, A2, A3, A4, A5, A6, A7, A8](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                )
              )
            )
      }

    implicit def Cop8Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor]
    ): Sequence[Cop8[?[_], A1, A2, A3, A4, A5, A6, A7, A8], Functor] =
      new Sequence[Cop8[?[_], A1, A2, A3, A4, A5, A6, A7, A8], Functor] {
        def sequence[F[_]](c: Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8])(implicit F: Functor[F]): F[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] =
          c.run match {
            case -\/(x)                               => F.map(x.sequence)(y => Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8](-\/(y)))
            case \/-(-\/(x))                          => F.map(x.sequence)(y => Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))                     => F.map(x.sequence)(y => Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))                => F.map(x.sequence)(y => Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x)))))           => F.map(x.sequence)(y => Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x))))))      => F.map(x.sequence)(y => Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => F.map(x.sequence)(y => Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))) => F.map(x.sequence)(y => Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8](\/-(\/-(\/-(\/-(\/-(\/-(\/-(y)))))))))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A1#Cop[F]] = new Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A1#Cop[F]] {
      def getOption(c: Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]): Option[A1#Cop[F]] = c.run match {
        case -\/(x) => Some(x)
        case _      => None
      }
      def reverseGet(x: A1#Cop[F]): Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8] = Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8](-\/(x))
    }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A1#Cop[F]] =
      Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A2#Cop[F]] = new Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A2#Cop[F]] {
      def getOption(c: Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]): Option[A2#Cop[F]] = c.run match {
        case \/-(-\/(x)) => Some(x)
        case _           => None
      }
      def reverseGet(x: A2#Cop[F]): Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8] = Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8](\/-(-\/(x)))
    }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A2#Cop[F]] =
      Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A3#Cop[F]] = new Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A3#Cop[F]] {
      def getOption(c: Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]): Option[A3#Cop[F]] = c.run match {
        case \/-(\/-(-\/(x))) => Some(x)
        case _                => None
      }
      def reverseGet(x: A3#Cop[F]): Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8] = Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8](\/-(\/-(-\/(x))))
    }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A3#Cop[F]] =
      Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A4#Cop[F]] = new Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A4#Cop[F]] {
      def getOption(c: Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]): Option[A4#Cop[F]] = c.run match {
        case \/-(\/-(\/-(-\/(x)))) => Some(x)
        case _                     => None
      }
      def reverseGet(x: A4#Cop[F]): Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8] = Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8](\/-(\/-(\/-(-\/(x)))))
    }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A4#Cop[F]] =
      Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A5#Cop[F]] = new Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A5#Cop[F]] {
      def getOption(c: Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]): Option[A5#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
        case _                          => None
      }
      def reverseGet(x: A5#Cop[F]): Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8] = Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8](\/-(\/-(\/-(\/-(-\/(x))))))
    }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A5#Cop[F]] =
      Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A6#Cop[F]] = new Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A6#Cop[F]] {
      def getOption(c: Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]): Option[A6#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
        case _                               => None
      }
      def reverseGet(x: A6#Cop[F]): Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8] = Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
    }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A6#Cop[F]] =
      Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A7#Cop[F]] = new Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A7#Cop[F]] {
      def getOption(c: Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]): Option[A7#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
        case _                                    => None
      }
      def reverseGet(x: A7#Cop[F]): Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8] = Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
    }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A7#Cop[F]] =
      Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A8#Cop[F]] = new Prism[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A8#Cop[F]] {
      def getOption(c: Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]): Option[A8#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))) => Some(x)
        case _                                    => None
      }
      def reverseGet(x: A8#Cop[F]): Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8] = Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8](\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))
    }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8], A8#Cop[F]] =
      Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop8[F, A1, A2, A3, A4, A5, A6, A7, A8]] = Inj.instance(prisma7F.getOption(_))
  }

  object Cop8 extends Cop8LP {
    implicit def prisma0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A1#Cop[Id]] = prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A1#Cop[Id]] =
      inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def prisma1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A2#Cop[Id]] = prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A2#Cop[Id]] =
      inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def prisma2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A3#Cop[Id]] = prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A3#Cop[Id]] =
      inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def prisma3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A4#Cop[Id]] = prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A4#Cop[Id]] =
      inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def prisma4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A5#Cop[Id]] = prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A5#Cop[Id]] =
      inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def prisma5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A6#Cop[Id]] = prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A6#Cop[Id]] =
      inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def prisma6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A7#Cop[Id]] = prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A7#Cop[Id]] =
      inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def prisma7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Prism[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A8#Cop[Id]] = prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]: Inj[Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8], A8#Cop[Id]] =
      inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop8[Id, A1, A2, A3, A4, A5, A6, A7, A8]] = inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8]
  }

  @newtype case class Prod9[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
      run: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F])
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8
    def t9: A9#Prod[F] = run._9

  }

  trait Prod9LP {
    // format: off
    implicit def Prod9Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod], trans8: Transform[A9#Prod]): Transform[Prod9[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9]] =
      new Transform[Prod9[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9] => Prod9[G, A1, A2, A3, A4, A5, A6, A7, A8, A9] =
          p => Prod9[G, A1, A2, A3, A4, A5, A6, A7, A8, A9]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8), trans8.transform(nt)(p.t9)))
      }

    implicit def Prod9Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply], seq8: Sequence[A9#Prod, Apply]): Sequence[Prod9[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9], Apply] =
      new Sequence[Prod9[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9], Apply] {
        def sequence[F[_]](p: Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9])(implicit F: Apply[F]): F[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] =
          F.ap(seq8.sequence(p.t9))(F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => (i8: A9#Prod[Id]) => Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]((i0, i1, i2, i3, i4, i5, i6, i7, i8)))))))))))
      }
    // format: on

    implicit def Prod9Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[(A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F])]
    ): Monoid[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] =
      MF.xmap(
        M,
        Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9](_: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F])),
        (_: Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]((x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9)))
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A1#Prod[F], Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]((t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9)))
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A2#Prod[F], Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]((t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9)))
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A3#Prod[F], Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]((t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8, t.t9)))
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A4#Prod[F], Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]((t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8, t.t9)))
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A5#Prod[F], Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]((t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8, t.t9)))
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A6#Prod[F], Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8, t.t9)))
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A7#Prod[F], Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x, t.t9)))
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A8#Prod[F], Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(_.t8)

    implicit def lifta8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A9#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, x)))
    }

    implicit def lifta8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A9#Prod[F], Prod9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(_.t9)
  }

  object Prod9 extends Prod9LP {
    implicit def lifta0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A1#Prod[Id]] = lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta0IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A1#Prod[Id], Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A2#Prod[Id]] = lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta1IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A2#Prod[Id], Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A3#Prod[Id]] = lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta2IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A3#Prod[Id], Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A4#Prod[Id]] = lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta3IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A4#Prod[Id], Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A5#Prod[Id]] = lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta4IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A5#Prod[Id], Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A6#Prod[Id]] = lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta5IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A6#Prod[Id], Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A7#Prod[Id]] = lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta6IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A7#Prod[Id], Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A8#Prod[Id]] = lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta7IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A8#Prod[Id], Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta8Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit M: Monoid[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]]
    ): Inj[Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A9#Prod[Id]] = lifta8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def lifta8IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[A9#Prod[Id], Prod9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = lifta8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]
  }

  @newtype case class Cop9[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ (A8#Cop[F] \/ A9#Cop[F]))))))))
  )

  trait Cop9LP {
    implicit def Cop9Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop],
        trans8: Transform[A9#Cop]
    ): Transform[Cop9[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9]] =
      new Transform[Cop9[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9] => Cop9[G, A1, A2, A3, A4, A5, A6, A7, A8, A9] =
          c =>
            Cop9[G, A1, A2, A3, A4, A5, A6, A7, A8, A9](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(
                    _.transform(nt),
                    _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                  )
                )
              )
            )
      }

    implicit def Cop9Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor],
        seq8: Sequence[A9#Cop, Functor]
    ): Sequence[Cop9[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9], Functor] =
      new Sequence[Cop9[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9], Functor] {
        def sequence[F[_]](c: Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9])(implicit F: Functor[F]): F[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] =
          c.run match {
            case -\/(x)                                    => F.map(x.sequence)(y => Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9](-\/(y)))
            case \/-(-\/(x))                               => F.map(x.sequence)(y => Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))                          => F.map(x.sequence)(y => Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))                     => F.map(x.sequence)(y => Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x)))))                => F.map(x.sequence)(y => Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x))))))           => F.map(x.sequence)(y => Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))      => F.map(x.sequence)(y => Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => F.map(x.sequence)(y => Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))) => F.map(x.sequence)(y => Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(y))))))))))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A1#Cop[F]] = new Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A1#Cop[F]] {
      def getOption(c: Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]): Option[A1#Cop[F]] = c.run match {
        case -\/(x) => Some(x)
        case _      => None
      }
      def reverseGet(x: A1#Cop[F]): Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9] = Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9](-\/(x))
    }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A2#Cop[F]] = new Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A2#Cop[F]] {
      def getOption(c: Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]): Option[A2#Cop[F]] = c.run match {
        case \/-(-\/(x)) => Some(x)
        case _           => None
      }
      def reverseGet(x: A2#Cop[F]): Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9] = Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(-\/(x)))
    }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A3#Cop[F]] = new Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A3#Cop[F]] {
      def getOption(c: Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]): Option[A3#Cop[F]] = c.run match {
        case \/-(\/-(-\/(x))) => Some(x)
        case _                => None
      }
      def reverseGet(x: A3#Cop[F]): Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9] = Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(\/-(-\/(x))))
    }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A4#Cop[F]] = new Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A4#Cop[F]] {
      def getOption(c: Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]): Option[A4#Cop[F]] = c.run match {
        case \/-(\/-(\/-(-\/(x)))) => Some(x)
        case _                     => None
      }
      def reverseGet(x: A4#Cop[F]): Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9] = Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(\/-(\/-(-\/(x)))))
    }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A5#Cop[F]] = new Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A5#Cop[F]] {
      def getOption(c: Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]): Option[A5#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
        case _                          => None
      }
      def reverseGet(x: A5#Cop[F]): Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9] = Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(\/-(\/-(\/-(-\/(x))))))
    }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A6#Cop[F]] = new Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A6#Cop[F]] {
      def getOption(c: Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]): Option[A6#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
        case _                               => None
      }
      def reverseGet(x: A6#Cop[F]): Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9] = Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
    }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A6#Cop[F]] = Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A7#Cop[F]] = new Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A7#Cop[F]] {
      def getOption(c: Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]): Option[A7#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
        case _                                    => None
      }
      def reverseGet(x: A7#Cop[F]): Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9] = Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
    }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A7#Cop[F]] = Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A8#Cop[F]] = new Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A8#Cop[F]] {
      def getOption(c: Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]): Option[A8#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => Some(x)
        case _                                         => None
      }
      def reverseGet(x: A8#Cop[F]): Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9] = Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))
    }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A8#Cop[F]] = Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(prisma7F.getOption(_))

    implicit def prisma8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A9#Cop[F]] = new Prism[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A9#Cop[F]] {
      def getOption(c: Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]): Option[A9#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))) => Some(x)
        case _                                         => None
      }
      def reverseGet(x: A9#Cop[F]): Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9] = Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))
    }

    implicit def inja8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9], A9#Cop[F]] = Inj.instance(prisma8F.reverseGet(_))

    implicit def inja8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A9#Cop[F]], Cop9[F, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = Inj.instance(prisma8F.getOption(_))
  }

  object Cop9 extends Cop9LP {
    implicit def prisma0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A1#Cop[Id]] = prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A1#Cop[Id]] = inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def prisma1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A2#Cop[Id]] = prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A2#Cop[Id]] = inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def prisma2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A3#Cop[Id]] = prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A3#Cop[Id]] = inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def prisma3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A4#Cop[Id]] = prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A4#Cop[Id]] = inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def prisma4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A5#Cop[Id]] = prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A5#Cop[Id]] = inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def prisma5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A6#Cop[Id]] = prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A6#Cop[Id]] = inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def prisma6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A7#Cop[Id]] = prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A7#Cop[Id]] = inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def prisma7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A8#Cop[Id]] = prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A8#Cop[Id]] = inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def prisma8Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Prism[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A9#Cop[Id]] = prisma8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja8Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9], A9#Cop[Id]] = inja8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]

    implicit def inja8IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor]
        : Inj[Option[A9#Cop[Id]], Cop9[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]] = inja8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9]
  }

  @newtype case class Prod10[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
      run: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F])
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8
    def t9: A9#Prod[F] = run._9
    def t10: A10#Prod[F] = run._10

  }

  trait Prod10LP {
    // format: off
    implicit def Prod10Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod], trans8: Transform[A9#Prod], trans9: Transform[A10#Prod]): Transform[Prod10[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] =
      new Transform[Prod10[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] => Prod10[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] =
          p => Prod10[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8), trans8.transform(nt)(p.t9), trans9.transform(nt)(p.t10)))
      }

    implicit def Prod10Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply], seq8: Sequence[A9#Prod, Apply], seq9: Sequence[A10#Prod, Apply]): Sequence[Prod10[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], Apply] =
      new Sequence[Prod10[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], Apply] {
        def sequence[F[_]](p: Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10])(implicit F: Apply[F]): F[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] =
          F.ap(seq9.sequence(p.t10))(F.ap(seq8.sequence(p.t9))(F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => (i8: A9#Prod[Id]) => (i9: A10#Prod[Id]) => Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]((i0, i1, i2, i3, i4, i5, i6, i7, i8, i9))))))))))))
      }
    // format: on

    implicit def Prod10Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[(A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F])]
    ): Monoid[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] =
      MF.xmap(
        M,
        Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](_: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F])),
        (_: Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]((x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10)))
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A1#Prod[F], Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]((t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10)))
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A2#Prod[F], Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]((t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10)))
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A3#Prod[F], Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]((t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10)))
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A4#Prod[F], Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]((t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8, t.t9, t.t10)))
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A5#Prod[F], Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]((t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8, t.t9, t.t10)))
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A6#Prod[F], Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8, t.t9, t.t10)))
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A7#Prod[F], Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x, t.t9, t.t10)))
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A8#Prod[F], Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(_.t8)

    implicit def lifta8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A9#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, x, t.t10)))
    }

    implicit def lifta8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A9#Prod[F], Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(_.t9)

    implicit def lifta9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A10#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, x)))
    }

    implicit def lifta9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A10#Prod[F], Prod10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(_.t10)
  }

  object Prod10 extends Prod10LP {
    implicit def lifta0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A1#Prod[Id]] = lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta0IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A1#Prod[Id], Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A2#Prod[Id]] = lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta1IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A2#Prod[Id], Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A3#Prod[Id]] = lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta2IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A3#Prod[Id], Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A4#Prod[Id]] = lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta3IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A4#Prod[Id], Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A5#Prod[Id]] = lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta4IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A5#Prod[Id], Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A6#Prod[Id]] = lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta5IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A6#Prod[Id], Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A7#Prod[Id]] = lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta6IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A7#Prod[Id], Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A8#Prod[Id]] = lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta7IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A8#Prod[Id], Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta8Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A9#Prod[Id]] = lifta8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta8IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A9#Prod[Id], Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = lifta8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta9Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit M: Monoid[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]]
    ): Inj[Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A10#Prod[Id]] = lifta9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def lifta9IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[A10#Prod[Id], Prod10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = lifta9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]
  }

  @newtype case class Cop10[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ (A8#Cop[F] \/ (A9#Cop[F] \/ A10#Cop[F])))))))))
  )

  trait Cop10LP {
    implicit def Cop10Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop],
        trans8: Transform[A9#Cop],
        trans9: Transform[A10#Cop]
    ): Transform[Cop10[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] =
      new Transform[Cop10[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] => Cop10[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] =
          c =>
            Cop10[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(
                    _.transform(nt),
                    _.bimap(
                      _.transform(nt),
                      _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                    )
                  )
                )
              )
            )
      }

    implicit def Cop10Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor],
        seq8: Sequence[A9#Cop, Functor],
        seq9: Sequence[A10#Cop, Functor]
    ): Sequence[Cop10[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], Functor] =
      new Sequence[Cop10[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], Functor] {
        def sequence[F[_]](c: Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10])(implicit F: Functor[F]): F[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] =
          c.run match {
            case -\/(x)                                         => F.map(x.sequence)(y => Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](-\/(y)))
            case \/-(-\/(x))                                    => F.map(x.sequence)(y => Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))                               => F.map(x.sequence)(y => Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))                          => F.map(x.sequence)(y => Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x)))))                     => F.map(x.sequence)(y => Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x))))))                => F.map(x.sequence)(y => Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))           => F.map(x.sequence)(y => Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))      => F.map(x.sequence)(y => Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => F.map(x.sequence)(y => Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))) => F.map(x.sequence)(y => Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(y)))))))))))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A1#Cop[F]] = new Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A1#Cop[F]] {
      def getOption(c: Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]): Option[A1#Cop[F]] = c.run match {
        case -\/(x) => Some(x)
        case _      => None
      }
      def reverseGet(x: A1#Cop[F]): Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] = Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](-\/(x))
    }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A2#Cop[F]] = new Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A2#Cop[F]] {
      def getOption(c: Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]): Option[A2#Cop[F]] = c.run match {
        case \/-(-\/(x)) => Some(x)
        case _           => None
      }
      def reverseGet(x: A2#Cop[F]): Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] = Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(-\/(x)))
    }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A3#Cop[F]] = new Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A3#Cop[F]] {
      def getOption(c: Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]): Option[A3#Cop[F]] = c.run match {
        case \/-(\/-(-\/(x))) => Some(x)
        case _                => None
      }
      def reverseGet(x: A3#Cop[F]): Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] = Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(-\/(x))))
    }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A4#Cop[F]] = new Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A4#Cop[F]] {
      def getOption(c: Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]): Option[A4#Cop[F]] = c.run match {
        case \/-(\/-(\/-(-\/(x)))) => Some(x)
        case _                     => None
      }
      def reverseGet(x: A4#Cop[F]): Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] = Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(\/-(-\/(x)))))
    }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A5#Cop[F]] = new Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A5#Cop[F]] {
      def getOption(c: Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]): Option[A5#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
        case _                          => None
      }
      def reverseGet(x: A5#Cop[F]): Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] = Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(\/-(\/-(-\/(x))))))
    }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A6#Cop[F]] = new Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A6#Cop[F]] {
      def getOption(c: Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]): Option[A6#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
        case _                               => None
      }
      def reverseGet(x: A6#Cop[F]): Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] = Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
    }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A6#Cop[F]] = Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A7#Cop[F]] = new Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A7#Cop[F]] {
      def getOption(c: Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]): Option[A7#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
        case _                                    => None
      }
      def reverseGet(x: A7#Cop[F]): Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] = Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
    }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A7#Cop[F]] = Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A8#Cop[F]] = new Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A8#Cop[F]] {
      def getOption(c: Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]): Option[A8#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => Some(x)
        case _                                         => None
      }
      def reverseGet(x: A8#Cop[F]): Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] = Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))
    }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A8#Cop[F]] = Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(prisma7F.getOption(_))

    implicit def prisma8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A9#Cop[F]] = new Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A9#Cop[F]] {
      def getOption(c: Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]): Option[A9#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => Some(x)
        case _                                              => None
      }
      def reverseGet(x: A9#Cop[F]): Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] = Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))
    }

    implicit def inja8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A9#Cop[F]] = Inj.instance(prisma8F.reverseGet(_))

    implicit def inja8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A9#Cop[F]], Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(prisma8F.getOption(_))

    implicit def prisma9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A10#Cop[F]] = new Prism[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A10#Cop[F]] {
      def getOption(c: Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]): Option[A10#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))) => Some(x)
        case _                                              => None
      }
      def reverseGet(x: A10#Cop[F]): Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10] = Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))
    }

    implicit def inja9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A10#Cop[F]] = Inj.instance(prisma9F.reverseGet(_))

    implicit def inja9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A10#Cop[F]], Cop10[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = Inj.instance(prisma9F.getOption(_))
  }

  object Cop10 extends Cop10LP {
    implicit def prisma0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A1#Cop[Id]] = prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A1#Cop[Id]] = inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def prisma1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A2#Cop[Id]] = prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A2#Cop[Id]] = inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def prisma2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A3#Cop[Id]] = prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A3#Cop[Id]] = inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def prisma3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A4#Cop[Id]] = prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A4#Cop[Id]] = inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def prisma4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A5#Cop[Id]] = prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A5#Cop[Id]] = inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def prisma5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A6#Cop[Id]] = prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A6#Cop[Id]] = inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def prisma6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A7#Cop[Id]] = prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A7#Cop[Id]] = inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def prisma7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A8#Cop[Id]] = prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A8#Cop[Id]] = inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def prisma8Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A9#Cop[Id]] = prisma8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja8Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A9#Cop[Id]] = inja8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja8IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A9#Cop[Id]], Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = inja8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def prisma9Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Prism[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A10#Cop[Id]] = prisma9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja9Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10], A10#Cop[Id]] = inja9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]

    implicit def inja9IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor]
        : Inj[Option[A10#Cop[Id]], Cop10[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]] = inja9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10]
  }

  @newtype case class Prod11[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
      run: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F])
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8
    def t9: A9#Prod[F] = run._9
    def t10: A10#Prod[F] = run._10
    def t11: A11#Prod[F] = run._11

  }

  trait Prod11LP {
    // format: off
    implicit def Prod11Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod], trans8: Transform[A9#Prod], trans9: Transform[A10#Prod], trans10: Transform[A11#Prod]): Transform[Prod11[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] =
      new Transform[Prod11[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] => Prod11[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] =
          p => Prod11[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8), trans8.transform(nt)(p.t9), trans9.transform(nt)(p.t10), trans10.transform(nt)(p.t11)))
      }

    implicit def Prod11Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply], seq8: Sequence[A9#Prod, Apply], seq9: Sequence[A10#Prod, Apply], seq10: Sequence[A11#Prod, Apply]): Sequence[Prod11[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], Apply] =
      new Sequence[Prod11[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], Apply] {
        def sequence[F[_]](p: Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11])(implicit F: Apply[F]): F[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] =
          F.ap(seq10.sequence(p.t11))(F.ap(seq9.sequence(p.t10))(F.ap(seq8.sequence(p.t9))(F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => (i8: A9#Prod[Id]) => (i9: A10#Prod[Id]) => (i10: A11#Prod[Id]) => Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]((i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10)))))))))))))
      }
    // format: on

    implicit def Prod11Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[(A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F])]
    ): Monoid[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] =
      MF.xmap(
        M,
        Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](
          _: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F])
        ),
        (_: Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]((x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11)))
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A1#Prod[F], Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]((t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11)))
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A2#Prod[F], Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]((t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11)))
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A3#Prod[F], Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]((t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11)))
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A4#Prod[F], Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]((t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11)))
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A5#Prod[F], Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]((t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8, t.t9, t.t10, t.t11)))
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A6#Prod[F], Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8, t.t9, t.t10, t.t11)))
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A7#Prod[F], Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x, t.t9, t.t10, t.t11)))
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A8#Prod[F], Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(_.t8)

    implicit def lifta8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A9#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, x, t.t10, t.t11)))
    }

    implicit def lifta8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A9#Prod[F], Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(_.t9)

    implicit def lifta9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A10#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, x, t.t11)))
    }

    implicit def lifta9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A10#Prod[F], Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(_.t10)

    implicit def lifta10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A11#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, x)))
    }

    implicit def lifta10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A11#Prod[F], Prod11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(_.t11)
  }

  object Prod11 extends Prod11LP {
    implicit def lifta0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A1#Prod[Id]] = lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta0IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A1#Prod[Id], Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A2#Prod[Id]] = lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta1IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A2#Prod[Id], Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A3#Prod[Id]] = lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta2IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A3#Prod[Id], Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A4#Prod[Id]] = lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta3IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A4#Prod[Id], Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A5#Prod[Id]] = lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta4IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A5#Prod[Id], Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A6#Prod[Id]] = lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta5IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A6#Prod[Id], Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A7#Prod[Id]] = lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta6IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A7#Prod[Id], Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A8#Prod[Id]] = lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta7IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A8#Prod[Id], Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta8Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A9#Prod[Id]] = lifta8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta8IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A9#Prod[Id], Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = lifta8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta9Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A10#Prod[Id]] = lifta9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta9IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A10#Prod[Id], Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = lifta9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta10Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit M: Monoid[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]]
    ): Inj[Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A11#Prod[Id]] = lifta10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def lifta10IdInverse[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[A11#Prod[Id], Prod11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = lifta10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]
  }

  @newtype case class Cop11[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ (A8#Cop[F] \/ (A9#Cop[F] \/ (A10#Cop[F] \/ A11#Cop[F]))))))))))
  )

  trait Cop11LP {
    implicit def Cop11Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop],
        trans8: Transform[A9#Cop],
        trans9: Transform[A10#Cop],
        trans10: Transform[A11#Cop]
    ): Transform[Cop11[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] =
      new Transform[Cop11[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] => Cop11[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] =
          c =>
            Cop11[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(
                    _.transform(nt),
                    _.bimap(
                      _.transform(nt),
                      _.bimap(
                        _.transform(nt),
                        _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                      )
                    )
                  )
                )
              )
            )
      }

    implicit def Cop11Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor],
        seq8: Sequence[A9#Cop, Functor],
        seq9: Sequence[A10#Cop, Functor],
        seq10: Sequence[A11#Cop, Functor]
    ): Sequence[Cop11[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], Functor] =
      new Sequence[Cop11[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], Functor] {
        def sequence[F[_]](c: Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11])(implicit F: Functor[F]): F[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] =
          c.run match {
            case -\/(x)                                         => F.map(x.sequence)(y => Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](-\/(y)))
            case \/-(-\/(x))                                    => F.map(x.sequence)(y => Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))                               => F.map(x.sequence)(y => Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))                          => F.map(x.sequence)(y => Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x)))))                     => F.map(x.sequence)(y => Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x))))))                => F.map(x.sequence)(y => Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))           => F.map(x.sequence)(y => Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))      => F.map(x.sequence)(y => Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => F.map(x.sequence)(y => Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) =>
              F.map(x.sequence)(y => Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))) =>
              F.map(x.sequence)(y => Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(y))))))))))))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A1#Cop[F]] = new Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A1#Cop[F]] {
      def getOption(c: Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]): Option[A1#Cop[F]] = c.run match {
        case -\/(x) => Some(x)
        case _      => None
      }
      def reverseGet(x: A1#Cop[F]): Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] = Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](-\/(x))
    }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A2#Cop[F]] = new Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A2#Cop[F]] {
      def getOption(c: Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]): Option[A2#Cop[F]] = c.run match {
        case \/-(-\/(x)) => Some(x)
        case _           => None
      }
      def reverseGet(x: A2#Cop[F]): Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] = Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(-\/(x)))
    }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A3#Cop[F]] = new Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A3#Cop[F]] {
      def getOption(c: Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]): Option[A3#Cop[F]] = c.run match {
        case \/-(\/-(-\/(x))) => Some(x)
        case _                => None
      }
      def reverseGet(x: A3#Cop[F]): Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] = Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(-\/(x))))
    }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A4#Cop[F]] = new Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A4#Cop[F]] {
      def getOption(c: Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]): Option[A4#Cop[F]] = c.run match {
        case \/-(\/-(\/-(-\/(x)))) => Some(x)
        case _                     => None
      }
      def reverseGet(x: A4#Cop[F]): Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] = Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(-\/(x)))))
    }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A5#Cop[F]] = new Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A5#Cop[F]] {
      def getOption(c: Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]): Option[A5#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
        case _                          => None
      }
      def reverseGet(x: A5#Cop[F]): Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] = Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(\/-(-\/(x))))))
    }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A6#Cop[F]] = new Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A6#Cop[F]] {
      def getOption(c: Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]): Option[A6#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
        case _                               => None
      }
      def reverseGet(x: A6#Cop[F]): Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] = Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
    }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A6#Cop[F]] = Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A7#Cop[F]] = new Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A7#Cop[F]] {
      def getOption(c: Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]): Option[A7#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
        case _                                    => None
      }
      def reverseGet(x: A7#Cop[F]): Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] = Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
    }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A7#Cop[F]] = Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A8#Cop[F]] = new Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A8#Cop[F]] {
      def getOption(c: Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]): Option[A8#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => Some(x)
        case _                                         => None
      }
      def reverseGet(x: A8#Cop[F]): Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] = Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))
    }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A8#Cop[F]] = Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(prisma7F.getOption(_))

    implicit def prisma8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A9#Cop[F]] = new Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A9#Cop[F]] {
      def getOption(c: Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]): Option[A9#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => Some(x)
        case _                                              => None
      }
      def reverseGet(x: A9#Cop[F]): Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] = Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))
    }

    implicit def inja8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A9#Cop[F]] = Inj.instance(prisma8F.reverseGet(_))

    implicit def inja8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A9#Cop[F]], Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(prisma8F.getOption(_))

    implicit def prisma9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A10#Cop[F]] = new Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A10#Cop[F]] {
      def getOption(c: Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]): Option[A10#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) => Some(x)
        case _                                                   => None
      }
      def reverseGet(x: A10#Cop[F]): Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] =
        Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))
    }

    implicit def inja9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A10#Cop[F]] = Inj.instance(prisma9F.reverseGet(_))

    implicit def inja9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A10#Cop[F]], Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(prisma9F.getOption(_))

    implicit def prisma10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A11#Cop[F]] = new Prism[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A11#Cop[F]] {
      def getOption(c: Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]): Option[A11#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))) => Some(x)
        case _                                                   => None
      }
      def reverseGet(x: A11#Cop[F]): Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11] =
        Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))
    }

    implicit def inja10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A11#Cop[F]] = Inj.instance(prisma10F.reverseGet(_))

    implicit def inja10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A11#Cop[F]], Cop11[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = Inj.instance(prisma10F.getOption(_))
  }

  object Cop11 extends Cop11LP {
    implicit def prisma0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A1#Cop[Id]] = prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A1#Cop[Id]] = inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def prisma1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A2#Cop[Id]] = prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A2#Cop[Id]] = inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def prisma2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A3#Cop[Id]] = prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A3#Cop[Id]] = inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def prisma3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A4#Cop[Id]] = prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A4#Cop[Id]] = inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def prisma4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A5#Cop[Id]] = prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A5#Cop[Id]] = inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def prisma5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A6#Cop[Id]] = prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A6#Cop[Id]] = inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def prisma6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A7#Cop[Id]] = prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A7#Cop[Id]] = inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def prisma7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A8#Cop[Id]] = prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A8#Cop[Id]] = inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def prisma8Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A9#Cop[Id]] = prisma8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja8Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A9#Cop[Id]] = inja8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja8IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A9#Cop[Id]], Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = inja8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def prisma9Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A10#Cop[Id]] = prisma9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja9Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A10#Cop[Id]] = inja9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja9IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A10#Cop[Id]], Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = inja9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def prisma10Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Prism[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A11#Cop[Id]] = prisma10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja10Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11], A11#Cop[Id]] = inja10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]

    implicit def inja10IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor]
        : Inj[Option[A11#Cop[Id]], Cop11[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]] = inja10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11]
  }

  @newtype case class Prod12[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
      run: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F], A12#Prod[F])
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8
    def t9: A9#Prod[F] = run._9
    def t10: A10#Prod[F] = run._10
    def t11: A11#Prod[F] = run._11
    def t12: A12#Prod[F] = run._12

  }

  trait Prod12LP {
    // format: off
    implicit def Prod12Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod], trans8: Transform[A9#Prod], trans9: Transform[A10#Prod], trans10: Transform[A11#Prod], trans11: Transform[A12#Prod]): Transform[Prod12[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] =
      new Transform[Prod12[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] => Prod12[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] =
          p => Prod12[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8), trans8.transform(nt)(p.t9), trans9.transform(nt)(p.t10), trans10.transform(nt)(p.t11), trans11.transform(nt)(p.t12)))
      }

    implicit def Prod12Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply], seq8: Sequence[A9#Prod, Apply], seq9: Sequence[A10#Prod, Apply], seq10: Sequence[A11#Prod, Apply], seq11: Sequence[A12#Prod, Apply]): Sequence[Prod12[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], Apply] =
      new Sequence[Prod12[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], Apply] {
        def sequence[F[_]](p: Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12])(implicit F: Apply[F]): F[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] =
          F.ap(seq11.sequence(p.t12))(F.ap(seq10.sequence(p.t11))(F.ap(seq9.sequence(p.t10))(F.ap(seq8.sequence(p.t9))(F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => (i8: A9#Prod[Id]) => (i9: A10#Prod[Id]) => (i10: A11#Prod[Id]) => (i11: A12#Prod[Id]) => Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]((i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11))))))))))))))
      }
    // format: on

    implicit def Prod12Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[(A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F], A12#Prod[F])]
    ): Monoid[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] =
      MF.xmap(
        M,
        Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](
          _: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F], A12#Prod[F])
        ),
        (_: Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]((x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12)))
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[A1#Prod[F], Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]((t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12)))
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[A2#Prod[F], Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]((t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12)))
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[A3#Prod[F], Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]((t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12)))
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[A4#Prod[F], Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]((t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12)))
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[A5#Prod[F], Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]((t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12)))
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[A6#Prod[F], Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8, t.t9, t.t10, t.t11, t.t12)))
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[A7#Prod[F], Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x, t.t9, t.t10, t.t11, t.t12)))
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[A8#Prod[F], Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(_.t8)

    implicit def lifta8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A9#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, x, t.t10, t.t11, t.t12)))
    }

    implicit def lifta8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[A9#Prod[F], Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(_.t9)

    implicit def lifta9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A10#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, x, t.t11, t.t12)))
    }

    implicit def lifta9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[A10#Prod[F], Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(_.t10)

    implicit def lifta10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A11#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, x, t.t12)))
    }

    implicit def lifta10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[A11#Prod[F], Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(_.t11)

    implicit def lifta11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A12#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, x)))
    }

    implicit def lifta11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[A12#Prod[F], Prod12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(_.t12)
  }

  object Prod12 extends Prod12LP {
    implicit def lifta0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A1#Prod[Id]] = lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta0IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor
    ]: Inj[A1#Prod[Id], Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A2#Prod[Id]] = lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta1IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor
    ]: Inj[A2#Prod[Id], Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A3#Prod[Id]] = lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta2IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor
    ]: Inj[A3#Prod[Id], Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A4#Prod[Id]] = lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta3IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor
    ]: Inj[A4#Prod[Id], Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A5#Prod[Id]] = lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta4IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor
    ]: Inj[A5#Prod[Id], Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A6#Prod[Id]] = lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta5IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor
    ]: Inj[A6#Prod[Id], Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A7#Prod[Id]] = lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta6IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor
    ]: Inj[A7#Prod[Id], Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A8#Prod[Id]] = lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta7IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor
    ]: Inj[A8#Prod[Id], Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta8Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A9#Prod[Id]] = lifta8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta8IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor
    ]: Inj[A9#Prod[Id], Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = lifta8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta9Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A10#Prod[Id]] = lifta9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta9IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor
    ]: Inj[A10#Prod[Id], Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = lifta9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta10Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A11#Prod[Id]] = lifta10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta10IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor
    ]: Inj[A11#Prod[Id], Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = lifta10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta11Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
        implicit M: Monoid[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]]
    ): Inj[Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A12#Prod[Id]] = lifta11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def lifta11IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor
    ]: Inj[A12#Prod[Id], Prod12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = lifta11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]
  }

  @newtype case class Cop12[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ (A8#Cop[F] \/ (A9#Cop[F] \/ (A10#Cop[F] \/ (A11#Cop[F] \/ A12#Cop[F])))))))))))
  )

  trait Cop12LP {
    implicit def Cop12Transform[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor
    ](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop],
        trans8: Transform[A9#Cop],
        trans9: Transform[A10#Cop],
        trans10: Transform[A11#Cop],
        trans11: Transform[A12#Cop]
    ): Transform[Cop12[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] =
      new Transform[Cop12[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] => Cop12[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] =
          c =>
            Cop12[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(
                    _.transform(nt),
                    _.bimap(
                      _.transform(nt),
                      _.bimap(
                        _.transform(nt),
                        _.bimap(
                          _.transform(nt),
                          _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                        )
                      )
                    )
                  )
                )
              )
            )
      }

    implicit def Cop12Sequence[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor
    ](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor],
        seq8: Sequence[A9#Cop, Functor],
        seq9: Sequence[A10#Cop, Functor],
        seq10: Sequence[A11#Cop, Functor],
        seq11: Sequence[A12#Cop, Functor]
    ): Sequence[Cop12[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], Functor] =
      new Sequence[Cop12[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], Functor] {
        def sequence[F[_]](c: Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12])(implicit F: Functor[F]): F[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] =
          c.run match {
            case -\/(x)                                         => F.map(x.sequence)(y => Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](-\/(y)))
            case \/-(-\/(x))                                    => F.map(x.sequence)(y => Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))                               => F.map(x.sequence)(y => Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))                          => F.map(x.sequence)(y => Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x)))))                     => F.map(x.sequence)(y => Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x))))))                => F.map(x.sequence)(y => Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))           => F.map(x.sequence)(y => Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))      => F.map(x.sequence)(y => Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => F.map(x.sequence)(y => Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) =>
              F.map(x.sequence)(y => Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) =>
              F.map(x.sequence)(y => Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))) =>
              F.map(x.sequence)(y => Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(y)))))))))))))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A1#Cop[F]] = new Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A1#Cop[F]] {
      def getOption(c: Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]): Option[A1#Cop[F]] = c.run match {
        case -\/(x) => Some(x)
        case _      => None
      }
      def reverseGet(x: A1#Cop[F]): Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] = Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](-\/(x))
    }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A2#Cop[F]] = new Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A2#Cop[F]] {
      def getOption(c: Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]): Option[A2#Cop[F]] = c.run match {
        case \/-(-\/(x)) => Some(x)
        case _           => None
      }
      def reverseGet(x: A2#Cop[F]): Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] = Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(-\/(x)))
    }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A3#Cop[F]] = new Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A3#Cop[F]] {
      def getOption(c: Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]): Option[A3#Cop[F]] = c.run match {
        case \/-(\/-(-\/(x))) => Some(x)
        case _                => None
      }
      def reverseGet(x: A3#Cop[F]): Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] = Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(-\/(x))))
    }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A4#Cop[F]] = new Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A4#Cop[F]] {
      def getOption(c: Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]): Option[A4#Cop[F]] = c.run match {
        case \/-(\/-(\/-(-\/(x)))) => Some(x)
        case _                     => None
      }
      def reverseGet(x: A4#Cop[F]): Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] = Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(-\/(x)))))
    }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A5#Cop[F]] = new Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A5#Cop[F]] {
      def getOption(c: Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]): Option[A5#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
        case _                          => None
      }
      def reverseGet(x: A5#Cop[F]): Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] = Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(-\/(x))))))
    }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A6#Cop[F]] = new Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A6#Cop[F]] {
      def getOption(c: Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]): Option[A6#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
        case _                               => None
      }
      def reverseGet(x: A6#Cop[F]): Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] = Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
    }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A6#Cop[F]] = Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A7#Cop[F]] = new Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A7#Cop[F]] {
      def getOption(c: Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]): Option[A7#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
        case _                                    => None
      }
      def reverseGet(x: A7#Cop[F]): Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] = Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
    }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A7#Cop[F]] = Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A8#Cop[F]] = new Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A8#Cop[F]] {
      def getOption(c: Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]): Option[A8#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => Some(x)
        case _                                         => None
      }
      def reverseGet(x: A8#Cop[F]): Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] = Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))
    }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A8#Cop[F]] = Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(prisma7F.getOption(_))

    implicit def prisma8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A9#Cop[F]] = new Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A9#Cop[F]] {
      def getOption(c: Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]): Option[A9#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => Some(x)
        case _                                              => None
      }
      def reverseGet(x: A9#Cop[F]): Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] =
        Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))
    }

    implicit def inja8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A9#Cop[F]] = Inj.instance(prisma8F.reverseGet(_))

    implicit def inja8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A9#Cop[F]], Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(prisma8F.getOption(_))

    implicit def prisma9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A10#Cop[F]] = new Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A10#Cop[F]] {
      def getOption(c: Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]): Option[A10#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) => Some(x)
        case _                                                   => None
      }
      def reverseGet(x: A10#Cop[F]): Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] =
        Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))
    }

    implicit def inja9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A10#Cop[F]] = Inj.instance(prisma9F.reverseGet(_))

    implicit def inja9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A10#Cop[F]], Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(prisma9F.getOption(_))

    implicit def prisma10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A11#Cop[F]] = new Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A11#Cop[F]] {
      def getOption(c: Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]): Option[A11#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) => Some(x)
        case _                                                        => None
      }
      def reverseGet(x: A11#Cop[F]): Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] =
        Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))
    }

    implicit def inja10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A11#Cop[F]] = Inj.instance(prisma10F.reverseGet(_))

    implicit def inja10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A11#Cop[F]], Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(prisma10F.getOption(_))

    implicit def prisma11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A12#Cop[F]] = new Prism[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A12#Cop[F]] {
      def getOption(c: Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]): Option[A12#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))) => Some(x)
        case _                                                        => None
      }
      def reverseGet(x: A12#Cop[F]): Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12] =
        Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))
    }

    implicit def inja11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A12#Cop[F]] = Inj.instance(prisma11F.reverseGet(_))

    implicit def inja11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A12#Cop[F]], Cop12[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = Inj.instance(prisma11F.getOption(_))
  }

  object Cop12 extends Cop12LP {
    implicit def prisma0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A1#Cop[Id]] = prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja0Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A1#Cop[Id]] = inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def prisma1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A2#Cop[Id]] = prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja1Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A2#Cop[Id]] = inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def prisma2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A3#Cop[Id]] = prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja2Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A3#Cop[Id]] = inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def prisma3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A4#Cop[Id]] = prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja3Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A4#Cop[Id]] = inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def prisma4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A5#Cop[Id]] = prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja4Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A5#Cop[Id]] = inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def prisma5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A6#Cop[Id]] = prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja5Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A6#Cop[Id]] = inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def prisma6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A7#Cop[Id]] = prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja6Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A7#Cop[Id]] = inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def prisma7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A8#Cop[Id]] = prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja7Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A8#Cop[Id]] = inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def prisma8Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A9#Cop[Id]] = prisma8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja8Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A9#Cop[Id]] = inja8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja8IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A9#Cop[Id]], Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = inja8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def prisma9Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A10#Cop[Id]] = prisma9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja9Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A10#Cop[Id]] = inja9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja9IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A10#Cop[Id]], Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = inja9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def prisma10Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A11#Cop[Id]] = prisma10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja10Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A11#Cop[Id]] = inja10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja10IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A11#Cop[Id]], Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = inja10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def prisma11Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Prism[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A12#Cop[Id]] = prisma11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja11Id[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12], A12#Cop[Id]] = inja11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]

    implicit def inja11IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor]
        : Inj[Option[A12#Cop[Id]], Cop12[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]] = inja11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12]
  }

  @newtype case class Prod13[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
      run: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F], A12#Prod[F], A13#Prod[F])
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8
    def t9: A9#Prod[F] = run._9
    def t10: A10#Prod[F] = run._10
    def t11: A11#Prod[F] = run._11
    def t12: A12#Prod[F] = run._12
    def t13: A13#Prod[F] = run._13

  }

  trait Prod13LP {
    // format: off
    implicit def Prod13Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod], trans8: Transform[A9#Prod], trans9: Transform[A10#Prod], trans10: Transform[A11#Prod], trans11: Transform[A12#Prod], trans12: Transform[A13#Prod]): Transform[Prod13[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] =
      new Transform[Prod13[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] => Prod13[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] =
          p => Prod13[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8), trans8.transform(nt)(p.t9), trans9.transform(nt)(p.t10), trans10.transform(nt)(p.t11), trans11.transform(nt)(p.t12), trans12.transform(nt)(p.t13)))
      }

    implicit def Prod13Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply], seq8: Sequence[A9#Prod, Apply], seq9: Sequence[A10#Prod, Apply], seq10: Sequence[A11#Prod, Apply], seq11: Sequence[A12#Prod, Apply], seq12: Sequence[A13#Prod, Apply]): Sequence[Prod13[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], Apply] =
      new Sequence[Prod13[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], Apply] {
        def sequence[F[_]](p: Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13])(implicit F: Apply[F]): F[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] =
          F.ap(seq12.sequence(p.t13))(F.ap(seq11.sequence(p.t12))(F.ap(seq10.sequence(p.t11))(F.ap(seq9.sequence(p.t10))(F.ap(seq8.sequence(p.t9))(F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => (i8: A9#Prod[Id]) => (i9: A10#Prod[Id]) => (i10: A11#Prod[Id]) => (i11: A12#Prod[Id]) => (i12: A13#Prod[Id]) => Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12)))))))))))))))
      }
    // format: on

    implicit def Prod13Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
        implicit M: Monoid[(A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F], A12#Prod[F], A13#Prod[F])]
    ): Monoid[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] =
      MF.xmap(
        M,
        Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](
          _: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F], A12#Prod[F], A13#Prod[F])
        ),
        (_: Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
        implicit M: Monoid[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]
    ): Inj[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13)))
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[A1#Prod[F], Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
        implicit M: Monoid[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]
    ): Inj[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13)))
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[A2#Prod[F], Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
        implicit M: Monoid[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]
    ): Inj[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13)))
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[A3#Prod[F], Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
        implicit M: Monoid[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]
    ): Inj[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13)))
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[A4#Prod[F], Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
        implicit M: Monoid[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]
    ): Inj[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13)))
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[A5#Prod[F], Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
        implicit M: Monoid[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]
    ): Inj[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13)))
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[A6#Prod[F], Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
        implicit M: Monoid[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]
    ): Inj[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13)))
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[A7#Prod[F], Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
        implicit M: Monoid[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]
    ): Inj[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x, t.t9, t.t10, t.t11, t.t12, t.t13)))
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[A8#Prod[F], Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(_.t8)

    implicit def lifta8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
        implicit M: Monoid[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]
    ): Inj[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A9#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, x, t.t10, t.t11, t.t12, t.t13)))
    }

    implicit def lifta8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[A9#Prod[F], Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(_.t9)

    implicit def lifta9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
        implicit M: Monoid[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]
    ): Inj[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A10#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, x, t.t11, t.t12, t.t13)))
    }

    implicit def lifta9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[A10#Prod[F], Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(_.t10)

    implicit def lifta10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
        implicit M: Monoid[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]
    ): Inj[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A11#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, x, t.t12, t.t13)))
    }

    implicit def lifta10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[A11#Prod[F], Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(_.t11)

    implicit def lifta11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
        implicit M: Monoid[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]
    ): Inj[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A12#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, x, t.t13)))
    }

    implicit def lifta11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[A12#Prod[F], Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(_.t12)

    implicit def lifta12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
        implicit M: Monoid[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]
    ): Inj[Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A13#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, x)))
    }

    implicit def lifta12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[A13#Prod[F], Prod13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(_.t13)
  }

  object Prod13 extends Prod13LP {
    implicit def lifta0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](implicit M: Monoid[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]): Inj[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A1#Prod[Id]] =
      lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta0IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[A1#Prod[Id], Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](implicit M: Monoid[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]): Inj[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A2#Prod[Id]] =
      lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta1IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[A2#Prod[Id], Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](implicit M: Monoid[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]): Inj[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A3#Prod[Id]] =
      lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta2IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[A3#Prod[Id], Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](implicit M: Monoid[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]): Inj[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A4#Prod[Id]] =
      lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta3IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[A4#Prod[Id], Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](implicit M: Monoid[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]): Inj[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A5#Prod[Id]] =
      lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta4IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[A5#Prod[Id], Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](implicit M: Monoid[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]): Inj[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A6#Prod[Id]] =
      lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta5IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[A6#Prod[Id], Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](implicit M: Monoid[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]): Inj[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A7#Prod[Id]] =
      lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta6IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[A7#Prod[Id], Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](implicit M: Monoid[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]): Inj[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A8#Prod[Id]] =
      lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta7IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[A8#Prod[Id], Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](implicit M: Monoid[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]): Inj[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A9#Prod[Id]] =
      lifta8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta8IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[A9#Prod[Id], Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = lifta8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](implicit M: Monoid[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]): Inj[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A10#Prod[Id]] =
      lifta9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta9IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[A10#Prod[Id], Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = lifta9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](implicit M: Monoid[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]): Inj[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A11#Prod[Id]] =
      lifta10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta10IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[A11#Prod[Id], Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = lifta10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](implicit M: Monoid[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]): Inj[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A12#Prod[Id]] =
      lifta11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta11IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[A12#Prod[Id], Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = lifta11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](implicit M: Monoid[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]]): Inj[Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A13#Prod[Id]] =
      lifta12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def lifta12IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[A13#Prod[Id], Prod13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = lifta12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]
  }

  @newtype case class Cop13[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ (A8#Cop[F] \/ (A9#Cop[F] \/ (A10#Cop[F] \/ (A11#Cop[F] \/ (A12#Cop[F] \/ A13#Cop[
        F
      ]))))))))))))
  )

  trait Cop13LP {
    implicit def Cop13Transform[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop],
        trans8: Transform[A9#Cop],
        trans9: Transform[A10#Cop],
        trans10: Transform[A11#Cop],
        trans11: Transform[A12#Cop],
        trans12: Transform[A13#Cop]
    ): Transform[Cop13[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] =
      new Transform[Cop13[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] => Cop13[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] =
          c =>
            Cop13[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(
                    _.transform(nt),
                    _.bimap(
                      _.transform(nt),
                      _.bimap(
                        _.transform(nt),
                        _.bimap(
                          _.transform(nt),
                          _.bimap(
                            _.transform(nt),
                            _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
      }

    implicit def Cop13Sequence[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor],
        seq8: Sequence[A9#Cop, Functor],
        seq9: Sequence[A10#Cop, Functor],
        seq10: Sequence[A11#Cop, Functor],
        seq11: Sequence[A12#Cop, Functor],
        seq12: Sequence[A13#Cop, Functor]
    ): Sequence[Cop13[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], Functor] =
      new Sequence[Cop13[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], Functor] {
        def sequence[F[_]](c: Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13])(implicit F: Functor[F]): F[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] =
          c.run match {
            case -\/(x)                                    => F.map(x.sequence)(y => Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](-\/(y)))
            case \/-(-\/(x))                               => F.map(x.sequence)(y => Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))                          => F.map(x.sequence)(y => Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))                     => F.map(x.sequence)(y => Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x)))))                => F.map(x.sequence)(y => Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x))))))           => F.map(x.sequence)(y => Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))      => F.map(x.sequence)(y => Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => F.map(x.sequence)(y => Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) =>
              F.map(x.sequence)(y => Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) =>
              F.map(x.sequence)(y => Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) =>
              F.map(x.sequence)(y => Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) =>
              F.map(x.sequence)(y => Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))) =>
              F.map(x.sequence)(y => Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(y))))))))))))))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A1#Cop[F]] = new Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A1#Cop[F]] {
      def getOption(c: Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]): Option[A1#Cop[F]] = c.run match {
        case -\/(x) => Some(x)
        case _      => None
      }
      def reverseGet(x: A1#Cop[F]): Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] = Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](-\/(x))
    }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A2#Cop[F]] = new Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A2#Cop[F]] {
      def getOption(c: Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]): Option[A2#Cop[F]] = c.run match {
        case \/-(-\/(x)) => Some(x)
        case _           => None
      }
      def reverseGet(x: A2#Cop[F]): Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] = Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(-\/(x)))
    }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A3#Cop[F]] = new Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A3#Cop[F]] {
      def getOption(c: Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]): Option[A3#Cop[F]] = c.run match {
        case \/-(\/-(-\/(x))) => Some(x)
        case _                => None
      }
      def reverseGet(x: A3#Cop[F]): Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] = Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(-\/(x))))
    }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A4#Cop[F]] = new Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A4#Cop[F]] {
      def getOption(c: Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]): Option[A4#Cop[F]] = c.run match {
        case \/-(\/-(\/-(-\/(x)))) => Some(x)
        case _                     => None
      }
      def reverseGet(x: A4#Cop[F]): Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] = Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(-\/(x)))))
    }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A5#Cop[F]] = new Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A5#Cop[F]] {
      def getOption(c: Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]): Option[A5#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
        case _                          => None
      }
      def reverseGet(x: A5#Cop[F]): Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] = Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(-\/(x))))))
    }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A6#Cop[F]] = new Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A6#Cop[F]] {
      def getOption(c: Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]): Option[A6#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
        case _                               => None
      }
      def reverseGet(x: A6#Cop[F]): Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] = Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
    }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A6#Cop[F]] = Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A7#Cop[F]] = new Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A7#Cop[F]] {
      def getOption(c: Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]): Option[A7#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
        case _                                    => None
      }
      def reverseGet(x: A7#Cop[F]): Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] =
        Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
    }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A7#Cop[F]] = Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A8#Cop[F]] = new Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A8#Cop[F]] {
      def getOption(c: Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]): Option[A8#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => Some(x)
        case _                                         => None
      }
      def reverseGet(x: A8#Cop[F]): Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] =
        Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))
    }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A8#Cop[F]] = Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(prisma7F.getOption(_))

    implicit def prisma8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A9#Cop[F]] = new Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A9#Cop[F]] {
      def getOption(c: Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]): Option[A9#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => Some(x)
        case _                                              => None
      }
      def reverseGet(x: A9#Cop[F]): Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] =
        Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))
    }

    implicit def inja8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A9#Cop[F]] = Inj.instance(prisma8F.reverseGet(_))

    implicit def inja8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A9#Cop[F]], Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(prisma8F.getOption(_))

    implicit def prisma9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A10#Cop[F]] = new Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A10#Cop[F]] {
      def getOption(c: Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]): Option[A10#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) => Some(x)
        case _                                                   => None
      }
      def reverseGet(x: A10#Cop[F]): Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] =
        Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))
    }

    implicit def inja9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A10#Cop[F]] = Inj.instance(prisma9F.reverseGet(_))

    implicit def inja9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A10#Cop[F]], Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(prisma9F.getOption(_))

    implicit def prisma10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A11#Cop[F]] = new Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A11#Cop[F]] {
      def getOption(c: Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]): Option[A11#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) => Some(x)
        case _                                                        => None
      }
      def reverseGet(x: A11#Cop[F]): Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] =
        Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))
    }

    implicit def inja10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A11#Cop[F]] = Inj.instance(prisma10F.reverseGet(_))

    implicit def inja10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A11#Cop[F]], Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(prisma10F.getOption(_))

    implicit def prisma11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A12#Cop[F]] = new Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A12#Cop[F]] {
      def getOption(c: Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]): Option[A12#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) => Some(x)
        case _                                                             => None
      }
      def reverseGet(x: A12#Cop[F]): Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] =
        Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))
    }

    implicit def inja11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A12#Cop[F]] = Inj.instance(prisma11F.reverseGet(_))

    implicit def inja11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A12#Cop[F]], Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(prisma11F.getOption(_))

    implicit def prisma12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A13#Cop[F]] = new Prism[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A13#Cop[F]] {
      def getOption(c: Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]): Option[A13#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))) => Some(x)
        case _                                                             => None
      }
      def reverseGet(x: A13#Cop[F]): Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13] =
        Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))))
    }

    implicit def inja12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A13#Cop[F]] = Inj.instance(prisma12F.reverseGet(_))

    implicit def inja12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A13#Cop[F]], Cop13[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = Inj.instance(prisma12F.getOption(_))
  }

  object Cop13 extends Cop13LP {
    implicit def prisma0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Prism[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A1#Cop[Id]] = prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A1#Cop[Id]] = inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def prisma1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Prism[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A2#Cop[Id]] = prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A2#Cop[Id]] = inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def prisma2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Prism[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A3#Cop[Id]] = prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A3#Cop[Id]] = inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def prisma3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Prism[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A4#Cop[Id]] = prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A4#Cop[Id]] = inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def prisma4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Prism[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A5#Cop[Id]] = prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A5#Cop[Id]] = inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def prisma5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Prism[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A6#Cop[Id]] = prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A6#Cop[Id]] = inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def prisma6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Prism[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A7#Cop[Id]] = prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A7#Cop[Id]] = inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def prisma7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Prism[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A8#Cop[Id]] = prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A8#Cop[Id]] = inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def prisma8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Prism[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A9#Cop[Id]] = prisma8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A9#Cop[Id]] = inja8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja8IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A9#Cop[Id]], Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = inja8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def prisma9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Prism[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A10#Cop[Id]] = prisma9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A10#Cop[Id]] = inja9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja9IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A10#Cop[Id]], Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = inja9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def prisma10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Prism[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A11#Cop[Id]] = prisma10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A11#Cop[Id]] = inja10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja10IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A11#Cop[Id]], Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = inja10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def prisma11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Prism[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A12#Cop[Id]] = prisma11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A12#Cop[Id]] = inja11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja11IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A12#Cop[Id]], Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = inja11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def prisma12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Prism[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A13#Cop[Id]] = prisma12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor
    ]: Inj[Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13], A13#Cop[Id]] = inja12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]

    implicit def inja12IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor]
        : Inj[Option[A13#Cop[Id]], Cop13[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]] = inja12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13]
  }

  @newtype case class Prod14[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
      run: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F], A12#Prod[F], A13#Prod[F], A14#Prod[F])
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8
    def t9: A9#Prod[F] = run._9
    def t10: A10#Prod[F] = run._10
    def t11: A11#Prod[F] = run._11
    def t12: A12#Prod[F] = run._12
    def t13: A13#Prod[F] = run._13
    def t14: A14#Prod[F] = run._14

  }

  trait Prod14LP {
    // format: off
    implicit def Prod14Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod], trans8: Transform[A9#Prod], trans9: Transform[A10#Prod], trans10: Transform[A11#Prod], trans11: Transform[A12#Prod], trans12: Transform[A13#Prod], trans13: Transform[A14#Prod]): Transform[Prod14[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] =
      new Transform[Prod14[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] => Prod14[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] =
          p => Prod14[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8), trans8.transform(nt)(p.t9), trans9.transform(nt)(p.t10), trans10.transform(nt)(p.t11), trans11.transform(nt)(p.t12), trans12.transform(nt)(p.t13), trans13.transform(nt)(p.t14)))
      }

    implicit def Prod14Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply], seq8: Sequence[A9#Prod, Apply], seq9: Sequence[A10#Prod, Apply], seq10: Sequence[A11#Prod, Apply], seq11: Sequence[A12#Prod, Apply], seq12: Sequence[A13#Prod, Apply], seq13: Sequence[A14#Prod, Apply]): Sequence[Prod14[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], Apply] =
      new Sequence[Prod14[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], Apply] {
        def sequence[F[_]](p: Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14])(implicit F: Apply[F]): F[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] =
          F.ap(seq13.sequence(p.t14))(F.ap(seq12.sequence(p.t13))(F.ap(seq11.sequence(p.t12))(F.ap(seq10.sequence(p.t11))(F.ap(seq9.sequence(p.t10))(F.ap(seq8.sequence(p.t9))(F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => (i8: A9#Prod[Id]) => (i9: A10#Prod[Id]) => (i10: A11#Prod[Id]) => (i11: A12#Prod[Id]) => (i12: A13#Prod[Id]) => (i13: A14#Prod[Id]) => Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13))))))))))))))))
      }
    // format: on

    implicit def Prod14Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[
          (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F], A12#Prod[F], A13#Prod[F], A14#Prod[F])
        ]
    ): Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] =
      MF.xmap(
        M,
        Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](
          _: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F], A12#Prod[F], A13#Prod[F], A14#Prod[F])
        ),
        (_: Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]
    ): Inj[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14)))
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[A1#Prod[F], Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]
    ): Inj[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14)))
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[A2#Prod[F], Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]
    ): Inj[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14)))
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[A3#Prod[F], Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]
    ): Inj[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14)))
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[A4#Prod[F], Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]
    ): Inj[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14)))
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[A5#Prod[F], Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]
    ): Inj[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14)))
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[A6#Prod[F], Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]
    ): Inj[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14)))
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[A7#Prod[F], Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]
    ): Inj[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14)))
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[A8#Prod[F], Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(_.t8)

    implicit def lifta8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]
    ): Inj[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A9#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, x, t.t10, t.t11, t.t12, t.t13, t.t14)))
    }

    implicit def lifta8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[A9#Prod[F], Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(_.t9)

    implicit def lifta9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]
    ): Inj[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A10#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, x, t.t11, t.t12, t.t13, t.t14)))
    }

    implicit def lifta9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[A10#Prod[F], Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(_.t10)

    implicit def lifta10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]
    ): Inj[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A11#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, x, t.t12, t.t13, t.t14)))
    }

    implicit def lifta10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[A11#Prod[F], Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(_.t11)

    implicit def lifta11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]
    ): Inj[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A12#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, x, t.t13, t.t14)))
    }

    implicit def lifta11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[A12#Prod[F], Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(_.t12)

    implicit def lifta12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]
    ): Inj[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A13#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, x, t.t14)))
    }

    implicit def lifta12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[A13#Prod[F], Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(_.t13)

    implicit def lifta13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
        implicit M: Monoid[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]
    ): Inj[Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A14#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, x)))
    }

    implicit def lifta13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[A14#Prod[F], Prod14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(_.t14)
  }

  object Prod14 extends Prod14LP {
    implicit def lifta0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](implicit M: Monoid[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]): Inj[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A1#Prod[Id]] =
      lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta0IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[A1#Prod[Id], Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](implicit M: Monoid[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]): Inj[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A2#Prod[Id]] =
      lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta1IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[A2#Prod[Id], Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](implicit M: Monoid[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]): Inj[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A3#Prod[Id]] =
      lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta2IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[A3#Prod[Id], Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](implicit M: Monoid[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]): Inj[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A4#Prod[Id]] =
      lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta3IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[A4#Prod[Id], Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](implicit M: Monoid[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]): Inj[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A5#Prod[Id]] =
      lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta4IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[A5#Prod[Id], Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](implicit M: Monoid[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]): Inj[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A6#Prod[Id]] =
      lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta5IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[A6#Prod[Id], Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](implicit M: Monoid[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]): Inj[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A7#Prod[Id]] =
      lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta6IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[A7#Prod[Id], Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](implicit M: Monoid[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]): Inj[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A8#Prod[Id]] =
      lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta7IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[A8#Prod[Id], Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](implicit M: Monoid[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]): Inj[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A9#Prod[Id]] =
      lifta8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta8IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[A9#Prod[Id], Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = lifta8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](implicit M: Monoid[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]): Inj[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A10#Prod[Id]] =
      lifta9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta9IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[A10#Prod[Id], Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = lifta9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](implicit M: Monoid[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]): Inj[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A11#Prod[Id]] =
      lifta10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta10IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[A11#Prod[Id], Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = lifta10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](implicit M: Monoid[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]): Inj[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A12#Prod[Id]] =
      lifta11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta11IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[A12#Prod[Id], Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = lifta11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](implicit M: Monoid[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]): Inj[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A13#Prod[Id]] =
      lifta12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta12IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[A13#Prod[Id], Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = lifta12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](implicit M: Monoid[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]]): Inj[Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A14#Prod[Id]] =
      lifta13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def lifta13IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[A14#Prod[Id], Prod14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = lifta13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]
  }

  @newtype case class Cop14[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ (A8#Cop[F] \/ (A9#Cop[F] \/ (A10#Cop[F] \/ (A11#Cop[F] \/ (A12#Cop[F] \/ (A13#Cop[F] \/ A14#Cop[
        F
      ])))))))))))))
  )

  trait Cop14LP {
    implicit def Cop14Transform[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop],
        trans8: Transform[A9#Cop],
        trans9: Transform[A10#Cop],
        trans10: Transform[A11#Cop],
        trans11: Transform[A12#Cop],
        trans12: Transform[A13#Cop],
        trans13: Transform[A14#Cop]
    ): Transform[Cop14[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] =
      new Transform[Cop14[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] => Cop14[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] =
          c =>
            Cop14[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(
                    _.transform(nt),
                    _.bimap(
                      _.transform(nt),
                      _.bimap(
                        _.transform(nt),
                        _.bimap(
                          _.transform(nt),
                          _.bimap(
                            _.transform(nt),
                            _.bimap(
                              _.transform(nt),
                              _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
      }

    implicit def Cop14Sequence[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor],
        seq8: Sequence[A9#Cop, Functor],
        seq9: Sequence[A10#Cop, Functor],
        seq10: Sequence[A11#Cop, Functor],
        seq11: Sequence[A12#Cop, Functor],
        seq12: Sequence[A13#Cop, Functor],
        seq13: Sequence[A14#Cop, Functor]
    ): Sequence[Cop14[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], Functor] =
      new Sequence[Cop14[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], Functor] {
        def sequence[F[_]](
            c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]
        )(implicit F: Functor[F]): F[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] =
          c.run match {
            case -\/(x)                                    => F.map(x.sequence)(y => Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](-\/(y)))
            case \/-(-\/(x))                               => F.map(x.sequence)(y => Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))                          => F.map(x.sequence)(y => Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))                     => F.map(x.sequence)(y => Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x)))))                => F.map(x.sequence)(y => Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x))))))           => F.map(x.sequence)(y => Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))      => F.map(x.sequence)(y => Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => F.map(x.sequence)(y => Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) =>
              F.map(x.sequence)(y => Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) =>
              F.map(x.sequence)(y => Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) =>
              F.map(x.sequence)(y => Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) =>
              F.map(x.sequence)(y => Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) =>
              F.map(x.sequence)(y => Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))) =>
              F.map(x.sequence)(y => Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(y)))))))))))))))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A1#Cop[F]] = new Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A1#Cop[F]] {
      def getOption(c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]): Option[A1#Cop[F]] = c.run match {
        case -\/(x) => Some(x)
        case _      => None
      }
      def reverseGet(x: A1#Cop[F]): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] = Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](-\/(x))
    }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A2#Cop[F]] = new Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A2#Cop[F]] {
      def getOption(c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]): Option[A2#Cop[F]] = c.run match {
        case \/-(-\/(x)) => Some(x)
        case _           => None
      }
      def reverseGet(x: A2#Cop[F]): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] = Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(-\/(x)))
    }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A3#Cop[F]] = new Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A3#Cop[F]] {
      def getOption(c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]): Option[A3#Cop[F]] = c.run match {
        case \/-(\/-(-\/(x))) => Some(x)
        case _                => None
      }
      def reverseGet(x: A3#Cop[F]): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] = Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(-\/(x))))
    }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A4#Cop[F]] = new Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A4#Cop[F]] {
      def getOption(c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]): Option[A4#Cop[F]] = c.run match {
        case \/-(\/-(\/-(-\/(x)))) => Some(x)
        case _                     => None
      }
      def reverseGet(x: A4#Cop[F]): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] = Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(-\/(x)))))
    }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A5#Cop[F]] = new Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A5#Cop[F]] {
      def getOption(c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]): Option[A5#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
        case _                          => None
      }
      def reverseGet(x: A5#Cop[F]): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] =
        Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(-\/(x))))))
    }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A6#Cop[F]] = new Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A6#Cop[F]] {
      def getOption(c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]): Option[A6#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
        case _                               => None
      }
      def reverseGet(x: A6#Cop[F]): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] =
        Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
    }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A6#Cop[F]] = Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A7#Cop[F]] = new Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A7#Cop[F]] {
      def getOption(c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]): Option[A7#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
        case _                                    => None
      }
      def reverseGet(x: A7#Cop[F]): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] =
        Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
    }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A7#Cop[F]] = Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A8#Cop[F]] = new Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A8#Cop[F]] {
      def getOption(c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]): Option[A8#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => Some(x)
        case _                                         => None
      }
      def reverseGet(x: A8#Cop[F]): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] =
        Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))
    }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A8#Cop[F]] = Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(prisma7F.getOption(_))

    implicit def prisma8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A9#Cop[F]] = new Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A9#Cop[F]] {
      def getOption(c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]): Option[A9#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => Some(x)
        case _                                              => None
      }
      def reverseGet(x: A9#Cop[F]): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] =
        Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))
    }

    implicit def inja8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A9#Cop[F]] = Inj.instance(prisma8F.reverseGet(_))

    implicit def inja8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A9#Cop[F]], Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(prisma8F.getOption(_))

    implicit def prisma9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A10#Cop[F]] = new Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A10#Cop[F]] {
      def getOption(c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]): Option[A10#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) => Some(x)
        case _                                                   => None
      }
      def reverseGet(x: A10#Cop[F]): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] =
        Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))
    }

    implicit def inja9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A10#Cop[F]] = Inj.instance(prisma9F.reverseGet(_))

    implicit def inja9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A10#Cop[F]], Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(prisma9F.getOption(_))

    implicit def prisma10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A11#Cop[F]] = new Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A11#Cop[F]] {
      def getOption(c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]): Option[A11#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) => Some(x)
        case _                                                        => None
      }
      def reverseGet(x: A11#Cop[F]): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] =
        Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))
    }

    implicit def inja10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A11#Cop[F]] = Inj.instance(prisma10F.reverseGet(_))

    implicit def inja10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A11#Cop[F]], Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(prisma10F.getOption(_))

    implicit def prisma11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A12#Cop[F]] = new Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A12#Cop[F]] {
      def getOption(c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]): Option[A12#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) => Some(x)
        case _                                                             => None
      }
      def reverseGet(x: A12#Cop[F]): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] =
        Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))
    }

    implicit def inja11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A12#Cop[F]] = Inj.instance(prisma11F.reverseGet(_))

    implicit def inja11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A12#Cop[F]], Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(prisma11F.getOption(_))

    implicit def prisma12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A13#Cop[F]] = new Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A13#Cop[F]] {
      def getOption(c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]): Option[A13#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) => Some(x)
        case _                                                                  => None
      }
      def reverseGet(x: A13#Cop[F]): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] =
        Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))
    }

    implicit def inja12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A13#Cop[F]] = Inj.instance(prisma12F.reverseGet(_))

    implicit def inja12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A13#Cop[F]], Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(prisma12F.getOption(_))

    implicit def prisma13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A14#Cop[F]] = new Prism[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A14#Cop[F]] {
      def getOption(c: Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]): Option[A14#Cop[F]] = c.run match {
        case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))) => Some(x)
        case _                                                                  => None
      }
      def reverseGet(x: A14#Cop[F]): Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14] =
        Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))))
    }

    implicit def inja13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A14#Cop[F]] = Inj.instance(prisma13F.reverseGet(_))

    implicit def inja13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A14#Cop[F]], Cop14[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = Inj.instance(prisma13F.getOption(_))
  }

  object Cop14 extends Cop14LP {
    implicit def prisma0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Prism[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A1#Cop[Id]] = prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A1#Cop[Id]] = inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def prisma1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Prism[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A2#Cop[Id]] = prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A2#Cop[Id]] = inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def prisma2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Prism[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A3#Cop[Id]] = prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A3#Cop[Id]] = inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def prisma3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Prism[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A4#Cop[Id]] = prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A4#Cop[Id]] = inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def prisma4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Prism[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A5#Cop[Id]] = prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A5#Cop[Id]] = inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def prisma5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Prism[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A6#Cop[Id]] = prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A6#Cop[Id]] = inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def prisma6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Prism[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A7#Cop[Id]] = prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A7#Cop[Id]] = inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def prisma7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Prism[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A8#Cop[Id]] = prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A8#Cop[Id]] = inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def prisma8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Prism[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A9#Cop[Id]] = prisma8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A9#Cop[Id]] = inja8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja8IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A9#Cop[Id]], Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = inja8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def prisma9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Prism[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A10#Cop[Id]] = prisma9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A10#Cop[Id]] = inja9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja9IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A10#Cop[Id]], Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = inja9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def prisma10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Prism[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A11#Cop[Id]] = prisma10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A11#Cop[Id]] = inja10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja10IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A11#Cop[Id]], Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = inja10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def prisma11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Prism[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A12#Cop[Id]] = prisma11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A12#Cop[Id]] = inja11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja11IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A12#Cop[Id]], Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = inja11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def prisma12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Prism[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A13#Cop[Id]] = prisma12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A13#Cop[Id]] = inja12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja12IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A13#Cop[Id]], Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = inja12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def prisma13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Prism[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A14#Cop[Id]] = prisma13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor
    ]: Inj[Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14], A14#Cop[Id]] = inja13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]

    implicit def inja13IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor]
        : Inj[Option[A14#Cop[Id]], Cop14[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]] = inja13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14]
  }

  @newtype case class Prod15[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
      run: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F], A12#Prod[F], A13#Prod[F], A14#Prod[F], A15#Prod[F])
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8
    def t9: A9#Prod[F] = run._9
    def t10: A10#Prod[F] = run._10
    def t11: A11#Prod[F] = run._11
    def t12: A12#Prod[F] = run._12
    def t13: A13#Prod[F] = run._13
    def t14: A14#Prod[F] = run._14
    def t15: A15#Prod[F] = run._15

  }

  trait Prod15LP {
    // format: off
    implicit def Prod15Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod], trans8: Transform[A9#Prod], trans9: Transform[A10#Prod], trans10: Transform[A11#Prod], trans11: Transform[A12#Prod], trans12: Transform[A13#Prod], trans13: Transform[A14#Prod], trans14: Transform[A15#Prod]): Transform[Prod15[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] =
      new Transform[Prod15[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] => Prod15[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          p => Prod15[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8), trans8.transform(nt)(p.t9), trans9.transform(nt)(p.t10), trans10.transform(nt)(p.t11), trans11.transform(nt)(p.t12), trans12.transform(nt)(p.t13), trans13.transform(nt)(p.t14), trans14.transform(nt)(p.t15)))
      }

    implicit def Prod15Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply], seq8: Sequence[A9#Prod, Apply], seq9: Sequence[A10#Prod, Apply], seq10: Sequence[A11#Prod, Apply], seq11: Sequence[A12#Prod, Apply], seq12: Sequence[A13#Prod, Apply], seq13: Sequence[A14#Prod, Apply], seq14: Sequence[A15#Prod, Apply]): Sequence[Prod15[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], Apply] =
      new Sequence[Prod15[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], Apply] {
        def sequence[F[_]](p: Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15])(implicit F: Apply[F]): F[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] =
          F.ap(seq14.sequence(p.t15))(F.ap(seq13.sequence(p.t14))(F.ap(seq12.sequence(p.t13))(F.ap(seq11.sequence(p.t12))(F.ap(seq10.sequence(p.t11))(F.ap(seq9.sequence(p.t10))(F.ap(seq8.sequence(p.t9))(F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => (i8: A9#Prod[Id]) => (i9: A10#Prod[Id]) => (i10: A11#Prod[Id]) => (i11: A12#Prod[Id]) => (i12: A13#Prod[Id]) => (i13: A14#Prod[Id]) => (i14: A15#Prod[Id]) => Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14)))))))))))))))))
      }
    // format: on

    implicit def Prod15Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[
          (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F], A12#Prod[F], A13#Prod[F], A14#Prod[F], A15#Prod[F])
        ]
    ): Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] =
      MF.xmap(
        M,
        Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](
          _: (A1#Prod[F], A2#Prod[F], A3#Prod[F], A4#Prod[F], A5#Prod[F], A6#Prod[F], A7#Prod[F], A8#Prod[F], A9#Prod[F], A10#Prod[F], A11#Prod[F], A12#Prod[F], A13#Prod[F], A14#Prod[F], A15#Prod[F])
        ),
        (_: Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15)))
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A1#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15)))
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A2#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15)))
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A3#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15)))
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A4#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15)))
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A5#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15)))
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A6#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15)))
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A7#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15)))
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A8#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t8)

    implicit def lifta8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A9#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, x, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15)))
    }

    implicit def lifta8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A9#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t9)

    implicit def lifta9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A10#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, x, t.t11, t.t12, t.t13, t.t14, t.t15)))
    }

    implicit def lifta9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A10#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t10)

    implicit def lifta10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A11#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, x, t.t12, t.t13, t.t14, t.t15)))
    }

    implicit def lifta10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A11#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t11)

    implicit def lifta11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A12#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, x, t.t13, t.t14, t.t15)))
    }

    implicit def lifta11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A12#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t12)

    implicit def lifta12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A13#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, x, t.t14, t.t15)))
    }

    implicit def lifta12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A13#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t13)

    implicit def lifta13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A14#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, x, t.t15)))
    }

    implicit def lifta13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A14#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t14)

    implicit def lifta14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
        implicit M: Monoid[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A15#Prod[F]] = {
      val t = M.zero
      Inj.instance(x => Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, x)))
    }

    implicit def lifta14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[A15#Prod[F], Prod15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(_.t15)
  }

  object Prod15 extends Prod15LP {
    implicit def lifta0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A1#Prod[Id]] = lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta0IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A1#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A2#Prod[Id]] = lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta1IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A2#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A3#Prod[Id]] = lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta2IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A3#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A4#Prod[Id]] = lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta3IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A4#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A5#Prod[Id]] = lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta4IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A5#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A6#Prod[Id]] = lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta5IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A6#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A7#Prod[Id]] = lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta6IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A7#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A8#Prod[Id]] = lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta7IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A8#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A9#Prod[Id]] = lifta8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta8IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A9#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A10#Prod[Id]] = lifta9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta9IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A10#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A11#Prod[Id]] = lifta10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta10IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A11#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A12#Prod[Id]] = lifta11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta11IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A12#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A13#Prod[Id]] = lifta12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta12IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A13#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A14#Prod[Id]] = lifta13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta13IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A14#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit M: Monoid[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]]
    ): Inj[Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A15#Prod[Id]] = lifta14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def lifta14IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[A15#Prod[Id], Prod15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = lifta14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]
  }

  @newtype case class Cop15[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ (A8#Cop[F] \/ (A9#Cop[F] \/ (A10#Cop[F] \/ (A11#Cop[F] \/ (A12#Cop[F] \/ (A13#Cop[F] \/ (A14#Cop[
        F
      ] \/ A15#Cop[F]))))))))))))))
  )

  trait Cop15LP {
    implicit def Cop15Transform[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop],
        trans8: Transform[A9#Cop],
        trans9: Transform[A10#Cop],
        trans10: Transform[A11#Cop],
        trans11: Transform[A12#Cop],
        trans12: Transform[A13#Cop],
        trans13: Transform[A14#Cop],
        trans14: Transform[A15#Cop]
    ): Transform[Cop15[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] =
      new Transform[Cop15[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] {
        def transform[F[_], G[_]](
            nt: F ~> G
        ): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] => Cop15[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          c =>
            Cop15[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(
                    _.transform(nt),
                    _.bimap(
                      _.transform(nt),
                      _.bimap(
                        _.transform(nt),
                        _.bimap(
                          _.transform(nt),
                          _.bimap(
                            _.transform(nt),
                            _.bimap(
                              _.transform(nt),
                              _.bimap(
                                _.transform(nt),
                                _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
      }

    implicit def Cop15Sequence[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor],
        seq8: Sequence[A9#Cop, Functor],
        seq9: Sequence[A10#Cop, Functor],
        seq10: Sequence[A11#Cop, Functor],
        seq11: Sequence[A12#Cop, Functor],
        seq12: Sequence[A13#Cop, Functor],
        seq13: Sequence[A14#Cop, Functor],
        seq14: Sequence[A15#Cop, Functor]
    ): Sequence[Cop15[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], Functor] =
      new Sequence[Cop15[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], Functor] {
        def sequence[F[_]](
            c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]
        )(implicit F: Functor[F]): F[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] =
          c.run match {
            case -\/(x)                               => F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](-\/(y)))
            case \/-(-\/(x))                          => F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))                     => F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))                => F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x)))))           => F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x))))))      => F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) =>
              F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) =>
              F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) =>
              F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) =>
              F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) =>
              F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) =>
              F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) =>
              F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))))) =>
              F.map(x.sequence)(y => Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(y))))))))))))))))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A1#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A1#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A1#Cop[F]] = c.run match {
          case -\/(x) => Some(x)
          case _      => None
        }
        def reverseGet(x: A1#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] = Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](-\/(x))
      }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A2#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A2#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A2#Cop[F]] = c.run match {
          case \/-(-\/(x)) => Some(x)
          case _           => None
        }
        def reverseGet(x: A2#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(-\/(x)))
      }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A3#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A3#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A3#Cop[F]] = c.run match {
          case \/-(\/-(-\/(x))) => Some(x)
          case _                => None
        }
        def reverseGet(x: A3#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(-\/(x))))
      }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A4#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A4#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A4#Cop[F]] = c.run match {
          case \/-(\/-(\/-(-\/(x)))) => Some(x)
          case _                     => None
        }
        def reverseGet(x: A4#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(-\/(x)))))
      }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A5#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A5#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A5#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
          case _                          => None
        }
        def reverseGet(x: A5#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(-\/(x))))))
      }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A6#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A6#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A6#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
          case _                               => None
        }
        def reverseGet(x: A6#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
      }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A6#Cop[F]] = Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A7#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A7#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A7#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
          case _                                    => None
        }
        def reverseGet(x: A7#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
      }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A7#Cop[F]] = Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A8#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A8#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A8#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => Some(x)
          case _                                         => None
        }
        def reverseGet(x: A8#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))
      }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A8#Cop[F]] = Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma7F.getOption(_))

    implicit def prisma8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A9#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A9#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A9#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => Some(x)
          case _                                              => None
        }
        def reverseGet(x: A9#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))
      }

    implicit def inja8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A9#Cop[F]] = Inj.instance(prisma8F.reverseGet(_))

    implicit def inja8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A9#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma8F.getOption(_))

    implicit def prisma9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A10#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A10#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A10#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) => Some(x)
          case _                                                   => None
        }
        def reverseGet(x: A10#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))
      }

    implicit def inja9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A10#Cop[F]] = Inj.instance(prisma9F.reverseGet(_))

    implicit def inja9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A10#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma9F.getOption(_))

    implicit def prisma10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A11#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A11#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A11#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) => Some(x)
          case _                                                        => None
        }
        def reverseGet(x: A11#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))
      }

    implicit def inja10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A11#Cop[F]] = Inj.instance(prisma10F.reverseGet(_))

    implicit def inja10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A11#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma10F.getOption(_))

    implicit def prisma11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A12#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A12#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A12#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) => Some(x)
          case _                                                             => None
        }
        def reverseGet(x: A12#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))
      }

    implicit def inja11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A12#Cop[F]] = Inj.instance(prisma11F.reverseGet(_))

    implicit def inja11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A12#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma11F.getOption(_))

    implicit def prisma12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A13#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A13#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A13#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) => Some(x)
          case _                                                                  => None
        }
        def reverseGet(x: A13#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))
      }

    implicit def inja12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A13#Cop[F]] = Inj.instance(prisma12F.reverseGet(_))

    implicit def inja12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A13#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma12F.getOption(_))

    implicit def prisma13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A14#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A14#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A14#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) => Some(x)
          case _                                                                       => None
        }
        def reverseGet(x: A14#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))
      }

    implicit def inja13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A14#Cop[F]] = Inj.instance(prisma13F.reverseGet(_))

    implicit def inja13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A14#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma13F.getOption(_))

    implicit def prisma14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A15#Cop[F]] =
      new Prism[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A15#Cop[F]] {
        def getOption(c: Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]): Option[A15#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))))) => Some(x)
          case _                                                                       => None
        }
        def reverseGet(x: A15#Cop[F]): Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15] =
          Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))))))
      }

    implicit def inja14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A15#Cop[F]] = Inj.instance(prisma14F.reverseGet(_))

    implicit def inja14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A15#Cop[F]], Cop15[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = Inj.instance(prisma14F.getOption(_))
  }

  object Cop15 extends Cop15LP {
    implicit def prisma0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A1#Cop[Id]] = prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A1#Cop[Id]] = inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def prisma1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A2#Cop[Id]] = prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A2#Cop[Id]] = inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def prisma2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A3#Cop[Id]] = prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A3#Cop[Id]] = inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def prisma3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A4#Cop[Id]] = prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A4#Cop[Id]] = inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def prisma4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A5#Cop[Id]] = prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A5#Cop[Id]] = inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def prisma5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A6#Cop[Id]] = prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A6#Cop[Id]] = inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def prisma6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A7#Cop[Id]] = prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A7#Cop[Id]] = inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def prisma7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A8#Cop[Id]] = prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A8#Cop[Id]] = inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def prisma8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A9#Cop[Id]] = prisma8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A9#Cop[Id]] = inja8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja8IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A9#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def prisma9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A10#Cop[Id]] = prisma9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A10#Cop[Id]] = inja9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja9IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A10#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def prisma10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A11#Cop[Id]] = prisma10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A11#Cop[Id]] = inja10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja10IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A11#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def prisma11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A12#Cop[Id]] = prisma11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A12#Cop[Id]] = inja11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja11IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A12#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def prisma12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A13#Cop[Id]] = prisma12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A13#Cop[Id]] = inja12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja12IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A13#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def prisma13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A14#Cop[Id]] = prisma13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A14#Cop[Id]] = inja13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja13IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A14#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def prisma14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Prism[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A15#Cop[Id]] = prisma14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor
    ]: Inj[Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15], A15#Cop[Id]] = inja14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]

    implicit def inja14IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor]
        : Inj[Option[A15#Cop[Id]], Cop15[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]] = inja14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15]
  }

  @newtype case class Prod16[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
      run: (
          A1#Prod[F],
          A2#Prod[F],
          A3#Prod[F],
          A4#Prod[F],
          A5#Prod[F],
          A6#Prod[F],
          A7#Prod[F],
          A8#Prod[F],
          A9#Prod[F],
          A10#Prod[F],
          A11#Prod[F],
          A12#Prod[F],
          A13#Prod[F],
          A14#Prod[F],
          A15#Prod[F],
          A16#Prod[F]
      )
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8
    def t9: A9#Prod[F] = run._9
    def t10: A10#Prod[F] = run._10
    def t11: A11#Prod[F] = run._11
    def t12: A12#Prod[F] = run._12
    def t13: A13#Prod[F] = run._13
    def t14: A14#Prod[F] = run._14
    def t15: A15#Prod[F] = run._15
    def t16: A16#Prod[F] = run._16

  }

  trait Prod16LP {
    // format: off
    implicit def Prod16Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod], trans8: Transform[A9#Prod], trans9: Transform[A10#Prod], trans10: Transform[A11#Prod], trans11: Transform[A12#Prod], trans12: Transform[A13#Prod], trans13: Transform[A14#Prod], trans14: Transform[A15#Prod], trans15: Transform[A16#Prod]): Transform[Prod16[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      new Transform[Prod16[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] => Prod16[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          p => Prod16[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8), trans8.transform(nt)(p.t9), trans9.transform(nt)(p.t10), trans10.transform(nt)(p.t11), trans11.transform(nt)(p.t12), trans12.transform(nt)(p.t13), trans13.transform(nt)(p.t14), trans14.transform(nt)(p.t15), trans15.transform(nt)(p.t16)))
      }

    implicit def Prod16Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply], seq8: Sequence[A9#Prod, Apply], seq9: Sequence[A10#Prod, Apply], seq10: Sequence[A11#Prod, Apply], seq11: Sequence[A12#Prod, Apply], seq12: Sequence[A13#Prod, Apply], seq13: Sequence[A14#Prod, Apply], seq14: Sequence[A15#Prod, Apply], seq15: Sequence[A16#Prod, Apply]): Sequence[Prod16[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], Apply] =
      new Sequence[Prod16[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], Apply] {
        def sequence[F[_]](p: Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16])(implicit F: Apply[F]): F[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
          F.ap(seq15.sequence(p.t16))(F.ap(seq14.sequence(p.t15))(F.ap(seq13.sequence(p.t14))(F.ap(seq12.sequence(p.t13))(F.ap(seq11.sequence(p.t12))(F.ap(seq10.sequence(p.t11))(F.ap(seq9.sequence(p.t10))(F.ap(seq8.sequence(p.t9))(F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => (i8: A9#Prod[Id]) => (i9: A10#Prod[Id]) => (i10: A11#Prod[Id]) => (i11: A12#Prod[Id]) => (i12: A13#Prod[Id]) => (i13: A14#Prod[Id]) => (i14: A15#Prod[Id]) => (i15: A16#Prod[Id]) => Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15))))))))))))))))))
      }
    // format: on

    implicit def Prod16Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[
          (
              A1#Prod[F],
              A2#Prod[F],
              A3#Prod[F],
              A4#Prod[F],
              A5#Prod[F],
              A6#Prod[F],
              A7#Prod[F],
              A8#Prod[F],
              A9#Prod[F],
              A10#Prod[F],
              A11#Prod[F],
              A12#Prod[F],
              A13#Prod[F],
              A14#Prod[F],
              A15#Prod[F],
              A16#Prod[F]
          )
        ]
    ): Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      MF.xmap(
        M,
        Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](
          _: (
              A1#Prod[F],
              A2#Prod[F],
              A3#Prod[F],
              A4#Prod[F],
              A5#Prod[F],
              A6#Prod[F],
              A7#Prod[F],
              A8#Prod[F],
              A9#Prod[F],
              A10#Prod[F],
              A11#Prod[F],
              A12#Prod[F],
              A13#Prod[F],
              A14#Prod[F],
              A15#Prod[F],
              A16#Prod[F]
          )
        ),
        (_: Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16))
      )
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A1#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16))
      )
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A2#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16))
      )
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A3#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16))
      )
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A4#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16))
      )
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A5#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16))
      )
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A6#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16))
      )
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A7#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16))
      )
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A8#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t8)

    implicit def lifta8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A9#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, x, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16))
      )
    }

    implicit def lifta8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A9#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t9)

    implicit def lifta9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A10#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, x, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16))
      )
    }

    implicit def lifta9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A10#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t10)

    implicit def lifta10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A11#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, x, t.t12, t.t13, t.t14, t.t15, t.t16))
      )
    }

    implicit def lifta10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A11#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t11)

    implicit def lifta11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A12#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, x, t.t13, t.t14, t.t15, t.t16))
      )
    }

    implicit def lifta11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A12#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t12)

    implicit def lifta12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A13#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, x, t.t14, t.t15, t.t16))
      )
    }

    implicit def lifta12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A13#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t13)

    implicit def lifta13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A14#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, x, t.t15, t.t16))
      )
    }

    implicit def lifta13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A14#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t14)

    implicit def lifta14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A15#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, x, t.t16))
      )
    }

    implicit def lifta14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A15#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t15)

    implicit def lifta15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
        implicit M: Monoid[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A16#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x => Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]((t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, x))
      )
    }

    implicit def lifta15FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[A16#Prod[F], Prod16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(_.t16)
  }

  object Prod16 extends Prod16LP {
    implicit def lifta0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A1#Prod[Id]] = lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta0IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A1#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A2#Prod[Id]] = lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta1IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A2#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A3#Prod[Id]] = lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta2IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A3#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A4#Prod[Id]] = lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta3IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A4#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A5#Prod[Id]] = lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta4IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A5#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A6#Prod[Id]] = lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta5IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A6#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A7#Prod[Id]] = lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta6IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A7#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A8#Prod[Id]] = lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta7IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A8#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A9#Prod[Id]] = lifta8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta8IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A9#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A10#Prod[Id]] = lifta9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta9IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A10#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A11#Prod[Id]] = lifta10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta10IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A11#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A12#Prod[Id]] = lifta11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta11IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A12#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A13#Prod[Id]] = lifta12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta12IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A13#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A14#Prod[Id]] = lifta13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta13IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A14#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A15#Prod[Id]] = lifta14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta14IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A15#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit M: Monoid[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]]
    ): Inj[Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A16#Prod[Id]] = lifta15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def lifta15IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[A16#Prod[Id], Prod16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = lifta15FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]
  }

  @newtype case class Cop16[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ (A8#Cop[F] \/ (A9#Cop[F] \/ (A10#Cop[F] \/ (A11#Cop[F] \/ (A12#Cop[F] \/ (A13#Cop[F] \/ (A14#Cop[
        F
      ] \/ (A15#Cop[F] \/ A16#Cop[F])))))))))))))))
  )

  trait Cop16LP {
    implicit def Cop16Transform[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop],
        trans8: Transform[A9#Cop],
        trans9: Transform[A10#Cop],
        trans10: Transform[A11#Cop],
        trans11: Transform[A12#Cop],
        trans12: Transform[A13#Cop],
        trans13: Transform[A14#Cop],
        trans14: Transform[A15#Cop],
        trans15: Transform[A16#Cop]
    ): Transform[Cop16[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      new Transform[Cop16[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] {
        def transform[F[_], G[_]](
            nt: F ~> G
        ): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] => Cop16[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          c =>
            Cop16[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(
                    _.transform(nt),
                    _.bimap(
                      _.transform(nt),
                      _.bimap(
                        _.transform(nt),
                        _.bimap(
                          _.transform(nt),
                          _.bimap(
                            _.transform(nt),
                            _.bimap(
                              _.transform(nt),
                              _.bimap(
                                _.transform(nt),
                                _.bimap(
                                  _.transform(nt),
                                  _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
      }

    implicit def Cop16Sequence[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor],
        seq8: Sequence[A9#Cop, Functor],
        seq9: Sequence[A10#Cop, Functor],
        seq10: Sequence[A11#Cop, Functor],
        seq11: Sequence[A12#Cop, Functor],
        seq12: Sequence[A13#Cop, Functor],
        seq13: Sequence[A14#Cop, Functor],
        seq14: Sequence[A15#Cop, Functor],
        seq15: Sequence[A16#Cop, Functor]
    ): Sequence[Cop16[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], Functor] =
      new Sequence[Cop16[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], Functor] {
        def sequence[F[_]](
            c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]
        )(implicit F: Functor[F]): F[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
          c.run match {
            case -\/(x)                               => F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](-\/(y)))
            case \/-(-\/(x))                          => F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))                     => F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))                => F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x)))))           => F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x))))))      => F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) =>
              F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) =>
              F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) =>
              F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) =>
              F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) =>
              F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) =>
              F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) =>
              F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))) =>
              F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))))) =>
              F.map(x.sequence)(y => Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(y)))))))))))))))))
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A1#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A1#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A1#Cop[F]] = c.run match {
          case -\/(x) => Some(x)
          case _      => None
        }
        def reverseGet(x: A1#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](-\/(x))
      }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A2#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A2#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A2#Cop[F]] = c.run match {
          case \/-(-\/(x)) => Some(x)
          case _           => None
        }
        def reverseGet(x: A2#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(-\/(x)))
      }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A3#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A3#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A3#Cop[F]] = c.run match {
          case \/-(\/-(-\/(x))) => Some(x)
          case _                => None
        }
        def reverseGet(x: A3#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(-\/(x))))
      }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A4#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A4#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A4#Cop[F]] = c.run match {
          case \/-(\/-(\/-(-\/(x)))) => Some(x)
          case _                     => None
        }
        def reverseGet(x: A4#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(-\/(x)))))
      }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A5#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A5#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A5#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
          case _                          => None
        }
        def reverseGet(x: A5#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(-\/(x))))))
      }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A6#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A6#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A6#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
          case _                               => None
        }
        def reverseGet(x: A6#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
      }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A6#Cop[F]] = Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A7#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A7#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A7#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
          case _                                    => None
        }
        def reverseGet(x: A7#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
      }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A7#Cop[F]] = Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A8#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A8#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A8#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => Some(x)
          case _                                         => None
        }
        def reverseGet(x: A8#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))
      }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A8#Cop[F]] = Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma7F.getOption(_))

    implicit def prisma8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A9#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A9#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A9#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => Some(x)
          case _                                              => None
        }
        def reverseGet(x: A9#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))
      }

    implicit def inja8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A9#Cop[F]] = Inj.instance(prisma8F.reverseGet(_))

    implicit def inja8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A9#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma8F.getOption(_))

    implicit def prisma9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A10#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A10#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A10#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) => Some(x)
          case _                                                   => None
        }
        def reverseGet(x: A10#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))
      }

    implicit def inja9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A10#Cop[F]] = Inj.instance(prisma9F.reverseGet(_))

    implicit def inja9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A10#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma9F.getOption(_))

    implicit def prisma10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A11#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A11#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A11#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) => Some(x)
          case _                                                        => None
        }
        def reverseGet(x: A11#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))
      }

    implicit def inja10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A11#Cop[F]] = Inj.instance(prisma10F.reverseGet(_))

    implicit def inja10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A11#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma10F.getOption(_))

    implicit def prisma11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A12#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A12#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A12#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) => Some(x)
          case _                                                             => None
        }
        def reverseGet(x: A12#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))
      }

    implicit def inja11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A12#Cop[F]] = Inj.instance(prisma11F.reverseGet(_))

    implicit def inja11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A12#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma11F.getOption(_))

    implicit def prisma12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A13#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A13#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A13#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) => Some(x)
          case _                                                                  => None
        }
        def reverseGet(x: A13#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))
      }

    implicit def inja12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A13#Cop[F]] = Inj.instance(prisma12F.reverseGet(_))

    implicit def inja12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A13#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma12F.getOption(_))

    implicit def prisma13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A14#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A14#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A14#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) => Some(x)
          case _                                                                       => None
        }
        def reverseGet(x: A14#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))
      }

    implicit def inja13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A14#Cop[F]] = Inj.instance(prisma13F.reverseGet(_))

    implicit def inja13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A14#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma13F.getOption(_))

    implicit def prisma14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A15#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A15#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A15#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))) => Some(x)
          case _                                                                            => None
        }
        def reverseGet(x: A15#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))
      }

    implicit def inja14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A15#Cop[F]] = Inj.instance(prisma14F.reverseGet(_))

    implicit def inja14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A15#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma14F.getOption(_))

    implicit def prisma15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A16#Cop[F]] =
      new Prism[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A16#Cop[F]] {
        def getOption(c: Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]): Option[A16#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))))) => Some(x)
          case _                                                                            => None
        }
        def reverseGet(x: A16#Cop[F]): Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16] =
          Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))))))
      }

    implicit def inja15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A16#Cop[F]] = Inj.instance(prisma15F.reverseGet(_))

    implicit def inja15FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A16#Cop[F]], Cop16[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] = Inj.instance(prisma15F.getOption(_))
  }

  object Cop16 extends Cop16LP {
    implicit def prisma0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A1#Cop[Id]] = prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A1#Cop[Id]] = inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A2#Cop[Id]] = prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A2#Cop[Id]] = inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A3#Cop[Id]] = prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A3#Cop[Id]] = inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A4#Cop[Id]] = prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A4#Cop[Id]] = inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A5#Cop[Id]] = prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A5#Cop[Id]] = inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A6#Cop[Id]] = prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A6#Cop[Id]] = inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A7#Cop[Id]] = prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A7#Cop[Id]] = inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A8#Cop[Id]] = prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A8#Cop[Id]] = inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A9#Cop[Id]] = prisma8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A9#Cop[Id]] = inja8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja8IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A9#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A10#Cop[Id]] = prisma9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A10#Cop[Id]] = inja9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja9IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A10#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A11#Cop[Id]] = prisma10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A11#Cop[Id]] = inja10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja10IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A11#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A12#Cop[Id]] = prisma11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A12#Cop[Id]] = inja11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja11IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A12#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A13#Cop[Id]] = prisma12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A13#Cop[Id]] = inja12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja12IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A13#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A14#Cop[Id]] = prisma13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A14#Cop[Id]] = inja13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja13IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A14#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A15#Cop[Id]] = prisma14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A15#Cop[Id]] = inja14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja14IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A15#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def prisma15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Prism[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A16#Cop[Id]] = prisma15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor
    ]: Inj[Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16], A16#Cop[Id]] = inja15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]

    implicit def inja15IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor]
        : Inj[Option[A16#Cop[Id]], Cop16[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]] =
      inja15FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16]
  }

  @newtype case class Prod17[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
      run: (
          A1#Prod[F],
          A2#Prod[F],
          A3#Prod[F],
          A4#Prod[F],
          A5#Prod[F],
          A6#Prod[F],
          A7#Prod[F],
          A8#Prod[F],
          A9#Prod[F],
          A10#Prod[F],
          A11#Prod[F],
          A12#Prod[F],
          A13#Prod[F],
          A14#Prod[F],
          A15#Prod[F],
          A16#Prod[F],
          A17#Prod[F]
      )
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8
    def t9: A9#Prod[F] = run._9
    def t10: A10#Prod[F] = run._10
    def t11: A11#Prod[F] = run._11
    def t12: A12#Prod[F] = run._12
    def t13: A13#Prod[F] = run._13
    def t14: A14#Prod[F] = run._14
    def t15: A15#Prod[F] = run._15
    def t16: A16#Prod[F] = run._16
    def t17: A17#Prod[F] = run._17

  }

  trait Prod17LP {
    // format: off
    implicit def Prod17Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod], trans8: Transform[A9#Prod], trans9: Transform[A10#Prod], trans10: Transform[A11#Prod], trans11: Transform[A12#Prod], trans12: Transform[A13#Prod], trans13: Transform[A14#Prod], trans14: Transform[A15#Prod], trans15: Transform[A16#Prod], trans16: Transform[A17#Prod]): Transform[Prod17[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      new Transform[Prod17[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] => Prod17[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          p => Prod17[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8), trans8.transform(nt)(p.t9), trans9.transform(nt)(p.t10), trans10.transform(nt)(p.t11), trans11.transform(nt)(p.t12), trans12.transform(nt)(p.t13), trans13.transform(nt)(p.t14), trans14.transform(nt)(p.t15), trans15.transform(nt)(p.t16), trans16.transform(nt)(p.t17)))
      }

    implicit def Prod17Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply], seq8: Sequence[A9#Prod, Apply], seq9: Sequence[A10#Prod, Apply], seq10: Sequence[A11#Prod, Apply], seq11: Sequence[A12#Prod, Apply], seq12: Sequence[A13#Prod, Apply], seq13: Sequence[A14#Prod, Apply], seq14: Sequence[A15#Prod, Apply], seq15: Sequence[A16#Prod, Apply], seq16: Sequence[A17#Prod, Apply]): Sequence[Prod17[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], Apply] =
      new Sequence[Prod17[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], Apply] {
        def sequence[F[_]](p: Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17])(implicit F: Apply[F]): F[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
          F.ap(seq16.sequence(p.t17))(F.ap(seq15.sequence(p.t16))(F.ap(seq14.sequence(p.t15))(F.ap(seq13.sequence(p.t14))(F.ap(seq12.sequence(p.t13))(F.ap(seq11.sequence(p.t12))(F.ap(seq10.sequence(p.t11))(F.ap(seq9.sequence(p.t10))(F.ap(seq8.sequence(p.t9))(F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => (i8: A9#Prod[Id]) => (i9: A10#Prod[Id]) => (i10: A11#Prod[Id]) => (i11: A12#Prod[Id]) => (i12: A13#Prod[Id]) => (i13: A14#Prod[Id]) => (i14: A15#Prod[Id]) => (i15: A16#Prod[Id]) => (i16: A17#Prod[Id]) => Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]((i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16)))))))))))))))))))
      }
    // format: on

    implicit def Prod17Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[
          (
              A1#Prod[F],
              A2#Prod[F],
              A3#Prod[F],
              A4#Prod[F],
              A5#Prod[F],
              A6#Prod[F],
              A7#Prod[F],
              A8#Prod[F],
              A9#Prod[F],
              A10#Prod[F],
              A11#Prod[F],
              A12#Prod[F],
              A13#Prod[F],
              A14#Prod[F],
              A15#Prod[F],
              A16#Prod[F],
              A17#Prod[F]
          )
        ]
    ): Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      MF.xmap(
        M,
        Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
          _: (
              A1#Prod[F],
              A2#Prod[F],
              A3#Prod[F],
              A4#Prod[F],
              A5#Prod[F],
              A6#Prod[F],
              A7#Prod[F],
              A8#Prod[F],
              A9#Prod[F],
              A10#Prod[F],
              A11#Prod[F],
              A12#Prod[F],
              A13#Prod[F],
              A14#Prod[F],
              A15#Prod[F],
              A16#Prod[F],
              A17#Prod[F]
          )
        ),
        (_: Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17)
          )
      )
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A1#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17)
          )
      )
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A2#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17)
          )
      )
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A3#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17)
          )
      )
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A4#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17)
          )
      )
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A5#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17)
          )
      )
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A6#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17)
          )
      )
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A7#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17)
          )
      )
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A8#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t8)

    implicit def lifta8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A9#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, x, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17)
          )
      )
    }

    implicit def lifta8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A9#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t9)

    implicit def lifta9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A10#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, x, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17)
          )
      )
    }

    implicit def lifta9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A10#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t10)

    implicit def lifta10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A11#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, x, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17)
          )
      )
    }

    implicit def lifta10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A11#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t11)

    implicit def lifta11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A12#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, x, t.t13, t.t14, t.t15, t.t16, t.t17)
          )
      )
    }

    implicit def lifta11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A12#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t12)

    implicit def lifta12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A13#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, x, t.t14, t.t15, t.t16, t.t17)
          )
      )
    }

    implicit def lifta12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A13#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t13)

    implicit def lifta13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A14#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, x, t.t15, t.t16, t.t17)
          )
      )
    }

    implicit def lifta13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A14#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t14)

    implicit def lifta14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A15#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, x, t.t16, t.t17)
          )
      )
    }

    implicit def lifta14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A15#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t15)

    implicit def lifta15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A16#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, x, t.t17)
          )
      )
    }

    implicit def lifta15FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A16#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t16)

    implicit def lifta16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
        implicit M: Monoid[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A17#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, x)
          )
      )
    }

    implicit def lifta16FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[A17#Prod[F], Prod17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(_.t17)
  }

  object Prod17 extends Prod17LP {
    implicit def lifta0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A1#Prod[Id]] =
      lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta0IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A1#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A2#Prod[Id]] =
      lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta1IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A2#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A3#Prod[Id]] =
      lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta2IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A3#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A4#Prod[Id]] =
      lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta3IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A4#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A5#Prod[Id]] =
      lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta4IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A5#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A6#Prod[Id]] =
      lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta5IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A6#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A7#Prod[Id]] =
      lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta6IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A7#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A8#Prod[Id]] =
      lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta7IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A8#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A9#Prod[Id]] =
      lifta8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta8IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A9#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A10#Prod[Id]] =
      lifta9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta9IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A10#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A11#Prod[Id]] =
      lifta10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta10IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A11#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A12#Prod[Id]] =
      lifta11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta11IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A12#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A13#Prod[Id]] =
      lifta12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta12IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A13#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A14#Prod[Id]] =
      lifta13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta13IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A14#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A15#Prod[Id]] =
      lifta14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta14IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A15#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A16#Prod[Id]] =
      lifta15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta15IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A16#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta15FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit M: Monoid[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]]
    ): Inj[Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A17#Prod[Id]] =
      lifta16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def lifta16IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[A17#Prod[Id], Prod17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      lifta16FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]
  }

  @newtype case class Cop17[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ (A8#Cop[F] \/ (A9#Cop[F] \/ (A10#Cop[F] \/ (A11#Cop[F] \/ (A12#Cop[F] \/ (A13#Cop[F] \/ (A14#Cop[
        F
      ] \/ (A15#Cop[F] \/ (A16#Cop[F] \/ A17#Cop[F]))))))))))))))))
  )

  trait Cop17LP {
    implicit def Cop17Transform[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop],
        trans8: Transform[A9#Cop],
        trans9: Transform[A10#Cop],
        trans10: Transform[A11#Cop],
        trans11: Transform[A12#Cop],
        trans12: Transform[A13#Cop],
        trans13: Transform[A14#Cop],
        trans14: Transform[A15#Cop],
        trans15: Transform[A16#Cop],
        trans16: Transform[A17#Cop]
    ): Transform[Cop17[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      new Transform[Cop17[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] {
        def transform[F[_], G[_]](
            nt: F ~> G
        ): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] => Cop17[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          c =>
            Cop17[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(
                    _.transform(nt),
                    _.bimap(
                      _.transform(nt),
                      _.bimap(
                        _.transform(nt),
                        _.bimap(
                          _.transform(nt),
                          _.bimap(
                            _.transform(nt),
                            _.bimap(
                              _.transform(nt),
                              _.bimap(
                                _.transform(nt),
                                _.bimap(
                                  _.transform(nt),
                                  _.bimap(
                                    _.transform(nt),
                                    _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
      }

    implicit def Cop17Sequence[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor],
        seq8: Sequence[A9#Cop, Functor],
        seq9: Sequence[A10#Cop, Functor],
        seq10: Sequence[A11#Cop, Functor],
        seq11: Sequence[A12#Cop, Functor],
        seq12: Sequence[A13#Cop, Functor],
        seq13: Sequence[A14#Cop, Functor],
        seq14: Sequence[A15#Cop, Functor],
        seq15: Sequence[A16#Cop, Functor],
        seq16: Sequence[A17#Cop, Functor]
    ): Sequence[Cop17[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], Functor] =
      new Sequence[Cop17[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], Functor] {
        def sequence[F[_]](
            c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]
        )(implicit F: Functor[F]): F[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
          c.run match {
            case -\/(x)                          => F.map(x.sequence)(y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](-\/(y)))
            case \/-(-\/(x))                     => F.map(x.sequence)(y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))                => F.map(x.sequence)(y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))           => F.map(x.sequence)(y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x)))))      => F.map(x.sequence)(y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => F.map(x.sequence)(y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) =>
              F.map(x.sequence)(y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) =>
              F.map(x.sequence)(y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) =>
              F.map(x.sequence)(y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) =>
              F.map(x.sequence)(y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) =>
              F.map(x.sequence)(y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) =>
              F.map(x.sequence)(y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) =>
              F.map(x.sequence)(y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) =>
              F.map(x.sequence)(y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))) =>
              F.map(x.sequence)(
                y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))) =>
              F.map(x.sequence)(
                y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))))))) =>
              F.map(x.sequence)(
                y => Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(y)))))))))))))))))
              )
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A1#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A1#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A1#Cop[F]] = c.run match {
          case -\/(x) => Some(x)
          case _      => None
        }
        def reverseGet(x: A1#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](-\/(x))
      }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A2#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A2#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A2#Cop[F]] = c.run match {
          case \/-(-\/(x)) => Some(x)
          case _           => None
        }
        def reverseGet(x: A2#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(-\/(x)))
      }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A3#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A3#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A3#Cop[F]] = c.run match {
          case \/-(\/-(-\/(x))) => Some(x)
          case _                => None
        }
        def reverseGet(x: A3#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(-\/(x))))
      }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A4#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A4#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A4#Cop[F]] = c.run match {
          case \/-(\/-(\/-(-\/(x)))) => Some(x)
          case _                     => None
        }
        def reverseGet(x: A4#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(-\/(x)))))
      }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A5#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A5#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A5#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
          case _                          => None
        }
        def reverseGet(x: A5#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(-\/(x))))))
      }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A6#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A6#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A6#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
          case _                               => None
        }
        def reverseGet(x: A6#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
      }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A6#Cop[F]] = Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A7#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A7#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A7#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
          case _                                    => None
        }
        def reverseGet(x: A7#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
      }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A7#Cop[F]] = Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A8#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A8#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A8#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => Some(x)
          case _                                         => None
        }
        def reverseGet(x: A8#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))
      }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A8#Cop[F]] = Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma7F.getOption(_))

    implicit def prisma8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A9#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A9#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A9#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => Some(x)
          case _                                              => None
        }
        def reverseGet(x: A9#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))
      }

    implicit def inja8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A9#Cop[F]] = Inj.instance(prisma8F.reverseGet(_))

    implicit def inja8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A9#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma8F.getOption(_))

    implicit def prisma9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A10#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A10#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A10#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) => Some(x)
          case _                                                   => None
        }
        def reverseGet(x: A10#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))
      }

    implicit def inja9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A10#Cop[F]] = Inj.instance(prisma9F.reverseGet(_))

    implicit def inja9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A10#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma9F.getOption(_))

    implicit def prisma10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A11#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A11#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A11#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) => Some(x)
          case _                                                        => None
        }
        def reverseGet(x: A11#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))
      }

    implicit def inja10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A11#Cop[F]] = Inj.instance(prisma10F.reverseGet(_))

    implicit def inja10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A11#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma10F.getOption(_))

    implicit def prisma11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A12#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A12#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A12#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) => Some(x)
          case _                                                             => None
        }
        def reverseGet(x: A12#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))
      }

    implicit def inja11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A12#Cop[F]] = Inj.instance(prisma11F.reverseGet(_))

    implicit def inja11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A12#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma11F.getOption(_))

    implicit def prisma12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A13#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A13#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A13#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) => Some(x)
          case _                                                                  => None
        }
        def reverseGet(x: A13#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))
      }

    implicit def inja12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A13#Cop[F]] = Inj.instance(prisma12F.reverseGet(_))

    implicit def inja12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A13#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma12F.getOption(_))

    implicit def prisma13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A14#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A14#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A14#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) => Some(x)
          case _                                                                       => None
        }
        def reverseGet(x: A14#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))
      }

    implicit def inja13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A14#Cop[F]] = Inj.instance(prisma13F.reverseGet(_))

    implicit def inja13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A14#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma13F.getOption(_))

    implicit def prisma14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A15#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A15#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A15#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))) => Some(x)
          case _                                                                            => None
        }
        def reverseGet(x: A15#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))
      }

    implicit def inja14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A15#Cop[F]] = Inj.instance(prisma14F.reverseGet(_))

    implicit def inja14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A15#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma14F.getOption(_))

    implicit def prisma15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A16#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A16#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A16#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))) => Some(x)
          case _                                                                                 => None
        }
        def reverseGet(x: A16#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))
      }

    implicit def inja15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A16#Cop[F]] = Inj.instance(prisma15F.reverseGet(_))

    implicit def inja15FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A16#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma15F.getOption(_))

    implicit def prisma16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A17#Cop[F]] =
      new Prism[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A17#Cop[F]] {
        def getOption(c: Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]): Option[A17#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))))))) => Some(x)
          case _                                                                                 => None
        }
        def reverseGet(x: A17#Cop[F]): Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17] =
          Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))))))))
      }

    implicit def inja16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A17#Cop[F]] = Inj.instance(prisma16F.reverseGet(_))

    implicit def inja16FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A17#Cop[F]], Cop17[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] = Inj.instance(prisma16F.getOption(_))
  }

  object Cop17 extends Cop17LP {
    implicit def prisma0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A1#Cop[Id]] =
      prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A1#Cop[Id]] = inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A2#Cop[Id]] =
      prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A2#Cop[Id]] = inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A3#Cop[Id]] =
      prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A3#Cop[Id]] = inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A4#Cop[Id]] =
      prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A4#Cop[Id]] = inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A5#Cop[Id]] =
      prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A5#Cop[Id]] = inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A6#Cop[Id]] =
      prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A6#Cop[Id]] = inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A7#Cop[Id]] =
      prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A7#Cop[Id]] = inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A8#Cop[Id]] =
      prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A8#Cop[Id]] = inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A9#Cop[Id]] =
      prisma8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A9#Cop[Id]] = inja8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja8IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A9#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A10#Cop[Id]] =
      prisma9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A10#Cop[Id]] = inja9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja9IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A10#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A11#Cop[Id]] =
      prisma10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A11#Cop[Id]] = inja10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja10IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A11#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A12#Cop[Id]] =
      prisma11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A12#Cop[Id]] = inja11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja11IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A12#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A13#Cop[Id]] =
      prisma12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A13#Cop[Id]] = inja12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja12IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A13#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A14#Cop[Id]] =
      prisma13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A14#Cop[Id]] = inja13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja13IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A14#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A15#Cop[Id]] =
      prisma14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A15#Cop[Id]] = inja14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja14IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A15#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A16#Cop[Id]] =
      prisma15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A16#Cop[Id]] = inja15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja15IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A16#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja15FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def prisma16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Prism[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A17#Cop[Id]] =
      prisma16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor
    ]: Inj[Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17], A17#Cop[Id]] = inja16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]

    implicit def inja16IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor]
        : Inj[Option[A17#Cop[Id]], Cop17[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]] =
      inja16FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17]
  }

  @newtype case class Prod18[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
      run: (
          A1#Prod[F],
          A2#Prod[F],
          A3#Prod[F],
          A4#Prod[F],
          A5#Prod[F],
          A6#Prod[F],
          A7#Prod[F],
          A8#Prod[F],
          A9#Prod[F],
          A10#Prod[F],
          A11#Prod[F],
          A12#Prod[F],
          A13#Prod[F],
          A14#Prod[F],
          A15#Prod[F],
          A16#Prod[F],
          A17#Prod[F],
          A18#Prod[F]
      )
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8
    def t9: A9#Prod[F] = run._9
    def t10: A10#Prod[F] = run._10
    def t11: A11#Prod[F] = run._11
    def t12: A12#Prod[F] = run._12
    def t13: A13#Prod[F] = run._13
    def t14: A14#Prod[F] = run._14
    def t15: A15#Prod[F] = run._15
    def t16: A16#Prod[F] = run._16
    def t17: A17#Prod[F] = run._17
    def t18: A18#Prod[F] = run._18

  }

  trait Prod18LP {
    // format: off
    implicit def Prod18Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod], trans8: Transform[A9#Prod], trans9: Transform[A10#Prod], trans10: Transform[A11#Prod], trans11: Transform[A12#Prod], trans12: Transform[A13#Prod], trans13: Transform[A14#Prod], trans14: Transform[A15#Prod], trans15: Transform[A16#Prod], trans16: Transform[A17#Prod], trans17: Transform[A18#Prod]): Transform[Prod18[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      new Transform[Prod18[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] => Prod18[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          p => Prod18[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8), trans8.transform(nt)(p.t9), trans9.transform(nt)(p.t10), trans10.transform(nt)(p.t11), trans11.transform(nt)(p.t12), trans12.transform(nt)(p.t13), trans13.transform(nt)(p.t14), trans14.transform(nt)(p.t15), trans15.transform(nt)(p.t16), trans16.transform(nt)(p.t17), trans17.transform(nt)(p.t18)))
      }

    implicit def Prod18Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply], seq8: Sequence[A9#Prod, Apply], seq9: Sequence[A10#Prod, Apply], seq10: Sequence[A11#Prod, Apply], seq11: Sequence[A12#Prod, Apply], seq12: Sequence[A13#Prod, Apply], seq13: Sequence[A14#Prod, Apply], seq14: Sequence[A15#Prod, Apply], seq15: Sequence[A16#Prod, Apply], seq16: Sequence[A17#Prod, Apply], seq17: Sequence[A18#Prod, Apply]): Sequence[Prod18[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], Apply] =
      new Sequence[Prod18[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], Apply] {
        def sequence[F[_]](p: Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18])(implicit F: Apply[F]): F[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
          F.ap(seq17.sequence(p.t18))(F.ap(seq16.sequence(p.t17))(F.ap(seq15.sequence(p.t16))(F.ap(seq14.sequence(p.t15))(F.ap(seq13.sequence(p.t14))(F.ap(seq12.sequence(p.t13))(F.ap(seq11.sequence(p.t12))(F.ap(seq10.sequence(p.t11))(F.ap(seq9.sequence(p.t10))(F.ap(seq8.sequence(p.t9))(F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => (i8: A9#Prod[Id]) => (i9: A10#Prod[Id]) => (i10: A11#Prod[Id]) => (i11: A12#Prod[Id]) => (i12: A13#Prod[Id]) => (i13: A14#Prod[Id]) => (i14: A15#Prod[Id]) => (i15: A16#Prod[Id]) => (i16: A17#Prod[Id]) => (i17: A18#Prod[Id]) => Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]((i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17))))))))))))))))))))
      }
    // format: on

    implicit def Prod18Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[
          (
              A1#Prod[F],
              A2#Prod[F],
              A3#Prod[F],
              A4#Prod[F],
              A5#Prod[F],
              A6#Prod[F],
              A7#Prod[F],
              A8#Prod[F],
              A9#Prod[F],
              A10#Prod[F],
              A11#Prod[F],
              A12#Prod[F],
              A13#Prod[F],
              A14#Prod[F],
              A15#Prod[F],
              A16#Prod[F],
              A17#Prod[F],
              A18#Prod[F]
          )
        ]
    ): Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      MF.xmap(
        M,
        Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
          _: (
              A1#Prod[F],
              A2#Prod[F],
              A3#Prod[F],
              A4#Prod[F],
              A5#Prod[F],
              A6#Prod[F],
              A7#Prod[F],
              A8#Prod[F],
              A9#Prod[F],
              A10#Prod[F],
              A11#Prod[F],
              A12#Prod[F],
              A13#Prod[F],
              A14#Prod[F],
              A15#Prod[F],
              A16#Prod[F],
              A17#Prod[F],
              A18#Prod[F]
          )
        ),
        (_: Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A1#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A2#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A3#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A4#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A5#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A6#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A7#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A8#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t8)

    implicit def lifta8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A9#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, x, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A9#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t9)

    implicit def lifta9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A10#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, x, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A10#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t10)

    implicit def lifta10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A11#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, x, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A11#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t11)

    implicit def lifta11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A12#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, x, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A12#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t12)

    implicit def lifta12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A13#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, x, t.t14, t.t15, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A13#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t13)

    implicit def lifta13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A14#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, x, t.t15, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A14#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t14)

    implicit def lifta14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A15#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, x, t.t16, t.t17, t.t18)
          )
      )
    }

    implicit def lifta14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A15#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t15)

    implicit def lifta15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A16#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, x, t.t17, t.t18)
          )
      )
    }

    implicit def lifta15FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A16#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t16)

    implicit def lifta16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A17#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, x, t.t18)
          )
      )
    }

    implicit def lifta16FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A17#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t17)

    implicit def lifta17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
        implicit M: Monoid[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A18#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, x)
          )
      )
    }

    implicit def lifta17FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[A18#Prod[F], Prod18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(_.t18)
  }

  object Prod18 extends Prod18LP {
    implicit def lifta0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A1#Prod[Id]] =
      lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta0IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A1#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A2#Prod[Id]] =
      lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta1IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A2#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A3#Prod[Id]] =
      lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta2IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A3#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A4#Prod[Id]] =
      lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta3IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A4#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A5#Prod[Id]] =
      lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta4IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A5#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A6#Prod[Id]] =
      lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta5IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A6#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A7#Prod[Id]] =
      lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta6IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A7#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A8#Prod[Id]] =
      lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta7IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A8#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A9#Prod[Id]] =
      lifta8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta8IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A9#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A10#Prod[Id]] =
      lifta9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta9IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A10#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A11#Prod[Id]] =
      lifta10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta10IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A11#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A12#Prod[Id]] =
      lifta11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta11IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A12#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A13#Prod[Id]] =
      lifta12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta12IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A13#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A14#Prod[Id]] =
      lifta13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta13IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A14#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A15#Prod[Id]] =
      lifta14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta14IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A15#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A16#Prod[Id]] =
      lifta15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta15IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A16#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta15FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A17#Prod[Id]] =
      lifta16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta16IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A17#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta16FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit M: Monoid[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]]
    ): Inj[Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A18#Prod[Id]] =
      lifta17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def lifta17IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[A18#Prod[Id], Prod18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      lifta17FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]
  }

  @newtype case class Cop18[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ (A8#Cop[F] \/ (A9#Cop[F] \/ (A10#Cop[F] \/ (A11#Cop[F] \/ (A12#Cop[F] \/ (A13#Cop[F] \/ (A14#Cop[
        F
      ] \/ (A15#Cop[F] \/ (A16#Cop[F] \/ (A17#Cop[F] \/ A18#Cop[F])))))))))))))))))
  )

  trait Cop18LP {
    implicit def Cop18Transform[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop],
        trans8: Transform[A9#Cop],
        trans9: Transform[A10#Cop],
        trans10: Transform[A11#Cop],
        trans11: Transform[A12#Cop],
        trans12: Transform[A13#Cop],
        trans13: Transform[A14#Cop],
        trans14: Transform[A15#Cop],
        trans15: Transform[A16#Cop],
        trans16: Transform[A17#Cop],
        trans17: Transform[A18#Cop]
    ): Transform[Cop18[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      new Transform[Cop18[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] {
        def transform[F[_], G[_]](
            nt: F ~> G
        ): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] => Cop18[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          c =>
            Cop18[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(
                    _.transform(nt),
                    _.bimap(
                      _.transform(nt),
                      _.bimap(
                        _.transform(nt),
                        _.bimap(
                          _.transform(nt),
                          _.bimap(
                            _.transform(nt),
                            _.bimap(
                              _.transform(nt),
                              _.bimap(
                                _.transform(nt),
                                _.bimap(
                                  _.transform(nt),
                                  _.bimap(
                                    _.transform(nt),
                                    _.bimap(
                                      _.transform(nt),
                                      _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
      }

    implicit def Cop18Sequence[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor],
        seq8: Sequence[A9#Cop, Functor],
        seq9: Sequence[A10#Cop, Functor],
        seq10: Sequence[A11#Cop, Functor],
        seq11: Sequence[A12#Cop, Functor],
        seq12: Sequence[A13#Cop, Functor],
        seq13: Sequence[A14#Cop, Functor],
        seq14: Sequence[A15#Cop, Functor],
        seq15: Sequence[A16#Cop, Functor],
        seq16: Sequence[A17#Cop, Functor],
        seq17: Sequence[A18#Cop, Functor]
    ): Sequence[Cop18[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], Functor] =
      new Sequence[Cop18[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], Functor] {
        def sequence[F[_]](
            c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]
        )(implicit F: Functor[F]): F[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
          c.run match {
            case -\/(x)                          => F.map(x.sequence)(y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](-\/(y)))
            case \/-(-\/(x))                     => F.map(x.sequence)(y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))                => F.map(x.sequence)(y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))           => F.map(x.sequence)(y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x)))))      => F.map(x.sequence)(y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => F.map(x.sequence)(y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) =>
              F.map(x.sequence)(y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) =>
              F.map(x.sequence)(y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) =>
              F.map(x.sequence)(y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) =>
              F.map(x.sequence)(y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) =>
              F.map(x.sequence)(y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) =>
              F.map(x.sequence)(y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) =>
              F.map(x.sequence)(y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) =>
              F.map(x.sequence)(
                y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))) =>
              F.map(x.sequence)(
                y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))) =>
              F.map(x.sequence)(
                y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))) =>
              F.map(x.sequence)(
                y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))))))) =>
              F.map(x.sequence)(
                y => Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(y))))))))))))))))))
              )
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A1#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A1#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A1#Cop[F]] = c.run match {
          case -\/(x) => Some(x)
          case _      => None
        }
        def reverseGet(x: A1#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](-\/(x))
      }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A2#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A2#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A2#Cop[F]] = c.run match {
          case \/-(-\/(x)) => Some(x)
          case _           => None
        }
        def reverseGet(x: A2#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(-\/(x)))
      }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A3#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A3#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A3#Cop[F]] = c.run match {
          case \/-(\/-(-\/(x))) => Some(x)
          case _                => None
        }
        def reverseGet(x: A3#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(-\/(x))))
      }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A4#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A4#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A4#Cop[F]] = c.run match {
          case \/-(\/-(\/-(-\/(x)))) => Some(x)
          case _                     => None
        }
        def reverseGet(x: A4#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(-\/(x)))))
      }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A5#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A5#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A5#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
          case _                          => None
        }
        def reverseGet(x: A5#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(-\/(x))))))
      }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A6#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A6#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A6#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
          case _                               => None
        }
        def reverseGet(x: A6#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
      }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A6#Cop[F]] = Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A7#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A7#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A7#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
          case _                                    => None
        }
        def reverseGet(x: A7#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
      }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A7#Cop[F]] = Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A8#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A8#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A8#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => Some(x)
          case _                                         => None
        }
        def reverseGet(x: A8#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))
      }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A8#Cop[F]] = Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma7F.getOption(_))

    implicit def prisma8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A9#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A9#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A9#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => Some(x)
          case _                                              => None
        }
        def reverseGet(x: A9#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))
      }

    implicit def inja8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A9#Cop[F]] = Inj.instance(prisma8F.reverseGet(_))

    implicit def inja8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A9#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma8F.getOption(_))

    implicit def prisma9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A10#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A10#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A10#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) => Some(x)
          case _                                                   => None
        }
        def reverseGet(x: A10#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))
      }

    implicit def inja9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A10#Cop[F]] = Inj.instance(prisma9F.reverseGet(_))

    implicit def inja9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A10#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma9F.getOption(_))

    implicit def prisma10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A11#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A11#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A11#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) => Some(x)
          case _                                                        => None
        }
        def reverseGet(x: A11#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))
      }

    implicit def inja10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A11#Cop[F]] = Inj.instance(prisma10F.reverseGet(_))

    implicit def inja10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A11#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma10F.getOption(_))

    implicit def prisma11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A12#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A12#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A12#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) => Some(x)
          case _                                                             => None
        }
        def reverseGet(x: A12#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))
      }

    implicit def inja11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A12#Cop[F]] = Inj.instance(prisma11F.reverseGet(_))

    implicit def inja11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A12#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma11F.getOption(_))

    implicit def prisma12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A13#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A13#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A13#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) => Some(x)
          case _                                                                  => None
        }
        def reverseGet(x: A13#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))
      }

    implicit def inja12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A13#Cop[F]] = Inj.instance(prisma12F.reverseGet(_))

    implicit def inja12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A13#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma12F.getOption(_))

    implicit def prisma13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A14#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A14#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A14#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) => Some(x)
          case _                                                                       => None
        }
        def reverseGet(x: A14#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))
      }

    implicit def inja13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A14#Cop[F]] = Inj.instance(prisma13F.reverseGet(_))

    implicit def inja13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A14#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma13F.getOption(_))

    implicit def prisma14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A15#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A15#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A15#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))) => Some(x)
          case _                                                                            => None
        }
        def reverseGet(x: A15#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))
      }

    implicit def inja14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A15#Cop[F]] = Inj.instance(prisma14F.reverseGet(_))

    implicit def inja14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A15#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma14F.getOption(_))

    implicit def prisma15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A16#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A16#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A16#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))) => Some(x)
          case _                                                                                 => None
        }
        def reverseGet(x: A16#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))
      }

    implicit def inja15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A16#Cop[F]] = Inj.instance(prisma15F.reverseGet(_))

    implicit def inja15FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A16#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma15F.getOption(_))

    implicit def prisma16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A17#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A17#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A17#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))) => Some(x)
          case _                                                                                      => None
        }
        def reverseGet(x: A17#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))
      }

    implicit def inja16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A17#Cop[F]] = Inj.instance(prisma16F.reverseGet(_))

    implicit def inja16FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A17#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma16F.getOption(_))

    implicit def prisma17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A18#Cop[F]] =
      new Prism[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A18#Cop[F]] {
        def getOption(c: Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]): Option[A18#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))))))) => Some(x)
          case _                                                                                      => None
        }
        def reverseGet(x: A18#Cop[F]): Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18] =
          Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))))))))
      }

    implicit def inja17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A18#Cop[F]] = Inj.instance(prisma17F.reverseGet(_))

    implicit def inja17FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A18#Cop[F]], Cop18[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] = Inj.instance(prisma17F.getOption(_))
  }

  object Cop18 extends Cop18LP {
    implicit def prisma0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A1#Cop[Id]] =
      prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A1#Cop[Id]] =
      inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A2#Cop[Id]] =
      prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A2#Cop[Id]] =
      inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A3#Cop[Id]] =
      prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A3#Cop[Id]] =
      inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A4#Cop[Id]] =
      prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A4#Cop[Id]] =
      inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A5#Cop[Id]] =
      prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A5#Cop[Id]] =
      inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A6#Cop[Id]] =
      prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A6#Cop[Id]] =
      inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A7#Cop[Id]] =
      prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A7#Cop[Id]] =
      inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A8#Cop[Id]] =
      prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A8#Cop[Id]] =
      inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A9#Cop[Id]] =
      prisma8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A9#Cop[Id]] =
      inja8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja8IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A9#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A10#Cop[Id]] =
      prisma9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A10#Cop[Id]] =
      inja9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja9IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A10#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A11#Cop[Id]] =
      prisma10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A11#Cop[Id]] =
      inja10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja10IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A11#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A12#Cop[Id]] =
      prisma11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A12#Cop[Id]] =
      inja11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja11IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A12#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A13#Cop[Id]] =
      prisma12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A13#Cop[Id]] =
      inja12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja12IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A13#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A14#Cop[Id]] =
      prisma13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A14#Cop[Id]] =
      inja13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja13IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A14#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A15#Cop[Id]] =
      prisma14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A15#Cop[Id]] =
      inja14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja14IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A15#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A16#Cop[Id]] =
      prisma15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A16#Cop[Id]] =
      inja15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja15IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A16#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja15FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A17#Cop[Id]] =
      prisma16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A17#Cop[Id]] =
      inja16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja16IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A17#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja16FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def prisma17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Prism[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A18#Cop[Id]] =
      prisma17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor
    ]: Inj[Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18], A18#Cop[Id]] =
      inja17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]

    implicit def inja17IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor]
        : Inj[Option[A18#Cop[Id]], Cop18[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]] =
      inja17FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18]
  }

  @newtype case class Prod19[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
      run: (
          A1#Prod[F],
          A2#Prod[F],
          A3#Prod[F],
          A4#Prod[F],
          A5#Prod[F],
          A6#Prod[F],
          A7#Prod[F],
          A8#Prod[F],
          A9#Prod[F],
          A10#Prod[F],
          A11#Prod[F],
          A12#Prod[F],
          A13#Prod[F],
          A14#Prod[F],
          A15#Prod[F],
          A16#Prod[F],
          A17#Prod[F],
          A18#Prod[F],
          A19#Prod[F]
      )
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8
    def t9: A9#Prod[F] = run._9
    def t10: A10#Prod[F] = run._10
    def t11: A11#Prod[F] = run._11
    def t12: A12#Prod[F] = run._12
    def t13: A13#Prod[F] = run._13
    def t14: A14#Prod[F] = run._14
    def t15: A15#Prod[F] = run._15
    def t16: A16#Prod[F] = run._16
    def t17: A17#Prod[F] = run._17
    def t18: A18#Prod[F] = run._18
    def t19: A19#Prod[F] = run._19

  }

  trait Prod19LP {
    // format: off
    implicit def Prod19Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod], trans8: Transform[A9#Prod], trans9: Transform[A10#Prod], trans10: Transform[A11#Prod], trans11: Transform[A12#Prod], trans12: Transform[A13#Prod], trans13: Transform[A14#Prod], trans14: Transform[A15#Prod], trans15: Transform[A16#Prod], trans16: Transform[A17#Prod], trans17: Transform[A18#Prod], trans18: Transform[A19#Prod]): Transform[Prod19[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      new Transform[Prod19[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] => Prod19[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          p => Prod19[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8), trans8.transform(nt)(p.t9), trans9.transform(nt)(p.t10), trans10.transform(nt)(p.t11), trans11.transform(nt)(p.t12), trans12.transform(nt)(p.t13), trans13.transform(nt)(p.t14), trans14.transform(nt)(p.t15), trans15.transform(nt)(p.t16), trans16.transform(nt)(p.t17), trans17.transform(nt)(p.t18), trans18.transform(nt)(p.t19)))
      }

    implicit def Prod19Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply], seq8: Sequence[A9#Prod, Apply], seq9: Sequence[A10#Prod, Apply], seq10: Sequence[A11#Prod, Apply], seq11: Sequence[A12#Prod, Apply], seq12: Sequence[A13#Prod, Apply], seq13: Sequence[A14#Prod, Apply], seq14: Sequence[A15#Prod, Apply], seq15: Sequence[A16#Prod, Apply], seq16: Sequence[A17#Prod, Apply], seq17: Sequence[A18#Prod, Apply], seq18: Sequence[A19#Prod, Apply]): Sequence[Prod19[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], Apply] =
      new Sequence[Prod19[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], Apply] {
        def sequence[F[_]](p: Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19])(implicit F: Apply[F]): F[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
          F.ap(seq18.sequence(p.t19))(F.ap(seq17.sequence(p.t18))(F.ap(seq16.sequence(p.t17))(F.ap(seq15.sequence(p.t16))(F.ap(seq14.sequence(p.t15))(F.ap(seq13.sequence(p.t14))(F.ap(seq12.sequence(p.t13))(F.ap(seq11.sequence(p.t12))(F.ap(seq10.sequence(p.t11))(F.ap(seq9.sequence(p.t10))(F.ap(seq8.sequence(p.t9))(F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => (i8: A9#Prod[Id]) => (i9: A10#Prod[Id]) => (i10: A11#Prod[Id]) => (i11: A12#Prod[Id]) => (i12: A13#Prod[Id]) => (i13: A14#Prod[Id]) => (i14: A15#Prod[Id]) => (i15: A16#Prod[Id]) => (i16: A17#Prod[Id]) => (i17: A18#Prod[Id]) => (i18: A19#Prod[Id]) => Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]((i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18)))))))))))))))))))))
      }
    // format: on

    implicit def Prod19Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[
          (
              A1#Prod[F],
              A2#Prod[F],
              A3#Prod[F],
              A4#Prod[F],
              A5#Prod[F],
              A6#Prod[F],
              A7#Prod[F],
              A8#Prod[F],
              A9#Prod[F],
              A10#Prod[F],
              A11#Prod[F],
              A12#Prod[F],
              A13#Prod[F],
              A14#Prod[F],
              A15#Prod[F],
              A16#Prod[F],
              A17#Prod[F],
              A18#Prod[F],
              A19#Prod[F]
          )
        ]
    ): Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      MF.xmap(
        M,
        Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
          _: (
              A1#Prod[F],
              A2#Prod[F],
              A3#Prod[F],
              A4#Prod[F],
              A5#Prod[F],
              A6#Prod[F],
              A7#Prod[F],
              A8#Prod[F],
              A9#Prod[F],
              A10#Prod[F],
              A11#Prod[F],
              A12#Prod[F],
              A13#Prod[F],
              A14#Prod[F],
              A15#Prod[F],
              A16#Prod[F],
              A17#Prod[F],
              A18#Prod[F],
              A19#Prod[F]
          )
        ),
        (_: Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A1#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A2#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A3#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A4#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A5#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A6#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A7#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A8#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t8)

    implicit def lifta8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A9#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, x, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A9#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t9)

    implicit def lifta9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A10#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, x, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A10#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t10)

    implicit def lifta10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A11#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, x, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A11#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t11)

    implicit def lifta11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A12#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, x, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A12#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t12)

    implicit def lifta12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A13#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, x, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A13#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t13)

    implicit def lifta13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A14#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, x, t.t15, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A14#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t14)

    implicit def lifta14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A15#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, x, t.t16, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A15#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t15)

    implicit def lifta15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A16#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, x, t.t17, t.t18, t.t19)
          )
      )
    }

    implicit def lifta15FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A16#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t16)

    implicit def lifta16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A17#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, x, t.t18, t.t19)
          )
      )
    }

    implicit def lifta16FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A17#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t17)

    implicit def lifta17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A18#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, x, t.t19)
          )
      )
    }

    implicit def lifta17FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A18#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t18)

    implicit def lifta18F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
        implicit M: Monoid[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A19#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, x)
          )
      )
    }

    implicit def lifta18FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[A19#Prod[F], Prod19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(_.t19)
  }

  object Prod19 extends Prod19LP {
    implicit def lifta0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A1#Prod[Id]] =
      lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta0IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A1#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A2#Prod[Id]] =
      lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta1IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A2#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A3#Prod[Id]] =
      lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta2IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A3#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A4#Prod[Id]] =
      lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta3IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A4#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A5#Prod[Id]] =
      lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta4IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A5#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A6#Prod[Id]] =
      lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta5IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A6#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A7#Prod[Id]] =
      lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta6IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A7#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A8#Prod[Id]] =
      lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta7IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A8#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A9#Prod[Id]] =
      lifta8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta8IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A9#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A10#Prod[Id]] =
      lifta9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta9IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A10#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A11#Prod[Id]] =
      lifta10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta10IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A11#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A12#Prod[Id]] =
      lifta11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta11IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A12#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A13#Prod[Id]] =
      lifta12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta12IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A13#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A14#Prod[Id]] =
      lifta13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta13IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A14#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A15#Prod[Id]] =
      lifta14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta14IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A15#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A16#Prod[Id]] =
      lifta15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta15IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A16#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta15FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A17#Prod[Id]] =
      lifta16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta16IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A17#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta16FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A18#Prod[Id]] =
      lifta17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta17IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A18#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta17FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta18Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit M: Monoid[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]]
    ): Inj[Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A19#Prod[Id]] =
      lifta18F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def lifta18IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[A19#Prod[Id], Prod19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      lifta18FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]
  }

  @newtype case class Cop19[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ (A8#Cop[F] \/ (A9#Cop[F] \/ (A10#Cop[F] \/ (A11#Cop[F] \/ (A12#Cop[F] \/ (A13#Cop[F] \/ (A14#Cop[
        F
      ] \/ (A15#Cop[F] \/ (A16#Cop[F] \/ (A17#Cop[F] \/ (A18#Cop[F] \/ A19#Cop[F]))))))))))))))))))
  )

  trait Cop19LP {
    implicit def Cop19Transform[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop],
        trans8: Transform[A9#Cop],
        trans9: Transform[A10#Cop],
        trans10: Transform[A11#Cop],
        trans11: Transform[A12#Cop],
        trans12: Transform[A13#Cop],
        trans13: Transform[A14#Cop],
        trans14: Transform[A15#Cop],
        trans15: Transform[A16#Cop],
        trans16: Transform[A17#Cop],
        trans17: Transform[A18#Cop],
        trans18: Transform[A19#Cop]
    ): Transform[Cop19[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      new Transform[Cop19[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] => Cop19[
          G,
          A1,
          A2,
          A3,
          A4,
          A5,
          A6,
          A7,
          A8,
          A9,
          A10,
          A11,
          A12,
          A13,
          A14,
          A15,
          A16,
          A17,
          A18,
          A19
        ] =
          c =>
            Cop19[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(
                    _.transform(nt),
                    _.bimap(
                      _.transform(nt),
                      _.bimap(
                        _.transform(nt),
                        _.bimap(
                          _.transform(nt),
                          _.bimap(
                            _.transform(nt),
                            _.bimap(
                              _.transform(nt),
                              _.bimap(
                                _.transform(nt),
                                _.bimap(
                                  _.transform(nt),
                                  _.bimap(
                                    _.transform(nt),
                                    _.bimap(
                                      _.transform(nt),
                                      _.bimap(
                                        _.transform(nt),
                                        _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
      }

    implicit def Cop19Sequence[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor],
        seq8: Sequence[A9#Cop, Functor],
        seq9: Sequence[A10#Cop, Functor],
        seq10: Sequence[A11#Cop, Functor],
        seq11: Sequence[A12#Cop, Functor],
        seq12: Sequence[A13#Cop, Functor],
        seq13: Sequence[A14#Cop, Functor],
        seq14: Sequence[A15#Cop, Functor],
        seq15: Sequence[A16#Cop, Functor],
        seq16: Sequence[A17#Cop, Functor],
        seq17: Sequence[A18#Cop, Functor],
        seq18: Sequence[A19#Cop, Functor]
    ): Sequence[Cop19[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], Functor] =
      new Sequence[Cop19[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], Functor] {
        def sequence[F[_]](
            c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]
        )(implicit F: Functor[F]): F[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
          c.run match {
            case -\/(x)                     => F.map(x.sequence)(y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](-\/(y)))
            case \/-(-\/(x))                => F.map(x.sequence)(y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))           => F.map(x.sequence)(y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))      => F.map(x.sequence)(y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x))))) => F.map(x.sequence)(y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) =>
              F.map(x.sequence)(y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) =>
              F.map(x.sequence)(y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) =>
              F.map(x.sequence)(y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) =>
              F.map(x.sequence)(y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) =>
              F.map(x.sequence)(y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) =>
              F.map(x.sequence)(y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) =>
              F.map(x.sequence)(y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) =>
              F.map(x.sequence)(
                y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) =>
              F.map(x.sequence)(
                y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))) =>
              F.map(x.sequence)(
                y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))) =>
              F.map(x.sequence)(
                y => Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(y))))))))))))))))))
                  )
              )
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A1#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A1#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A1#Cop[F]] = c.run match {
          case -\/(x) => Some(x)
          case _      => None
        }
        def reverseGet(x: A1#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](-\/(x))
      }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A2#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A2#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A2#Cop[F]] = c.run match {
          case \/-(-\/(x)) => Some(x)
          case _           => None
        }
        def reverseGet(x: A2#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(-\/(x)))
      }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A3#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A3#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A3#Cop[F]] = c.run match {
          case \/-(\/-(-\/(x))) => Some(x)
          case _                => None
        }
        def reverseGet(x: A3#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(-\/(x))))
      }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A4#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A4#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A4#Cop[F]] = c.run match {
          case \/-(\/-(\/-(-\/(x)))) => Some(x)
          case _                     => None
        }
        def reverseGet(x: A4#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(-\/(x)))))
      }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A5#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A5#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A5#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
          case _                          => None
        }
        def reverseGet(x: A5#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(-\/(x))))))
      }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A6#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A6#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A6#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
          case _                               => None
        }
        def reverseGet(x: A6#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
      }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A6#Cop[F]] = Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A7#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A7#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A7#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
          case _                                    => None
        }
        def reverseGet(x: A7#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
      }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A7#Cop[F]] = Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A8#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A8#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A8#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => Some(x)
          case _                                         => None
        }
        def reverseGet(x: A8#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))
      }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A8#Cop[F]] = Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma7F.getOption(_))

    implicit def prisma8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A9#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A9#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A9#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => Some(x)
          case _                                              => None
        }
        def reverseGet(x: A9#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))
      }

    implicit def inja8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A9#Cop[F]] = Inj.instance(prisma8F.reverseGet(_))

    implicit def inja8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A9#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma8F.getOption(_))

    implicit def prisma9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A10#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A10#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A10#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) => Some(x)
          case _                                                   => None
        }
        def reverseGet(x: A10#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))
      }

    implicit def inja9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A10#Cop[F]] = Inj.instance(prisma9F.reverseGet(_))

    implicit def inja9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A10#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma9F.getOption(_))

    implicit def prisma10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A11#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A11#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A11#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) => Some(x)
          case _                                                        => None
        }
        def reverseGet(x: A11#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))
      }

    implicit def inja10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A11#Cop[F]] = Inj.instance(prisma10F.reverseGet(_))

    implicit def inja10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A11#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma10F.getOption(_))

    implicit def prisma11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A12#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A12#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A12#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) => Some(x)
          case _                                                             => None
        }
        def reverseGet(x: A12#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))
      }

    implicit def inja11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A12#Cop[F]] = Inj.instance(prisma11F.reverseGet(_))

    implicit def inja11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A12#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma11F.getOption(_))

    implicit def prisma12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A13#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A13#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A13#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) => Some(x)
          case _                                                                  => None
        }
        def reverseGet(x: A13#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))
      }

    implicit def inja12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A13#Cop[F]] = Inj.instance(prisma12F.reverseGet(_))

    implicit def inja12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A13#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma12F.getOption(_))

    implicit def prisma13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A14#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A14#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A14#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) => Some(x)
          case _                                                                       => None
        }
        def reverseGet(x: A14#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))
      }

    implicit def inja13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A14#Cop[F]] = Inj.instance(prisma13F.reverseGet(_))

    implicit def inja13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A14#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma13F.getOption(_))

    implicit def prisma14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A15#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A15#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A15#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))) => Some(x)
          case _                                                                            => None
        }
        def reverseGet(x: A15#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))
      }

    implicit def inja14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A15#Cop[F]] = Inj.instance(prisma14F.reverseGet(_))

    implicit def inja14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A15#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma14F.getOption(_))

    implicit def prisma15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A16#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A16#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A16#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))) => Some(x)
          case _                                                                                 => None
        }
        def reverseGet(x: A16#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))
      }

    implicit def inja15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A16#Cop[F]] = Inj.instance(prisma15F.reverseGet(_))

    implicit def inja15FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A16#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma15F.getOption(_))

    implicit def prisma16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A17#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A17#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A17#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))) => Some(x)
          case _                                                                                      => None
        }
        def reverseGet(x: A17#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))
      }

    implicit def inja16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A17#Cop[F]] = Inj.instance(prisma16F.reverseGet(_))

    implicit def inja16FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A17#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma16F.getOption(_))

    implicit def prisma17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A18#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A18#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A18#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))) => Some(x)
          case _                                                                                           => None
        }
        def reverseGet(x: A18#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))))
      }

    implicit def inja17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A18#Cop[F]] = Inj.instance(prisma17F.reverseGet(_))

    implicit def inja17FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A18#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma17F.getOption(_))

    implicit def prisma18F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A19#Cop[F]] =
      new Prism[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A19#Cop[F]] {
        def getOption(c: Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]): Option[A19#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))))))))) => Some(x)
          case _                                                                                           => None
        }
        def reverseGet(x: A19#Cop[F]): Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19] =
          Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))))))))))
      }

    implicit def inja18F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A19#Cop[F]] = Inj.instance(prisma18F.reverseGet(_))

    implicit def inja18FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A19#Cop[F]], Cop19[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] = Inj.instance(prisma18F.getOption(_))
  }

  object Cop19 extends Cop19LP {
    implicit def prisma0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A1#Cop[Id]] =
      prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A1#Cop[Id]] =
      inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A2#Cop[Id]] =
      prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A2#Cop[Id]] =
      inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A3#Cop[Id]] =
      prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A3#Cop[Id]] =
      inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A4#Cop[Id]] =
      prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A4#Cop[Id]] =
      inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A5#Cop[Id]] =
      prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A5#Cop[Id]] =
      inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A6#Cop[Id]] =
      prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A6#Cop[Id]] =
      inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A7#Cop[Id]] =
      prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A7#Cop[Id]] =
      inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A8#Cop[Id]] =
      prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A8#Cop[Id]] =
      inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A9#Cop[Id]] =
      prisma8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A9#Cop[Id]] =
      inja8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja8IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A9#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A10#Cop[Id]] =
      prisma9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A10#Cop[Id]] =
      inja9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja9IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A10#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A11#Cop[Id]] =
      prisma10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A11#Cop[Id]] =
      inja10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja10IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A11#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A12#Cop[Id]] =
      prisma11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A12#Cop[Id]] =
      inja11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja11IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A12#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A13#Cop[Id]] =
      prisma12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A13#Cop[Id]] =
      inja12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja12IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A13#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A14#Cop[Id]] =
      prisma13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A14#Cop[Id]] =
      inja13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja13IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A14#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A15#Cop[Id]] =
      prisma14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A15#Cop[Id]] =
      inja14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja14IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A15#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A16#Cop[Id]] =
      prisma15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A16#Cop[Id]] =
      inja15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja15IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A16#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja15FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A17#Cop[Id]] =
      prisma16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A17#Cop[Id]] =
      inja16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja16IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A17#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja16FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A18#Cop[Id]] =
      prisma17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A18#Cop[Id]] =
      inja17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja17IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A18#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja17FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def prisma18Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Prism[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A19#Cop[Id]] =
      prisma18F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja18Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor
    ]: Inj[Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19], A19#Cop[Id]] =
      inja18F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]

    implicit def inja18IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor]
        : Inj[Option[A19#Cop[Id]], Cop19[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]] =
      inja18FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19]
  }

  @newtype case class Prod20[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
      run: (
          A1#Prod[F],
          A2#Prod[F],
          A3#Prod[F],
          A4#Prod[F],
          A5#Prod[F],
          A6#Prod[F],
          A7#Prod[F],
          A8#Prod[F],
          A9#Prod[F],
          A10#Prod[F],
          A11#Prod[F],
          A12#Prod[F],
          A13#Prod[F],
          A14#Prod[F],
          A15#Prod[F],
          A16#Prod[F],
          A17#Prod[F],
          A18#Prod[F],
          A19#Prod[F],
          A20#Prod[F]
      )
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8
    def t9: A9#Prod[F] = run._9
    def t10: A10#Prod[F] = run._10
    def t11: A11#Prod[F] = run._11
    def t12: A12#Prod[F] = run._12
    def t13: A13#Prod[F] = run._13
    def t14: A14#Prod[F] = run._14
    def t15: A15#Prod[F] = run._15
    def t16: A16#Prod[F] = run._16
    def t17: A17#Prod[F] = run._17
    def t18: A18#Prod[F] = run._18
    def t19: A19#Prod[F] = run._19
    def t20: A20#Prod[F] = run._20

  }

  trait Prod20LP {
    // format: off
    implicit def Prod20Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod], trans8: Transform[A9#Prod], trans9: Transform[A10#Prod], trans10: Transform[A11#Prod], trans11: Transform[A12#Prod], trans12: Transform[A13#Prod], trans13: Transform[A14#Prod], trans14: Transform[A15#Prod], trans15: Transform[A16#Prod], trans16: Transform[A17#Prod], trans17: Transform[A18#Prod], trans18: Transform[A19#Prod], trans19: Transform[A20#Prod]): Transform[Prod20[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      new Transform[Prod20[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] => Prod20[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          p => Prod20[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8), trans8.transform(nt)(p.t9), trans9.transform(nt)(p.t10), trans10.transform(nt)(p.t11), trans11.transform(nt)(p.t12), trans12.transform(nt)(p.t13), trans13.transform(nt)(p.t14), trans14.transform(nt)(p.t15), trans15.transform(nt)(p.t16), trans16.transform(nt)(p.t17), trans17.transform(nt)(p.t18), trans18.transform(nt)(p.t19), trans19.transform(nt)(p.t20)))
      }

    implicit def Prod20Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply], seq8: Sequence[A9#Prod, Apply], seq9: Sequence[A10#Prod, Apply], seq10: Sequence[A11#Prod, Apply], seq11: Sequence[A12#Prod, Apply], seq12: Sequence[A13#Prod, Apply], seq13: Sequence[A14#Prod, Apply], seq14: Sequence[A15#Prod, Apply], seq15: Sequence[A16#Prod, Apply], seq16: Sequence[A17#Prod, Apply], seq17: Sequence[A18#Prod, Apply], seq18: Sequence[A19#Prod, Apply], seq19: Sequence[A20#Prod, Apply]): Sequence[Prod20[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], Apply] =
      new Sequence[Prod20[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], Apply] {
        def sequence[F[_]](p: Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20])(implicit F: Apply[F]): F[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
          F.ap(seq19.sequence(p.t20))(F.ap(seq18.sequence(p.t19))(F.ap(seq17.sequence(p.t18))(F.ap(seq16.sequence(p.t17))(F.ap(seq15.sequence(p.t16))(F.ap(seq14.sequence(p.t15))(F.ap(seq13.sequence(p.t14))(F.ap(seq12.sequence(p.t13))(F.ap(seq11.sequence(p.t12))(F.ap(seq10.sequence(p.t11))(F.ap(seq9.sequence(p.t10))(F.ap(seq8.sequence(p.t9))(F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => (i8: A9#Prod[Id]) => (i9: A10#Prod[Id]) => (i10: A11#Prod[Id]) => (i11: A12#Prod[Id]) => (i12: A13#Prod[Id]) => (i13: A14#Prod[Id]) => (i14: A15#Prod[Id]) => (i15: A16#Prod[Id]) => (i16: A17#Prod[Id]) => (i17: A18#Prod[Id]) => (i18: A19#Prod[Id]) => (i19: A20#Prod[Id]) => Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]((i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19))))))))))))))))))))))
      }
    // format: on

    implicit def Prod20Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[
          (
              A1#Prod[F],
              A2#Prod[F],
              A3#Prod[F],
              A4#Prod[F],
              A5#Prod[F],
              A6#Prod[F],
              A7#Prod[F],
              A8#Prod[F],
              A9#Prod[F],
              A10#Prod[F],
              A11#Prod[F],
              A12#Prod[F],
              A13#Prod[F],
              A14#Prod[F],
              A15#Prod[F],
              A16#Prod[F],
              A17#Prod[F],
              A18#Prod[F],
              A19#Prod[F],
              A20#Prod[F]
          )
        ]
    ): Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      MF.xmap(
        M,
        Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
          _: (
              A1#Prod[F],
              A2#Prod[F],
              A3#Prod[F],
              A4#Prod[F],
              A5#Prod[F],
              A6#Prod[F],
              A7#Prod[F],
              A8#Prod[F],
              A9#Prod[F],
              A10#Prod[F],
              A11#Prod[F],
              A12#Prod[F],
              A13#Prod[F],
              A14#Prod[F],
              A15#Prod[F],
              A16#Prod[F],
              A17#Prod[F],
              A18#Prod[F],
              A19#Prod[F],
              A20#Prod[F]
          )
        ),
        (_: Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A1#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A2#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A3#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A4#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A5#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A6#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A7#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A8#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t8)

    implicit def lifta8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A9#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, x, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A9#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t9)

    implicit def lifta9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A10#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, x, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A10#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t10)

    implicit def lifta10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A11#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, x, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A11#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t11)

    implicit def lifta11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A12#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, x, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A12#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t12)

    implicit def lifta12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A13#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, x, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A13#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t13)

    implicit def lifta13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A14#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, x, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A14#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t14)

    implicit def lifta14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A15#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, x, t.t16, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A15#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t15)

    implicit def lifta15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A16#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, x, t.t17, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta15FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A16#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t16)

    implicit def lifta16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A17#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, x, t.t18, t.t19, t.t20)
          )
      )
    }

    implicit def lifta16FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A17#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t17)

    implicit def lifta17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A18#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, x, t.t19, t.t20)
          )
      )
    }

    implicit def lifta17FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A18#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t18)

    implicit def lifta18F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A19#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, x, t.t20)
          )
      )
    }

    implicit def lifta18FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A19#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t19)

    implicit def lifta19F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
        implicit M: Monoid[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A20#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, x)
          )
      )
    }

    implicit def lifta19FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[A20#Prod[F], Prod20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(_.t20)
  }

  object Prod20 extends Prod20LP {
    implicit def lifta0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A1#Prod[Id]] =
      lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta0IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A1#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A2#Prod[Id]] =
      lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta1IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A2#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A3#Prod[Id]] =
      lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta2IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A3#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A4#Prod[Id]] =
      lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta3IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A4#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A5#Prod[Id]] =
      lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta4IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A5#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A6#Prod[Id]] =
      lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta5IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A6#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A7#Prod[Id]] =
      lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta6IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A7#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A8#Prod[Id]] =
      lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta7IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A8#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A9#Prod[Id]] =
      lifta8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta8IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A9#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A10#Prod[Id]] =
      lifta9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta9IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A10#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A11#Prod[Id]] =
      lifta10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta10IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A11#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A12#Prod[Id]] =
      lifta11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta11IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A12#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A13#Prod[Id]] =
      lifta12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta12IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A13#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A14#Prod[Id]] =
      lifta13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta13IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A14#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A15#Prod[Id]] =
      lifta14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta14IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A15#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A16#Prod[Id]] =
      lifta15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta15IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A16#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta15FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A17#Prod[Id]] =
      lifta16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta16IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A17#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta16FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A18#Prod[Id]] =
      lifta17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta17IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A18#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta17FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta18Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A19#Prod[Id]] =
      lifta18F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta18IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A19#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta18FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta19Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit M: Monoid[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]]
    ): Inj[Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A20#Prod[Id]] =
      lifta19F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def lifta19IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[A20#Prod[Id], Prod20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      lifta19FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]
  }

  @newtype case class Cop20[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ (A8#Cop[F] \/ (A9#Cop[F] \/ (A10#Cop[F] \/ (A11#Cop[F] \/ (A12#Cop[F] \/ (A13#Cop[F] \/ (A14#Cop[
        F
      ] \/ (A15#Cop[F] \/ (A16#Cop[F] \/ (A17#Cop[F] \/ (A18#Cop[F] \/ (A19#Cop[F] \/ A20#Cop[F])))))))))))))))))))
  )

  trait Cop20LP {
    implicit def Cop20Transform[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop],
        trans8: Transform[A9#Cop],
        trans9: Transform[A10#Cop],
        trans10: Transform[A11#Cop],
        trans11: Transform[A12#Cop],
        trans12: Transform[A13#Cop],
        trans13: Transform[A14#Cop],
        trans14: Transform[A15#Cop],
        trans15: Transform[A16#Cop],
        trans16: Transform[A17#Cop],
        trans17: Transform[A18#Cop],
        trans18: Transform[A19#Cop],
        trans19: Transform[A20#Cop]
    ): Transform[Cop20[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      new Transform[Cop20[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] => Cop20[
          G,
          A1,
          A2,
          A3,
          A4,
          A5,
          A6,
          A7,
          A8,
          A9,
          A10,
          A11,
          A12,
          A13,
          A14,
          A15,
          A16,
          A17,
          A18,
          A19,
          A20
        ] =
          c =>
            Cop20[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(
                    _.transform(nt),
                    _.bimap(
                      _.transform(nt),
                      _.bimap(
                        _.transform(nt),
                        _.bimap(
                          _.transform(nt),
                          _.bimap(
                            _.transform(nt),
                            _.bimap(
                              _.transform(nt),
                              _.bimap(
                                _.transform(nt),
                                _.bimap(
                                  _.transform(nt),
                                  _.bimap(
                                    _.transform(nt),
                                    _.bimap(
                                      _.transform(nt),
                                      _.bimap(
                                        _.transform(nt),
                                        _.bimap(
                                          _.transform(nt),
                                          _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
      }

    implicit def Cop20Sequence[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor],
        seq8: Sequence[A9#Cop, Functor],
        seq9: Sequence[A10#Cop, Functor],
        seq10: Sequence[A11#Cop, Functor],
        seq11: Sequence[A12#Cop, Functor],
        seq12: Sequence[A13#Cop, Functor],
        seq13: Sequence[A14#Cop, Functor],
        seq14: Sequence[A15#Cop, Functor],
        seq15: Sequence[A16#Cop, Functor],
        seq16: Sequence[A17#Cop, Functor],
        seq17: Sequence[A18#Cop, Functor],
        seq18: Sequence[A19#Cop, Functor],
        seq19: Sequence[A20#Cop, Functor]
    ): Sequence[Cop20[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], Functor] =
      new Sequence[Cop20[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], Functor] {
        def sequence[F[_]](
            c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]
        )(implicit F: Functor[F]): F[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
          c.run match {
            case -\/(x)                     => F.map(x.sequence)(y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](-\/(y)))
            case \/-(-\/(x))                => F.map(x.sequence)(y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))           => F.map(x.sequence)(y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x))))      => F.map(x.sequence)(y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x))))) => F.map(x.sequence)(y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) =>
              F.map(x.sequence)(y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) =>
              F.map(x.sequence)(y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) =>
              F.map(x.sequence)(y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) =>
              F.map(x.sequence)(y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) =>
              F.map(x.sequence)(y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) =>
              F.map(x.sequence)(y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) =>
              F.map(x.sequence)(
                y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) =>
              F.map(x.sequence)(
                y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) =>
              F.map(x.sequence)(
                y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))) =>
              F.map(x.sequence)(
                y => Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(y)))))))))))))))))))
                  )
              )
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A1#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A1#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A1#Cop[F]] = c.run match {
          case -\/(x) => Some(x)
          case _      => None
        }
        def reverseGet(x: A1#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](-\/(x))
      }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A2#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A2#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A2#Cop[F]] = c.run match {
          case \/-(-\/(x)) => Some(x)
          case _           => None
        }
        def reverseGet(x: A2#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(-\/(x)))
      }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A3#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A3#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A3#Cop[F]] = c.run match {
          case \/-(\/-(-\/(x))) => Some(x)
          case _                => None
        }
        def reverseGet(x: A3#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(-\/(x))))
      }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A4#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A4#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A4#Cop[F]] = c.run match {
          case \/-(\/-(\/-(-\/(x)))) => Some(x)
          case _                     => None
        }
        def reverseGet(x: A4#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(-\/(x)))))
      }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A5#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A5#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A5#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
          case _                          => None
        }
        def reverseGet(x: A5#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(-\/(x))))))
      }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A6#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A6#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A6#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
          case _                               => None
        }
        def reverseGet(x: A6#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
      }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A6#Cop[F]] = Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A7#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A7#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A7#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
          case _                                    => None
        }
        def reverseGet(x: A7#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
      }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A7#Cop[F]] = Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A8#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A8#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A8#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => Some(x)
          case _                                         => None
        }
        def reverseGet(x: A8#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))
      }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A8#Cop[F]] = Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma7F.getOption(_))

    implicit def prisma8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A9#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A9#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A9#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => Some(x)
          case _                                              => None
        }
        def reverseGet(x: A9#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))
      }

    implicit def inja8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A9#Cop[F]] = Inj.instance(prisma8F.reverseGet(_))

    implicit def inja8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A9#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma8F.getOption(_))

    implicit def prisma9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A10#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A10#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A10#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) => Some(x)
          case _                                                   => None
        }
        def reverseGet(x: A10#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))
      }

    implicit def inja9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A10#Cop[F]] = Inj.instance(prisma9F.reverseGet(_))

    implicit def inja9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A10#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma9F.getOption(_))

    implicit def prisma10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A11#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A11#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A11#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) => Some(x)
          case _                                                        => None
        }
        def reverseGet(x: A11#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))
      }

    implicit def inja10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A11#Cop[F]] = Inj.instance(prisma10F.reverseGet(_))

    implicit def inja10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A11#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma10F.getOption(_))

    implicit def prisma11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A12#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A12#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A12#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) => Some(x)
          case _                                                             => None
        }
        def reverseGet(x: A12#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))
      }

    implicit def inja11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A12#Cop[F]] = Inj.instance(prisma11F.reverseGet(_))

    implicit def inja11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A12#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma11F.getOption(_))

    implicit def prisma12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A13#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A13#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A13#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) => Some(x)
          case _                                                                  => None
        }
        def reverseGet(x: A13#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))
      }

    implicit def inja12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A13#Cop[F]] = Inj.instance(prisma12F.reverseGet(_))

    implicit def inja12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A13#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma12F.getOption(_))

    implicit def prisma13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A14#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A14#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A14#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) => Some(x)
          case _                                                                       => None
        }
        def reverseGet(x: A14#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))
      }

    implicit def inja13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A14#Cop[F]] = Inj.instance(prisma13F.reverseGet(_))

    implicit def inja13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A14#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma13F.getOption(_))

    implicit def prisma14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A15#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A15#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A15#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))) => Some(x)
          case _                                                                            => None
        }
        def reverseGet(x: A15#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))
      }

    implicit def inja14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A15#Cop[F]] = Inj.instance(prisma14F.reverseGet(_))

    implicit def inja14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A15#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma14F.getOption(_))

    implicit def prisma15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A16#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A16#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A16#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))) => Some(x)
          case _                                                                                 => None
        }
        def reverseGet(x: A16#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))
      }

    implicit def inja15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A16#Cop[F]] = Inj.instance(prisma15F.reverseGet(_))

    implicit def inja15FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A16#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma15F.getOption(_))

    implicit def prisma16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A17#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A17#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A17#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))) => Some(x)
          case _                                                                                      => None
        }
        def reverseGet(x: A17#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))
      }

    implicit def inja16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A17#Cop[F]] = Inj.instance(prisma16F.reverseGet(_))

    implicit def inja16FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A17#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma16F.getOption(_))

    implicit def prisma17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A18#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A18#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A18#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))) => Some(x)
          case _                                                                                           => None
        }
        def reverseGet(x: A18#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))
          )
      }

    implicit def inja17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A18#Cop[F]] = Inj.instance(prisma17F.reverseGet(_))

    implicit def inja17FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A18#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma17F.getOption(_))

    implicit def prisma18F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A19#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A19#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A19#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))) => Some(x)
          case _                                                                                                => None
        }
        def reverseGet(x: A19#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))))
          )
      }

    implicit def inja18F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A19#Cop[F]] = Inj.instance(prisma18F.reverseGet(_))

    implicit def inja18FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A19#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma18F.getOption(_))

    implicit def prisma19F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A20#Cop[F]] =
      new Prism[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A20#Cop[F]] {
        def getOption(c: Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]): Option[A20#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))))))))) => Some(x)
          case _                                                                                                => None
        }
        def reverseGet(x: A20#Cop[F]): Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20] =
          Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))))))))))
          )
      }

    implicit def inja19F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A20#Cop[F]] = Inj.instance(prisma19F.reverseGet(_))

    implicit def inja19FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A20#Cop[F]], Cop20[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] = Inj.instance(prisma19F.getOption(_))
  }

  object Cop20 extends Cop20LP {
    implicit def prisma0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A1#Cop[Id]] =
      prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A1#Cop[Id]] =
      inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A2#Cop[Id]] =
      prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A2#Cop[Id]] =
      inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A3#Cop[Id]] =
      prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A3#Cop[Id]] =
      inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A4#Cop[Id]] =
      prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A4#Cop[Id]] =
      inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A5#Cop[Id]] =
      prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A5#Cop[Id]] =
      inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A6#Cop[Id]] =
      prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A6#Cop[Id]] =
      inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A7#Cop[Id]] =
      prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A7#Cop[Id]] =
      inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A8#Cop[Id]] =
      prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A8#Cop[Id]] =
      inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A9#Cop[Id]] =
      prisma8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A9#Cop[Id]] =
      inja8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja8IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A9#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A10#Cop[Id]] =
      prisma9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A10#Cop[Id]] =
      inja9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja9IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A10#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A11#Cop[Id]] =
      prisma10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A11#Cop[Id]] =
      inja10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja10IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A11#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A12#Cop[Id]] =
      prisma11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A12#Cop[Id]] =
      inja11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja11IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A12#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A13#Cop[Id]] =
      prisma12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A13#Cop[Id]] =
      inja12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja12IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A13#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A14#Cop[Id]] =
      prisma13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A14#Cop[Id]] =
      inja13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja13IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A14#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A15#Cop[Id]] =
      prisma14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A15#Cop[Id]] =
      inja14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja14IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A15#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A16#Cop[Id]] =
      prisma15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A16#Cop[Id]] =
      inja15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja15IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A16#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja15FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A17#Cop[Id]] =
      prisma16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A17#Cop[Id]] =
      inja16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja16IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A17#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja16FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A18#Cop[Id]] =
      prisma17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A18#Cop[Id]] =
      inja17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja17IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A18#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja17FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma18Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A19#Cop[Id]] =
      prisma18F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja18Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A19#Cop[Id]] =
      inja18F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja18IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A19#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja18FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def prisma19Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Prism[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A20#Cop[Id]] =
      prisma19F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja19Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor
    ]: Inj[Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20], A20#Cop[Id]] =
      inja19F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]

    implicit def inja19IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor]
        : Inj[Option[A20#Cop[Id]], Cop20[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]] =
      inja19FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20]
  }

  @newtype case class Prod21[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
      run: (
          A1#Prod[F],
          A2#Prod[F],
          A3#Prod[F],
          A4#Prod[F],
          A5#Prod[F],
          A6#Prod[F],
          A7#Prod[F],
          A8#Prod[F],
          A9#Prod[F],
          A10#Prod[F],
          A11#Prod[F],
          A12#Prod[F],
          A13#Prod[F],
          A14#Prod[F],
          A15#Prod[F],
          A16#Prod[F],
          A17#Prod[F],
          A18#Prod[F],
          A19#Prod[F],
          A20#Prod[F],
          A21#Prod[F]
      )
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8
    def t9: A9#Prod[F] = run._9
    def t10: A10#Prod[F] = run._10
    def t11: A11#Prod[F] = run._11
    def t12: A12#Prod[F] = run._12
    def t13: A13#Prod[F] = run._13
    def t14: A14#Prod[F] = run._14
    def t15: A15#Prod[F] = run._15
    def t16: A16#Prod[F] = run._16
    def t17: A17#Prod[F] = run._17
    def t18: A18#Prod[F] = run._18
    def t19: A19#Prod[F] = run._19
    def t20: A20#Prod[F] = run._20
    def t21: A21#Prod[F] = run._21

  }

  trait Prod21LP {
    // format: off
    implicit def Prod21Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod], trans8: Transform[A9#Prod], trans9: Transform[A10#Prod], trans10: Transform[A11#Prod], trans11: Transform[A12#Prod], trans12: Transform[A13#Prod], trans13: Transform[A14#Prod], trans14: Transform[A15#Prod], trans15: Transform[A16#Prod], trans16: Transform[A17#Prod], trans17: Transform[A18#Prod], trans18: Transform[A19#Prod], trans19: Transform[A20#Prod], trans20: Transform[A21#Prod]): Transform[Prod21[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      new Transform[Prod21[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] => Prod21[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          p => Prod21[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8), trans8.transform(nt)(p.t9), trans9.transform(nt)(p.t10), trans10.transform(nt)(p.t11), trans11.transform(nt)(p.t12), trans12.transform(nt)(p.t13), trans13.transform(nt)(p.t14), trans14.transform(nt)(p.t15), trans15.transform(nt)(p.t16), trans16.transform(nt)(p.t17), trans17.transform(nt)(p.t18), trans18.transform(nt)(p.t19), trans19.transform(nt)(p.t20), trans20.transform(nt)(p.t21)))
      }

    implicit def Prod21Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply], seq8: Sequence[A9#Prod, Apply], seq9: Sequence[A10#Prod, Apply], seq10: Sequence[A11#Prod, Apply], seq11: Sequence[A12#Prod, Apply], seq12: Sequence[A13#Prod, Apply], seq13: Sequence[A14#Prod, Apply], seq14: Sequence[A15#Prod, Apply], seq15: Sequence[A16#Prod, Apply], seq16: Sequence[A17#Prod, Apply], seq17: Sequence[A18#Prod, Apply], seq18: Sequence[A19#Prod, Apply], seq19: Sequence[A20#Prod, Apply], seq20: Sequence[A21#Prod, Apply]): Sequence[Prod21[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], Apply] =
      new Sequence[Prod21[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], Apply] {
        def sequence[F[_]](p: Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21])(implicit F: Apply[F]): F[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
          F.ap(seq20.sequence(p.t21))(F.ap(seq19.sequence(p.t20))(F.ap(seq18.sequence(p.t19))(F.ap(seq17.sequence(p.t18))(F.ap(seq16.sequence(p.t17))(F.ap(seq15.sequence(p.t16))(F.ap(seq14.sequence(p.t15))(F.ap(seq13.sequence(p.t14))(F.ap(seq12.sequence(p.t13))(F.ap(seq11.sequence(p.t12))(F.ap(seq10.sequence(p.t11))(F.ap(seq9.sequence(p.t10))(F.ap(seq8.sequence(p.t9))(F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => (i8: A9#Prod[Id]) => (i9: A10#Prod[Id]) => (i10: A11#Prod[Id]) => (i11: A12#Prod[Id]) => (i12: A13#Prod[Id]) => (i13: A14#Prod[Id]) => (i14: A15#Prod[Id]) => (i15: A16#Prod[Id]) => (i16: A17#Prod[Id]) => (i17: A18#Prod[Id]) => (i18: A19#Prod[Id]) => (i19: A20#Prod[Id]) => (i20: A21#Prod[Id]) => Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]((i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20)))))))))))))))))))))))
      }
    // format: on

    implicit def Prod21Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[
          (
              A1#Prod[F],
              A2#Prod[F],
              A3#Prod[F],
              A4#Prod[F],
              A5#Prod[F],
              A6#Prod[F],
              A7#Prod[F],
              A8#Prod[F],
              A9#Prod[F],
              A10#Prod[F],
              A11#Prod[F],
              A12#Prod[F],
              A13#Prod[F],
              A14#Prod[F],
              A15#Prod[F],
              A16#Prod[F],
              A17#Prod[F],
              A18#Prod[F],
              A19#Prod[F],
              A20#Prod[F],
              A21#Prod[F]
          )
        ]
    ): Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      MF.xmap(
        M,
        Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
          _: (
              A1#Prod[F],
              A2#Prod[F],
              A3#Prod[F],
              A4#Prod[F],
              A5#Prod[F],
              A6#Prod[F],
              A7#Prod[F],
              A8#Prod[F],
              A9#Prod[F],
              A10#Prod[F],
              A11#Prod[F],
              A12#Prod[F],
              A13#Prod[F],
              A14#Prod[F],
              A15#Prod[F],
              A16#Prod[F],
              A17#Prod[F],
              A18#Prod[F],
              A19#Prod[F],
              A20#Prod[F],
              A21#Prod[F]
          )
        ),
        (_: Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A1#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A2#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A3#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A4#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A5#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A6#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A7#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A8#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t8)

    implicit def lifta8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A9#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, x, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A9#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t9)

    implicit def lifta9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A10#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, x, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A10#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t10)

    implicit def lifta10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A11#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, x, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A11#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t11)

    implicit def lifta11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A12#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, x, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A12#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t12)

    implicit def lifta12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A13#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, x, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A13#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t13)

    implicit def lifta13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A14#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, x, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A14#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t14)

    implicit def lifta14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A15#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, x, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A15#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t15)

    implicit def lifta15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A16#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, x, t.t17, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta15FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A16#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t16)

    implicit def lifta16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A17#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, x, t.t18, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta16FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A17#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t17)

    implicit def lifta17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A18#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, x, t.t19, t.t20, t.t21)
          )
      )
    }

    implicit def lifta17FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A18#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t18)

    implicit def lifta18F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A19#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, x, t.t20, t.t21)
          )
      )
    }

    implicit def lifta18FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A19#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t19)

    implicit def lifta19F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A20#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, x, t.t21)
          )
      )
    }

    implicit def lifta19FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A20#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t20)

    implicit def lifta20F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
        implicit M: Monoid[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A21#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, x)
          )
      )
    }

    implicit def lifta20FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[A21#Prod[F], Prod21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(_.t21)
  }

  object Prod21 extends Prod21LP {
    implicit def lifta0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A1#Prod[Id]] =
      lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta0IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A1#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A2#Prod[Id]] =
      lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta1IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A2#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A3#Prod[Id]] =
      lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta2IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A3#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A4#Prod[Id]] =
      lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta3IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A4#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A5#Prod[Id]] =
      lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta4IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A5#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A6#Prod[Id]] =
      lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta5IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A6#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A7#Prod[Id]] =
      lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta6IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A7#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A8#Prod[Id]] =
      lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta7IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A8#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A9#Prod[Id]] =
      lifta8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta8IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A9#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A10#Prod[Id]] =
      lifta9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta9IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A10#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A11#Prod[Id]] =
      lifta10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta10IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A11#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A12#Prod[Id]] =
      lifta11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta11IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A12#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A13#Prod[Id]] =
      lifta12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta12IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A13#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A14#Prod[Id]] =
      lifta13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta13IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A14#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A15#Prod[Id]] =
      lifta14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta14IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A15#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A16#Prod[Id]] =
      lifta15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta15IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A16#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta15FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A17#Prod[Id]] =
      lifta16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta16IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A17#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta16FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A18#Prod[Id]] =
      lifta17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta17IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A18#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta17FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta18Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A19#Prod[Id]] =
      lifta18F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta18IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A19#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta18FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta19Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A20#Prod[Id]] =
      lifta19F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta19IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A20#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta19FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta20Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit M: Monoid[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]]
    ): Inj[Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A21#Prod[Id]] =
      lifta20F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def lifta20IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[A21#Prod[Id], Prod21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      lifta20FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]
  }

  @newtype case class Cop21[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ (A8#Cop[F] \/ (A9#Cop[F] \/ (A10#Cop[F] \/ (A11#Cop[F] \/ (A12#Cop[F] \/ (A13#Cop[F] \/ (A14#Cop[
        F
      ] \/ (A15#Cop[F] \/ (A16#Cop[F] \/ (A17#Cop[F] \/ (A18#Cop[F] \/ (A19#Cop[F] \/ (A20#Cop[F] \/ A21#Cop[F]))))))))))))))))))))
  )

  trait Cop21LP {
    implicit def Cop21Transform[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop],
        trans8: Transform[A9#Cop],
        trans9: Transform[A10#Cop],
        trans10: Transform[A11#Cop],
        trans11: Transform[A12#Cop],
        trans12: Transform[A13#Cop],
        trans13: Transform[A14#Cop],
        trans14: Transform[A15#Cop],
        trans15: Transform[A16#Cop],
        trans16: Transform[A17#Cop],
        trans17: Transform[A18#Cop],
        trans18: Transform[A19#Cop],
        trans19: Transform[A20#Cop],
        trans20: Transform[A21#Cop]
    ): Transform[Cop21[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      new Transform[Cop21[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] => Cop21[
          G,
          A1,
          A2,
          A3,
          A4,
          A5,
          A6,
          A7,
          A8,
          A9,
          A10,
          A11,
          A12,
          A13,
          A14,
          A15,
          A16,
          A17,
          A18,
          A19,
          A20,
          A21
        ] =
          c =>
            Cop21[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(
                    _.transform(nt),
                    _.bimap(
                      _.transform(nt),
                      _.bimap(
                        _.transform(nt),
                        _.bimap(
                          _.transform(nt),
                          _.bimap(
                            _.transform(nt),
                            _.bimap(
                              _.transform(nt),
                              _.bimap(
                                _.transform(nt),
                                _.bimap(
                                  _.transform(nt),
                                  _.bimap(
                                    _.transform(nt),
                                    _.bimap(
                                      _.transform(nt),
                                      _.bimap(
                                        _.transform(nt),
                                        _.bimap(
                                          _.transform(nt),
                                          _.bimap(
                                            _.transform(nt),
                                            _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
      }

    implicit def Cop21Sequence[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor],
        seq8: Sequence[A9#Cop, Functor],
        seq9: Sequence[A10#Cop, Functor],
        seq10: Sequence[A11#Cop, Functor],
        seq11: Sequence[A12#Cop, Functor],
        seq12: Sequence[A13#Cop, Functor],
        seq13: Sequence[A14#Cop, Functor],
        seq14: Sequence[A15#Cop, Functor],
        seq15: Sequence[A16#Cop, Functor],
        seq16: Sequence[A17#Cop, Functor],
        seq17: Sequence[A18#Cop, Functor],
        seq18: Sequence[A19#Cop, Functor],
        seq19: Sequence[A20#Cop, Functor],
        seq20: Sequence[A21#Cop, Functor]
    ): Sequence[Cop21[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], Functor] =
      new Sequence[Cop21[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], Functor] {
        def sequence[F[_]](
            c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]
        )(implicit F: Functor[F]): F[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
          c.run match {
            case -\/(x)                => F.map(x.sequence)(y => Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](-\/(y)))
            case \/-(-\/(x))           => F.map(x.sequence)(y => Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))      => F.map(x.sequence)(y => Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x)))) => F.map(x.sequence)(y => Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x))))) =>
              F.map(x.sequence)(y => Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) =>
              F.map(x.sequence)(y => Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) =>
              F.map(x.sequence)(y => Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) =>
              F.map(x.sequence)(y => Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) =>
              F.map(x.sequence)(y => Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) =>
              F.map(x.sequence)(y => Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) =>
              F.map(x.sequence)(
                y => Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) =>
              F.map(x.sequence)(
                y => Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) =>
              F.map(x.sequence)(
                y => Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) =>
              F.map(x.sequence)(
                y => Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(y))))))))))))))))))))
                  )
              )
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A1#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A1#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A1#Cop[F]] = c.run match {
          case -\/(x) => Some(x)
          case _      => None
        }
        def reverseGet(x: A1#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](-\/(x))
      }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A2#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A2#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A2#Cop[F]] = c.run match {
          case \/-(-\/(x)) => Some(x)
          case _           => None
        }
        def reverseGet(x: A2#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(-\/(x)))
      }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A3#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A3#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A3#Cop[F]] = c.run match {
          case \/-(\/-(-\/(x))) => Some(x)
          case _                => None
        }
        def reverseGet(x: A3#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(-\/(x))))
      }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A4#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A4#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A4#Cop[F]] = c.run match {
          case \/-(\/-(\/-(-\/(x)))) => Some(x)
          case _                     => None
        }
        def reverseGet(x: A4#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(-\/(x)))))
      }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A5#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A5#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A5#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
          case _                          => None
        }
        def reverseGet(x: A5#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(-\/(x))))))
      }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A6#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A6#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A6#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
          case _                               => None
        }
        def reverseGet(x: A6#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
      }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A6#Cop[F]] = Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A7#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A7#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A7#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
          case _                                    => None
        }
        def reverseGet(x: A7#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
      }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A7#Cop[F]] = Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A8#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A8#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A8#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => Some(x)
          case _                                         => None
        }
        def reverseGet(x: A8#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))
      }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A8#Cop[F]] = Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma7F.getOption(_))

    implicit def prisma8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A9#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A9#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A9#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => Some(x)
          case _                                              => None
        }
        def reverseGet(x: A9#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))
      }

    implicit def inja8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A9#Cop[F]] = Inj.instance(prisma8F.reverseGet(_))

    implicit def inja8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A9#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma8F.getOption(_))

    implicit def prisma9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A10#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A10#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A10#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) => Some(x)
          case _                                                   => None
        }
        def reverseGet(x: A10#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))
      }

    implicit def inja9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A10#Cop[F]] = Inj.instance(prisma9F.reverseGet(_))

    implicit def inja9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A10#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma9F.getOption(_))

    implicit def prisma10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A11#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A11#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A11#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) => Some(x)
          case _                                                        => None
        }
        def reverseGet(x: A11#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))
      }

    implicit def inja10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A11#Cop[F]] = Inj.instance(prisma10F.reverseGet(_))

    implicit def inja10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A11#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma10F.getOption(_))

    implicit def prisma11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A12#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A12#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A12#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) => Some(x)
          case _                                                             => None
        }
        def reverseGet(x: A12#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))
      }

    implicit def inja11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A12#Cop[F]] = Inj.instance(prisma11F.reverseGet(_))

    implicit def inja11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A12#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma11F.getOption(_))

    implicit def prisma12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A13#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A13#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A13#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) => Some(x)
          case _                                                                  => None
        }
        def reverseGet(x: A13#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))
      }

    implicit def inja12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A13#Cop[F]] = Inj.instance(prisma12F.reverseGet(_))

    implicit def inja12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A13#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma12F.getOption(_))

    implicit def prisma13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A14#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A14#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A14#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) => Some(x)
          case _                                                                       => None
        }
        def reverseGet(x: A14#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))
      }

    implicit def inja13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A14#Cop[F]] = Inj.instance(prisma13F.reverseGet(_))

    implicit def inja13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A14#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma13F.getOption(_))

    implicit def prisma14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A15#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A15#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A15#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))) => Some(x)
          case _                                                                            => None
        }
        def reverseGet(x: A15#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))
      }

    implicit def inja14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A15#Cop[F]] = Inj.instance(prisma14F.reverseGet(_))

    implicit def inja14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A15#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma14F.getOption(_))

    implicit def prisma15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A16#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A16#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A16#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))) => Some(x)
          case _                                                                                 => None
        }
        def reverseGet(x: A16#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))
      }

    implicit def inja15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A16#Cop[F]] = Inj.instance(prisma15F.reverseGet(_))

    implicit def inja15FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A16#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma15F.getOption(_))

    implicit def prisma16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A17#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A17#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A17#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))) => Some(x)
          case _                                                                                      => None
        }
        def reverseGet(x: A17#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))
          )
      }

    implicit def inja16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A17#Cop[F]] = Inj.instance(prisma16F.reverseGet(_))

    implicit def inja16FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A17#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma16F.getOption(_))

    implicit def prisma17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A18#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A18#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A18#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))) => Some(x)
          case _                                                                                           => None
        }
        def reverseGet(x: A18#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))
          )
      }

    implicit def inja17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A18#Cop[F]] = Inj.instance(prisma17F.reverseGet(_))

    implicit def inja17FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A18#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma17F.getOption(_))

    implicit def prisma18F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A19#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A19#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A19#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))) => Some(x)
          case _                                                                                                => None
        }
        def reverseGet(x: A19#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))))
          )
      }

    implicit def inja18F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A19#Cop[F]] = Inj.instance(prisma18F.reverseGet(_))

    implicit def inja18FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A19#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma18F.getOption(_))

    implicit def prisma19F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A20#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A20#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A20#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))))) => Some(x)
          case _                                                                                                     => None
        }
        def reverseGet(x: A20#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))))
          )
      }

    implicit def inja19F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A20#Cop[F]] = Inj.instance(prisma19F.reverseGet(_))

    implicit def inja19FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A20#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma19F.getOption(_))

    implicit def prisma20F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A21#Cop[F]] =
      new Prism[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A21#Cop[F]] {
        def getOption(c: Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]): Option[A21#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))))))))))) => Some(x)
          case _                                                                                                     => None
        }
        def reverseGet(x: A21#Cop[F]): Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21] =
          Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))))))))))
          )
      }

    implicit def inja20F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A21#Cop[F]] = Inj.instance(prisma20F.reverseGet(_))

    implicit def inja20FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A21#Cop[F]], Cop21[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] = Inj.instance(prisma20F.getOption(_))
  }

  object Cop21 extends Cop21LP {
    implicit def prisma0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A1#Cop[Id]] =
      prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A1#Cop[Id]] =
      inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A2#Cop[Id]] =
      prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A2#Cop[Id]] =
      inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A3#Cop[Id]] =
      prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A3#Cop[Id]] =
      inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A4#Cop[Id]] =
      prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A4#Cop[Id]] =
      inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A5#Cop[Id]] =
      prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A5#Cop[Id]] =
      inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A6#Cop[Id]] =
      prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A6#Cop[Id]] =
      inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A7#Cop[Id]] =
      prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A7#Cop[Id]] =
      inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A8#Cop[Id]] =
      prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A8#Cop[Id]] =
      inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A9#Cop[Id]] =
      prisma8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A9#Cop[Id]] =
      inja8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja8IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A9#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A10#Cop[Id]] =
      prisma9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A10#Cop[Id]] =
      inja9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja9IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A10#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A11#Cop[Id]] =
      prisma10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A11#Cop[Id]] =
      inja10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja10IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A11#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A12#Cop[Id]] =
      prisma11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A12#Cop[Id]] =
      inja11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja11IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A12#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A13#Cop[Id]] =
      prisma12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A13#Cop[Id]] =
      inja12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja12IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A13#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A14#Cop[Id]] =
      prisma13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A14#Cop[Id]] =
      inja13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja13IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A14#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A15#Cop[Id]] =
      prisma14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A15#Cop[Id]] =
      inja14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja14IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A15#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A16#Cop[Id]] =
      prisma15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A16#Cop[Id]] =
      inja15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja15IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A16#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja15FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A17#Cop[Id]] =
      prisma16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A17#Cop[Id]] =
      inja16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja16IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A17#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja16FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A18#Cop[Id]] =
      prisma17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A18#Cop[Id]] =
      inja17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja17IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A18#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja17FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma18Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A19#Cop[Id]] =
      prisma18F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja18Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A19#Cop[Id]] =
      inja18F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja18IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A19#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja18FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma19Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A20#Cop[Id]] =
      prisma19F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja19Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A20#Cop[Id]] =
      inja19F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja19IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A20#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja19FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def prisma20Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Prism[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A21#Cop[Id]] =
      prisma20F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja20Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor
    ]: Inj[Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21], A21#Cop[Id]] =
      inja20F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]

    implicit def inja20IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor]
        : Inj[Option[A21#Cop[Id]], Cop21[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]] =
      inja20FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21]
  }

  @newtype case class Prod22[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
      run: (
          A1#Prod[F],
          A2#Prod[F],
          A3#Prod[F],
          A4#Prod[F],
          A5#Prod[F],
          A6#Prod[F],
          A7#Prod[F],
          A8#Prod[F],
          A9#Prod[F],
          A10#Prod[F],
          A11#Prod[F],
          A12#Prod[F],
          A13#Prod[F],
          A14#Prod[F],
          A15#Prod[F],
          A16#Prod[F],
          A17#Prod[F],
          A18#Prod[F],
          A19#Prod[F],
          A20#Prod[F],
          A21#Prod[F],
          A22#Prod[F]
      )
  ) {
    def t1: A1#Prod[F] = run._1
    def t2: A2#Prod[F] = run._2
    def t3: A3#Prod[F] = run._3
    def t4: A4#Prod[F] = run._4
    def t5: A5#Prod[F] = run._5
    def t6: A6#Prod[F] = run._6
    def t7: A7#Prod[F] = run._7
    def t8: A8#Prod[F] = run._8
    def t9: A9#Prod[F] = run._9
    def t10: A10#Prod[F] = run._10
    def t11: A11#Prod[F] = run._11
    def t12: A12#Prod[F] = run._12
    def t13: A13#Prod[F] = run._13
    def t14: A14#Prod[F] = run._14
    def t15: A15#Prod[F] = run._15
    def t16: A16#Prod[F] = run._16
    def t17: A17#Prod[F] = run._17
    def t18: A18#Prod[F] = run._18
    def t19: A19#Prod[F] = run._19
    def t20: A20#Prod[F] = run._20
    def t21: A21#Prod[F] = run._21
    def t22: A22#Prod[F] = run._22

  }

  trait Prod22LP {
    // format: off
    implicit def Prod22Transform[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](implicit trans0: Transform[A1#Prod], trans1: Transform[A2#Prod], trans2: Transform[A3#Prod], trans3: Transform[A4#Prod], trans4: Transform[A5#Prod], trans5: Transform[A6#Prod], trans6: Transform[A7#Prod], trans7: Transform[A8#Prod], trans8: Transform[A9#Prod], trans9: Transform[A10#Prod], trans10: Transform[A11#Prod], trans11: Transform[A12#Prod], trans12: Transform[A13#Prod], trans13: Transform[A14#Prod], trans14: Transform[A15#Prod], trans15: Transform[A16#Prod], trans16: Transform[A17#Prod], trans17: Transform[A18#Prod], trans18: Transform[A19#Prod], trans19: Transform[A20#Prod], trans20: Transform[A21#Prod], trans21: Transform[A22#Prod]): Transform[Prod22[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      new Transform[Prod22[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] {
        def transform[F[_], G[_]](nt: F ~> G): Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] => Prod22[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          p => Prod22[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]((trans0.transform(nt)(p.t1), trans1.transform(nt)(p.t2), trans2.transform(nt)(p.t3), trans3.transform(nt)(p.t4), trans4.transform(nt)(p.t5), trans5.transform(nt)(p.t6), trans6.transform(nt)(p.t7), trans7.transform(nt)(p.t8), trans8.transform(nt)(p.t9), trans9.transform(nt)(p.t10), trans10.transform(nt)(p.t11), trans11.transform(nt)(p.t12), trans12.transform(nt)(p.t13), trans13.transform(nt)(p.t14), trans14.transform(nt)(p.t15), trans15.transform(nt)(p.t16), trans16.transform(nt)(p.t17), trans17.transform(nt)(p.t18), trans18.transform(nt)(p.t19), trans19.transform(nt)(p.t20), trans20.transform(nt)(p.t21), trans21.transform(nt)(p.t22)))
      }

    implicit def Prod22Sequence[A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](implicit seq0: Sequence[A1#Prod, Apply], seq1: Sequence[A2#Prod, Apply], seq2: Sequence[A3#Prod, Apply], seq3: Sequence[A4#Prod, Apply], seq4: Sequence[A5#Prod, Apply], seq5: Sequence[A6#Prod, Apply], seq6: Sequence[A7#Prod, Apply], seq7: Sequence[A8#Prod, Apply], seq8: Sequence[A9#Prod, Apply], seq9: Sequence[A10#Prod, Apply], seq10: Sequence[A11#Prod, Apply], seq11: Sequence[A12#Prod, Apply], seq12: Sequence[A13#Prod, Apply], seq13: Sequence[A14#Prod, Apply], seq14: Sequence[A15#Prod, Apply], seq15: Sequence[A16#Prod, Apply], seq16: Sequence[A17#Prod, Apply], seq17: Sequence[A18#Prod, Apply], seq18: Sequence[A19#Prod, Apply], seq19: Sequence[A20#Prod, Apply], seq20: Sequence[A21#Prod, Apply], seq21: Sequence[A22#Prod, Apply]): Sequence[Prod22[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], Apply] =
      new Sequence[Prod22[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], Apply] {
        def sequence[F[_]](p: Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22])(implicit F: Apply[F]): F[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
          F.ap(seq21.sequence(p.t22))(F.ap(seq20.sequence(p.t21))(F.ap(seq19.sequence(p.t20))(F.ap(seq18.sequence(p.t19))(F.ap(seq17.sequence(p.t18))(F.ap(seq16.sequence(p.t17))(F.ap(seq15.sequence(p.t16))(F.ap(seq14.sequence(p.t15))(F.ap(seq13.sequence(p.t14))(F.ap(seq12.sequence(p.t13))(F.ap(seq11.sequence(p.t12))(F.ap(seq10.sequence(p.t11))(F.ap(seq9.sequence(p.t10))(F.ap(seq8.sequence(p.t9))(F.ap(seq7.sequence(p.t8))(F.ap(seq6.sequence(p.t7))(F.ap(seq5.sequence(p.t6))(F.ap(seq4.sequence(p.t5))(F.ap(seq3.sequence(p.t4))(F.ap(seq2.sequence(p.t3))(F.ap(seq1.sequence(p.t2))(F.map(seq0.sequence[F](p.t1))((i0: A1#Prod[Id]) => (i1: A2#Prod[Id]) => (i2: A3#Prod[Id]) => (i3: A4#Prod[Id]) => (i4: A5#Prod[Id]) => (i5: A6#Prod[Id]) => (i6: A7#Prod[Id]) => (i7: A8#Prod[Id]) => (i8: A9#Prod[Id]) => (i9: A10#Prod[Id]) => (i10: A11#Prod[Id]) => (i11: A12#Prod[Id]) => (i12: A13#Prod[Id]) => (i13: A14#Prod[Id]) => (i14: A15#Prod[Id]) => (i15: A16#Prod[Id]) => (i16: A17#Prod[Id]) => (i17: A18#Prod[Id]) => (i18: A19#Prod[Id]) => (i19: A20#Prod[Id]) => (i20: A21#Prod[Id]) => (i21: A22#Prod[Id]) => Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]((i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21))))))))))))))))))))))))
      }
    // format: on

    implicit def Prod22Monoid[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[
          (
              A1#Prod[F],
              A2#Prod[F],
              A3#Prod[F],
              A4#Prod[F],
              A5#Prod[F],
              A6#Prod[F],
              A7#Prod[F],
              A8#Prod[F],
              A9#Prod[F],
              A10#Prod[F],
              A11#Prod[F],
              A12#Prod[F],
              A13#Prod[F],
              A14#Prod[F],
              A15#Prod[F],
              A16#Prod[F],
              A17#Prod[F],
              A18#Prod[F],
              A19#Prod[F],
              A20#Prod[F],
              A21#Prod[F],
              A22#Prod[F]
          )
        ]
    ): Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      MF.xmap(
        M,
        Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
          _: (
              A1#Prod[F],
              A2#Prod[F],
              A3#Prod[F],
              A4#Prod[F],
              A5#Prod[F],
              A6#Prod[F],
              A7#Prod[F],
              A8#Prod[F],
              A9#Prod[F],
              A10#Prod[F],
              A11#Prod[F],
              A12#Prod[F],
              A13#Prod[F],
              A14#Prod[F],
              A15#Prod[F],
              A16#Prod[F],
              A17#Prod[F],
              A18#Prod[F],
              A19#Prod[F],
              A20#Prod[F],
              A21#Prod[F],
              A22#Prod[F]
          )
        ),
        (_: Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]).run
      )

    implicit def lifta0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A1#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (x, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A1#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t1)

    implicit def lifta1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A2#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, x, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A2#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t2)

    implicit def lifta2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A3#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, x, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A3#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t3)

    implicit def lifta3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A4#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, x, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A4#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t4)

    implicit def lifta4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A5#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, x, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A5#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t5)

    implicit def lifta5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A6#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, x, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A6#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t6)

    implicit def lifta6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A7#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, x, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A7#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t7)

    implicit def lifta7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A8#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, x, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A8#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t8)

    implicit def lifta8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A9#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, x, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A9#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t9)

    implicit def lifta9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A10#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, x, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A10#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t10)

    implicit def lifta10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A11#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, x, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A11#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t11)

    implicit def lifta11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A12#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, x, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A12#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t12)

    implicit def lifta12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A13#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, x, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A13#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t13)

    implicit def lifta13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A14#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, x, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A14#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t14)

    implicit def lifta14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A15#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, x, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A15#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t15)

    implicit def lifta15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A16#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, x, t.t17, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta15FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A16#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t16)

    implicit def lifta16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A17#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, x, t.t18, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta16FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A17#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t17)

    implicit def lifta17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A18#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, x, t.t19, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta17FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A18#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t18)

    implicit def lifta18F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A19#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, x, t.t20, t.t21, t.t22)
          )
      )
    }

    implicit def lifta18FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A19#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t19)

    implicit def lifta19F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A20#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, x, t.t21, t.t22)
          )
      )
    }

    implicit def lifta19FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A20#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t20)

    implicit def lifta20F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A21#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, x, t.t22)
          )
      )
    }

    implicit def lifta20FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A21#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t21)

    implicit def lifta21F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
        implicit M: Monoid[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A22#Prod[F]] = {
      val t = M.zero
      Inj.instance(
        x =>
          Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            (t.t1, t.t2, t.t3, t.t4, t.t5, t.t6, t.t7, t.t8, t.t9, t.t10, t.t11, t.t12, t.t13, t.t14, t.t15, t.t16, t.t17, t.t18, t.t19, t.t20, t.t21, x)
          )
      )
    }

    implicit def lifta21FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[A22#Prod[F], Prod22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(_.t22)
  }

  object Prod22 extends Prod22LP {
    implicit def lifta0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A1#Prod[Id]] =
      lifta0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta0IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A1#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A2#Prod[Id]] =
      lifta1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta1IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A2#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A3#Prod[Id]] =
      lifta2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta2IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A3#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A4#Prod[Id]] =
      lifta3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta3IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A4#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A5#Prod[Id]] =
      lifta4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta4IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A5#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A6#Prod[Id]] =
      lifta5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta5IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A6#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A7#Prod[Id]] =
      lifta6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta6IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A7#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A8#Prod[Id]] =
      lifta7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta7IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A8#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A9#Prod[Id]] =
      lifta8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta8IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A9#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A10#Prod[Id]] =
      lifta9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta9IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A10#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A11#Prod[Id]] =
      lifta10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta10IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A11#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A12#Prod[Id]] =
      lifta11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta11IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A12#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A13#Prod[Id]] =
      lifta12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta12IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A13#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A14#Prod[Id]] =
      lifta13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta13IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A14#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A15#Prod[Id]] =
      lifta14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta14IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A15#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A16#Prod[Id]] =
      lifta15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta15IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A16#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta15FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A17#Prod[Id]] =
      lifta16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta16IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A17#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta16FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A18#Prod[Id]] =
      lifta17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta17IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A18#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta17FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta18Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A19#Prod[Id]] =
      lifta18F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta18IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A19#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta18FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta19Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A20#Prod[Id]] =
      lifta19F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta19IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A20#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta19FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta20Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A21#Prod[Id]] =
      lifta20F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta20IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A21#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta20FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta21Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit M: Monoid[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]]
    ): Inj[Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A22#Prod[Id]] =
      lifta21F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def lifta21IdInverse[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[A22#Prod[Id], Prod22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      lifta21FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]
  }

  @newtype case class Cop22[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor](
      run: (A1#Cop[F] \/ (A2#Cop[F] \/ (A3#Cop[F] \/ (A4#Cop[F] \/ (A5#Cop[F] \/ (A6#Cop[F] \/ (A7#Cop[F] \/ (A8#Cop[F] \/ (A9#Cop[F] \/ (A10#Cop[F] \/ (A11#Cop[F] \/ (A12#Cop[F] \/ (A13#Cop[F] \/ (A14#Cop[
        F
      ] \/ (A15#Cop[F] \/ (A16#Cop[F] \/ (A17#Cop[F] \/ (A18#Cop[F] \/ (A19#Cop[F] \/ (A20#Cop[F] \/ (A21#Cop[F] \/ A22#Cop[F])))))))))))))))))))))
  )

  trait Cop22LP {
    implicit def Cop22Transform[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit trans0: Transform[A1#Cop],
        trans1: Transform[A2#Cop],
        trans2: Transform[A3#Cop],
        trans3: Transform[A4#Cop],
        trans4: Transform[A5#Cop],
        trans5: Transform[A6#Cop],
        trans6: Transform[A7#Cop],
        trans7: Transform[A8#Cop],
        trans8: Transform[A9#Cop],
        trans9: Transform[A10#Cop],
        trans10: Transform[A11#Cop],
        trans11: Transform[A12#Cop],
        trans12: Transform[A13#Cop],
        trans13: Transform[A14#Cop],
        trans14: Transform[A15#Cop],
        trans15: Transform[A16#Cop],
        trans16: Transform[A17#Cop],
        trans17: Transform[A18#Cop],
        trans18: Transform[A19#Cop],
        trans19: Transform[A20#Cop],
        trans20: Transform[A21#Cop],
        trans21: Transform[A22#Cop]
    ): Transform[Cop22[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      new Transform[Cop22[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] {
        def transform[F[_], G[_]](nt: F ~> G): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] => Cop22[
          G,
          A1,
          A2,
          A3,
          A4,
          A5,
          A6,
          A7,
          A8,
          A9,
          A10,
          A11,
          A12,
          A13,
          A14,
          A15,
          A16,
          A17,
          A18,
          A19,
          A20,
          A21,
          A22
        ] =
          c =>
            Cop22[G, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
              c.run.bimap(
                _.transform(nt),
                _.bimap(
                  _.transform(nt),
                  _.bimap(
                    _.transform(nt),
                    _.bimap(
                      _.transform(nt),
                      _.bimap(
                        _.transform(nt),
                        _.bimap(
                          _.transform(nt),
                          _.bimap(
                            _.transform(nt),
                            _.bimap(
                              _.transform(nt),
                              _.bimap(
                                _.transform(nt),
                                _.bimap(
                                  _.transform(nt),
                                  _.bimap(
                                    _.transform(nt),
                                    _.bimap(
                                      _.transform(nt),
                                      _.bimap(
                                        _.transform(nt),
                                        _.bimap(
                                          _.transform(nt),
                                          _.bimap(
                                            _.transform(nt),
                                            _.bimap(
                                              _.transform(nt),
                                              _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.bimap(_.transform(nt), _.transform(nt))))))
                                            )
                                          )
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
      }

    implicit def Cop22Sequence[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ](
        implicit seq0: Sequence[A1#Cop, Functor],
        seq1: Sequence[A2#Cop, Functor],
        seq2: Sequence[A3#Cop, Functor],
        seq3: Sequence[A4#Cop, Functor],
        seq4: Sequence[A5#Cop, Functor],
        seq5: Sequence[A6#Cop, Functor],
        seq6: Sequence[A7#Cop, Functor],
        seq7: Sequence[A8#Cop, Functor],
        seq8: Sequence[A9#Cop, Functor],
        seq9: Sequence[A10#Cop, Functor],
        seq10: Sequence[A11#Cop, Functor],
        seq11: Sequence[A12#Cop, Functor],
        seq12: Sequence[A13#Cop, Functor],
        seq13: Sequence[A14#Cop, Functor],
        seq14: Sequence[A15#Cop, Functor],
        seq15: Sequence[A16#Cop, Functor],
        seq16: Sequence[A17#Cop, Functor],
        seq17: Sequence[A18#Cop, Functor],
        seq18: Sequence[A19#Cop, Functor],
        seq19: Sequence[A20#Cop, Functor],
        seq20: Sequence[A21#Cop, Functor],
        seq21: Sequence[A22#Cop, Functor]
    ): Sequence[Cop22[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], Functor] =
      new Sequence[Cop22[?[_], A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], Functor] {
        def sequence[F[_]](
            c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]
        )(implicit F: Functor[F]): F[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
          c.run match {
            case -\/(x)                => F.map(x.sequence)(y => Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](-\/(y)))
            case \/-(-\/(x))           => F.map(x.sequence)(y => Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(-\/(y))))
            case \/-(\/-(-\/(x)))      => F.map(x.sequence)(y => Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(-\/(y)))))
            case \/-(\/-(\/-(-\/(x)))) => F.map(x.sequence)(y => Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(-\/(y))))))
            case \/-(\/-(\/-(\/-(-\/(x))))) =>
              F.map(x.sequence)(y => Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(-\/(y)))))))
            case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) =>
              F.map(x.sequence)(y => Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(-\/(y))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) =>
              F.map(x.sequence)(y => Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) =>
              F.map(x.sequence)(y => Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) =>
              F.map(x.sequence)(y => Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) =>
              F.map(x.sequence)(
                y => Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) =>
              F.map(x.sequence)(
                y => Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) =>
              F.map(x.sequence)(
                y => Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) =>
              F.map(x.sequence)(
                y => Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y))))))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(y)))))))))))))))))))))
                  )
              )
            case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))))))))))) =>
              F.map(x.sequence)(
                y =>
                  Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
                    \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(y)))))))))))))))))))))
                  )
              )
          }
      }

    implicit def prisma0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A1#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A1#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A1#Cop[F]] = c.run match {
          case -\/(x) => Some(x)
          case _      => None
        }
        def reverseGet(x: A1#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](-\/(x))
      }

    implicit def inja0F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A1#Cop[F]] = Inj.instance(prisma0F.reverseGet(_))

    implicit def inja0FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A1#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma0F.getOption(_))

    implicit def prisma1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A2#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A2#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A2#Cop[F]] = c.run match {
          case \/-(-\/(x)) => Some(x)
          case _           => None
        }
        def reverseGet(x: A2#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(-\/(x)))
      }

    implicit def inja1F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A2#Cop[F]] = Inj.instance(prisma1F.reverseGet(_))

    implicit def inja1FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A2#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma1F.getOption(_))

    implicit def prisma2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A3#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A3#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A3#Cop[F]] = c.run match {
          case \/-(\/-(-\/(x))) => Some(x)
          case _                => None
        }
        def reverseGet(x: A3#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(-\/(x))))
      }

    implicit def inja2F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A3#Cop[F]] = Inj.instance(prisma2F.reverseGet(_))

    implicit def inja2FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A3#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma2F.getOption(_))

    implicit def prisma3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A4#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A4#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A4#Cop[F]] = c.run match {
          case \/-(\/-(\/-(-\/(x)))) => Some(x)
          case _                     => None
        }
        def reverseGet(x: A4#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(-\/(x)))))
      }

    implicit def inja3F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A4#Cop[F]] = Inj.instance(prisma3F.reverseGet(_))

    implicit def inja3FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A4#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma3F.getOption(_))

    implicit def prisma4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A5#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A5#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A5#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(-\/(x))))) => Some(x)
          case _                          => None
        }
        def reverseGet(x: A5#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(-\/(x))))))
      }

    implicit def inja4F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A5#Cop[F]] = Inj.instance(prisma4F.reverseGet(_))

    implicit def inja4FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A5#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma4F.getOption(_))

    implicit def prisma5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A6#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A6#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A6#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(-\/(x)))))) => Some(x)
          case _                               => None
        }
        def reverseGet(x: A6#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(-\/(x)))))))
      }

    implicit def inja5F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A6#Cop[F]] = Inj.instance(prisma5F.reverseGet(_))

    implicit def inja5FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A6#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma5F.getOption(_))

    implicit def prisma6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A7#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A7#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A7#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))) => Some(x)
          case _                                    => None
        }
        def reverseGet(x: A7#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))
      }

    implicit def inja6F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A7#Cop[F]] = Inj.instance(prisma6F.reverseGet(_))

    implicit def inja6FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A7#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma6F.getOption(_))

    implicit def prisma7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A8#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A8#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A8#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))) => Some(x)
          case _                                         => None
        }
        def reverseGet(x: A8#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))
      }

    implicit def inja7F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A8#Cop[F]] = Inj.instance(prisma7F.reverseGet(_))

    implicit def inja7FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A8#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma7F.getOption(_))

    implicit def prisma8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A9#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A9#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A9#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))) => Some(x)
          case _                                              => None
        }
        def reverseGet(x: A9#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))
      }

    implicit def inja8F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A9#Cop[F]] = Inj.instance(prisma8F.reverseGet(_))

    implicit def inja8FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A9#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma8F.getOption(_))

    implicit def prisma9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A10#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A10#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A10#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))) => Some(x)
          case _                                                   => None
        }
        def reverseGet(x: A10#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))
      }

    implicit def inja9F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A10#Cop[F]] = Inj.instance(prisma9F.reverseGet(_))

    implicit def inja9FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A10#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma9F.getOption(_))

    implicit def prisma10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A11#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A11#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A11#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))) => Some(x)
          case _                                                        => None
        }
        def reverseGet(x: A11#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))
      }

    implicit def inja10F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A11#Cop[F]] = Inj.instance(prisma10F.reverseGet(_))

    implicit def inja10FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A11#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma10F.getOption(_))

    implicit def prisma11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A12#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A12#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A12#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))) => Some(x)
          case _                                                             => None
        }
        def reverseGet(x: A12#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))
      }

    implicit def inja11F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A12#Cop[F]] = Inj.instance(prisma11F.reverseGet(_))

    implicit def inja11FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A12#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma11F.getOption(_))

    implicit def prisma12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A13#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A13#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A13#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))) => Some(x)
          case _                                                                  => None
        }
        def reverseGet(x: A13#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))
      }

    implicit def inja12F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A13#Cop[F]] = Inj.instance(prisma12F.reverseGet(_))

    implicit def inja12FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A13#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma12F.getOption(_))

    implicit def prisma13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A14#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A14#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A14#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))) => Some(x)
          case _                                                                       => None
        }
        def reverseGet(x: A14#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))
      }

    implicit def inja13F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A14#Cop[F]] = Inj.instance(prisma13F.reverseGet(_))

    implicit def inja13FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A14#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma13F.getOption(_))

    implicit def prisma14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A15#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A15#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A15#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))) => Some(x)
          case _                                                                            => None
        }
        def reverseGet(x: A15#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))
      }

    implicit def inja14F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A15#Cop[F]] = Inj.instance(prisma14F.reverseGet(_))

    implicit def inja14FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A15#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma14F.getOption(_))

    implicit def prisma15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A16#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A16#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A16#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))) => Some(x)
          case _                                                                                 => None
        }
        def reverseGet(x: A16#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))
          )
      }

    implicit def inja15F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A16#Cop[F]] = Inj.instance(prisma15F.reverseGet(_))

    implicit def inja15FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A16#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma15F.getOption(_))

    implicit def prisma16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A17#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A17#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A17#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))) => Some(x)
          case _                                                                                      => None
        }
        def reverseGet(x: A17#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))
          )
      }

    implicit def inja16F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A17#Cop[F]] = Inj.instance(prisma16F.reverseGet(_))

    implicit def inja16FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A17#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma16F.getOption(_))

    implicit def prisma17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A18#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A18#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A18#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))) => Some(x)
          case _                                                                                           => None
        }
        def reverseGet(x: A18#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))
          )
      }

    implicit def inja17F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A18#Cop[F]] = Inj.instance(prisma17F.reverseGet(_))

    implicit def inja17FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A18#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma17F.getOption(_))

    implicit def prisma18F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A19#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A19#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A19#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))) => Some(x)
          case _                                                                                                => None
        }
        def reverseGet(x: A19#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))))
          )
      }

    implicit def inja18F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A19#Cop[F]] = Inj.instance(prisma18F.reverseGet(_))

    implicit def inja18FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A19#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma18F.getOption(_))

    implicit def prisma19F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A20#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A20#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A20#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))))) => Some(x)
          case _                                                                                                     => None
        }
        def reverseGet(x: A20#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))))
          )
      }

    implicit def inja19F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A20#Cop[F]] = Inj.instance(prisma19F.reverseGet(_))

    implicit def inja19FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A20#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma19F.getOption(_))

    implicit def prisma20F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A21#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A21#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A21#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x))))))))))))))))))))) => Some(x)
          case _                                                                                                          => None
        }
        def reverseGet(x: A21#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(-\/(x)))))))))))))))))))))
          )
      }

    implicit def inja20F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A21#Cop[F]] = Inj.instance(prisma20F.reverseGet(_))

    implicit def inja20FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A21#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma20F.getOption(_))

    implicit def prisma21F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A22#Cop[F]] =
      new Prism[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A22#Cop[F]] {
        def getOption(c: Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]): Option[A22#Cop[F]] = c.run match {
          case \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x))))))))))))))))))))) => Some(x)
          case _                                                                                                          => None
        }
        def reverseGet(x: A22#Cop[F]): Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22] =
          Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22](
            \/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(\/-(x)))))))))))))))))))))
          )
      }

    implicit def inja21F[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A22#Cop[F]] = Inj.instance(prisma21F.reverseGet(_))

    implicit def inja21FInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A22#Cop[F]], Cop22[F, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] = Inj.instance(prisma21F.getOption(_))
  }

  object Cop22 extends Cop22LP {
    implicit def prisma0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A1#Cop[Id]] =
      prisma0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja0Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A1#Cop[Id]] =
      inja0F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja0IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A1#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja0FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A2#Cop[Id]] =
      prisma1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja1Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A2#Cop[Id]] =
      inja1F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja1IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A2#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja1FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A3#Cop[Id]] =
      prisma2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja2Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A3#Cop[Id]] =
      inja2F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja2IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A3#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja2FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A4#Cop[Id]] =
      prisma3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja3Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A4#Cop[Id]] =
      inja3F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja3IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A4#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja3FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A5#Cop[Id]] =
      prisma4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja4Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A5#Cop[Id]] =
      inja4F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja4IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A5#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja4FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A6#Cop[Id]] =
      prisma5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja5Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A6#Cop[Id]] =
      inja5F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja5IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A6#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja5FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A7#Cop[Id]] =
      prisma6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja6Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A7#Cop[Id]] =
      inja6F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja6IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A7#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja6FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A8#Cop[Id]] =
      prisma7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja7Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A8#Cop[Id]] =
      inja7F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja7IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A8#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja7FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A9#Cop[Id]] =
      prisma8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja8Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A9#Cop[Id]] =
      inja8F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja8IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A9#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja8FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A10#Cop[Id]] =
      prisma9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja9Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A10#Cop[Id]] =
      inja9F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja9IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A10#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja9FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A11#Cop[Id]] =
      prisma10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja10Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A11#Cop[Id]] =
      inja10F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja10IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A11#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja10FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A12#Cop[Id]] =
      prisma11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja11Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A12#Cop[Id]] =
      inja11F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja11IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A12#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja11FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A13#Cop[Id]] =
      prisma12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja12Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A13#Cop[Id]] =
      inja12F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja12IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A13#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja12FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A14#Cop[Id]] =
      prisma13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja13Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A14#Cop[Id]] =
      inja13F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja13IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A14#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja13FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A15#Cop[Id]] =
      prisma14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja14Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A15#Cop[Id]] =
      inja14F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja14IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A15#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja14FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A16#Cop[Id]] =
      prisma15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja15Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A16#Cop[Id]] =
      inja15F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja15IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A16#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja15FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A17#Cop[Id]] =
      prisma16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja16Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A17#Cop[Id]] =
      inja16F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja16IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A17#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja16FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A18#Cop[Id]] =
      prisma17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja17Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A18#Cop[Id]] =
      inja17F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja17IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A18#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja17FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma18Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A19#Cop[Id]] =
      prisma18F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja18Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A19#Cop[Id]] =
      inja18F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja18IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A19#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja18FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma19Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A20#Cop[Id]] =
      prisma19F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja19Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A20#Cop[Id]] =
      inja19F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja19IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A20#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja19FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma20Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A21#Cop[Id]] =
      prisma20F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja20Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A21#Cop[Id]] =
      inja20F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja20IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A21#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja20FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def prisma21Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Prism[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A22#Cop[Id]] =
      prisma21F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja21Id[
        A1 <: AndXor,
        A2 <: AndXor,
        A3 <: AndXor,
        A4 <: AndXor,
        A5 <: AndXor,
        A6 <: AndXor,
        A7 <: AndXor,
        A8 <: AndXor,
        A9 <: AndXor,
        A10 <: AndXor,
        A11 <: AndXor,
        A12 <: AndXor,
        A13 <: AndXor,
        A14 <: AndXor,
        A15 <: AndXor,
        A16 <: AndXor,
        A17 <: AndXor,
        A18 <: AndXor,
        A19 <: AndXor,
        A20 <: AndXor,
        A21 <: AndXor,
        A22 <: AndXor
    ]: Inj[Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22], A22#Cop[Id]] =
      inja21F[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]

    implicit def inja21IdInverse[F[_], A1 <: AndXor, A2 <: AndXor, A3 <: AndXor, A4 <: AndXor, A5 <: AndXor, A6 <: AndXor, A7 <: AndXor, A8 <: AndXor, A9 <: AndXor, A10 <: AndXor, A11 <: AndXor, A12 <: AndXor, A13 <: AndXor, A14 <: AndXor, A15 <: AndXor, A16 <: AndXor, A17 <: AndXor, A18 <: AndXor, A19 <: AndXor, A20 <: AndXor, A21 <: AndXor, A22 <: AndXor]
        : Inj[Option[A22#Cop[Id]], Cop22[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]] =
      inja21FInverse[Id, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22]
  }

}
